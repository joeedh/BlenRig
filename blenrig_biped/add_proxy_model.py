import bpy

############################ Add Proxy Model ############################ 

def add_proxy_model(self, context):
    
    # Define the coordinates of the vertices. Each vertex is defined by a tuple of 3 floats.
    coords = [(0.07697752118110657, 0.052143778651952744, 0.07170328497886658), (0.07776781916618347, 0.023501230403780937, 0.07489295303821564), (0.06699967384338379, 0.061365578323602676, 0.06909504532814026), (0.06629844009876251, 0.015137224458158016, 0.0781295895576477), (0.045384395867586136, 0.04217014089226723, 0.06903551518917084), (0.0799814984202385, 0.04170656204223633, 0.07365516573190689), (0.04981735721230507, 0.02581881545484066, 0.0735246017575264), (0.04558654502034187, 0.04934373497962952, 0.0690227597951889), (0.38181954622268677, 0.012458213604986668, 1.2088325023651123), (0.38153550028800964, -0.012455706484615803, 1.2121703624725342), (0.5102871060371399, -0.002245998941361904, 1.1661550998687744), (0.5105442404747009, -0.024275504052639008, 1.1669691801071167), (0.5080170035362244, 0.004302130080759525, 1.1605104207992554), (0.5060510635375977, -0.031340695917606354, 1.159997582435608), (0.5021672248840332, -0.01032413449138403, 1.1522777080535889), (0.5114322304725647, -0.011874518357217312, 1.1687334775924683), (0.5012912750244141, -0.025582313537597656, 1.1524063348770142), (0.5031183958053589, -0.0010512908920645714, 1.1528170108795166), (0.4081724286079407, 0.0038810623809695244, 1.2525142431259155), (0.3799884021282196, 0.004383581690490246, 1.206764817237854), (0.3928094208240509, -0.023082170635461807, 1.2334775924682617), (0.39635300636291504, 0.024735387414693832, 1.2313563823699951), (0.40625905990600586, -0.012215174734592438, 1.252042531967163), (0.405590295791626, 0.015116650611162186, 1.246946096420288), (0.03273125737905502, -0.14454513788223267, 0.0004926919937133789), (0.03545448184013367, 0.05469809100031853, 4.112720489501953e-05), (0.08831370621919632, 0.055733319371938705, 0.0002090930938720703), (0.09610487520694733, -0.13887645304203033, 0.0011397600173950195), (0.0365726575255394, -0.14304956793785095, 0.021326333284378052), (0.03418400138616562, 0.052543755620718, 0.06211668252944946), (0.08558373153209686, 0.05700277164578438, 0.0627056360244751), (0.08806777745485306, -0.138217493891716, 0.023408234119415283), (0.06265734881162643, 0.07529474049806595, 0.06758114695549011), (0.061302658170461655, 0.07936981320381165, 4.112720489501953e-05), (0.06971386075019836, -0.1562434434890747, 0.026374459266662598), (0.07015921175479889, -0.16423001885414124, 0.0020148158073425293), (0.03333215415477753, -0.03606216236948967, 0.04918363690376282), (0.019282080233097076, -0.028366152197122574, -0.0003191232681274414), (0.09174508601427078, -0.03060181811451912, 0.04747796058654785), (0.11148437857627869, -0.04154978320002556, 0.0006368160247802734), (0.06193060427904129, -0.0452389158308506, 0.001199483871459961), (0.062352828681468964, -0.032868508249521255, 0.0608033686876297), (0.01827174425125122, -0.08497527241706848, -0.0005040168762207031), (0.10350348055362701, -0.08286948502063751, 0.025735050439834595), (0.06449329853057861, -0.0849347710609436, -0.00104483962059021), (0.06519091129302979, -0.0871838927268982, 0.04072251915931702), (0.03051266074180603, -0.08528643846511841, 0.02953416109085083), (0.11339421570301056, -0.08459943532943726, -0.000573277473449707), (0.10336685180664062, -0.0822598785161972, 0.025873929262161255), (0.1133369728922844, -0.08395716547966003, -0.0005102157592773438), (0.030550189316272736, -0.08465449512004852, 0.029678165912628174), (0.0183941051363945, -0.08432784676551819, -0.0005009174346923828), (0.06449329853057861, -0.08426812291145325, -0.00104483962059021), (0.06525681167840958, -0.08585752546787262, 0.041254520416259766), (0.10503087192773819, 0.038252294063568115, 0.3143180012702942), (0.09434282779693604, 0.005808871239423752, 0.3110342025756836), (0.06600456684827805, -0.005837530363351107, 0.31000640988349915), (0.025560900568962097, 0.04010346531867981, 0.31547635793685913), (0.03084150329232216, 0.06351002305746078, 0.31560030579566956), (0.09922496974468231, 0.075069859623909, 0.3145034909248352), (0.037350304424762726, 0.010433904826641083, 0.31438061594963074), (0.06137009337544441, 0.09755827486515045, 0.3137390911579132), (0.4750038981437683, -0.0070539964362978935, 1.16666579246521), (0.476002037525177, 0.0010708728805184364, 1.1674007177352905), (0.47461581230163574, -0.021006755530834198, 1.1676479578018188), (0.4864260256290436, -0.0082732317969203, 1.186245083808899), (0.48546069860458374, -0.020009130239486694, 1.1848740577697754), (0.47995731234550476, -0.026974059641361237, 1.1767133474349976), (0.48198074102401733, 0.007012401707470417, 1.1767408847808838), (0.4851623475551605, 0.0006316015496850014, 1.183440089225769), (0.03292194753885269, 0.008222382515668869, 0.055396467447280884), (0.09232527017593384, 0.013844329863786697, 0.0007921755313873291), (0.03303986042737961, 0.013165969401597977, -0.00013899803161621094), (0.09313808381557465, 0.013281520456075668, 0.05618269741535187), (0.06161662936210632, 0.017065446823835373, 0.0006203055381774902), (0.06296359747648239, 0.015227045863866806, 0.08831541985273361), (0.061980001628398895, 0.08622121065855026, 0.0416160523891449), (0.059381529688835144, 0.04851293936371803, 0.08828216791152954), (0.0253712460398674, -0.012191716581583023, 0.5297055840492249), (0.02269098162651062, 0.03982088714838028, 0.5285509824752808), (0.0905749648809433, 0.05084247514605522, 0.5291908383369446), (0.08911494165658951, -0.01523551344871521, 0.5297379493713379), (0.015142261981964111, -0.06089746579527855, 0.9379994869232178), (0.017415963113307953, 0.040452539920806885, 0.9367480278015137), (0.0873827412724495, 0.03451324999332428, 0.9730415344238281), (0.08511283993721008, -0.04730905219912529, 0.9734114408493042), (0.02071259170770645, 0.03569234162569046, 0.754513144493103), (0.021430693566799164, -0.03179005905985832, 0.7544044256210327), (0.08923692256212234, 0.03639858961105347, 0.753499448299408), (0.0847533792257309, -0.0362379364669323, 0.7564396858215332), (0.05677022784948349, 0.05724932998418808, 0.9602154493331909), (0.061737217009067535, 0.0678865984082222, 0.5263693928718567), (0.054923973977565765, -0.07072712481021881, 0.9604895114898682), (0.059579651802778244, -0.032960157841444016, 0.526475727558136), (0.05770044028759003, 0.056502826511859894, 0.7543935775756836), (0.05683572217822075, -0.05543645843863487, 0.7543864250183105), (0.009887546300888062, -0.005444508045911789, 0.934548020362854), (0.019955754280090332, 0.02763448841869831, 0.5281904339790344), (0.0993880033493042, -0.0038982145488262177, 0.9796406030654907), (0.09994768351316452, 0.024086913093924522, 0.529338002204895), (0.013834144920110703, 0.005417220294475555, 0.7539235949516296), (0.10037288814783096, 0.0022613629698753357, 0.7542688250541687), (0.019850298762321472, 0.027717886492609978, 0.529276967048645), (0.02536100149154663, -0.012295529246330261, 0.5312697291374207), (0.060928381979465485, 0.06762704253196716, 0.5257116556167603), (0.022829793393611908, 0.039576370269060135, 0.5271413922309875), (0.09996175020933151, 0.024086790159344673, 0.5309106707572937), (0.08980344235897064, 0.05207522213459015, 0.5259280800819397), (0.059678126126527786, -0.03284449502825737, 0.5249274373054504), (0.08901964128017426, -0.015352174639701843, 0.5283012390136719), (0.08751784265041351, 0.034501321613788605, 0.9748868942260742), (0.08531248569488525, -0.047063689678907394, 0.9769910573959351), (0.06693649291992188, 0.004705218598246574, 1.0974494218826294), (0.06956994533538818, -0.050664208829402924, 1.0933704376220703), (0.08644071966409683, 0.028005383908748627, 1.005881428718567), (0.08690207451581955, -0.0468132421374321, 1.0090140104293823), (0.05442829430103302, 0.024874038994312286, 1.0964889526367188), (0.05659874156117439, 0.05775190144777298, 0.9636253118515015), (0.049929179251194, -0.07388609647750854, 1.0930004119873047), (0.054725389927625656, -0.07082152366638184, 0.9644026756286621), (0.05424246937036514, 0.05470826104283333, 1.0016462802886963), (0.059227872639894485, -0.07304796576499939, 1.0077296495437622), (0.07799886167049408, -0.020564580336213112, 1.092446208000183), (0.09512457251548767, -0.010920773260295391, 1.0145461559295654), (0.09909126907587051, -0.0037337765097618103, 0.9834147691726685), (0.0658445656299591, 0.011864257976412773, 1.1722726821899414), (0.06716763228178024, -0.04998152330517769, 1.175871729850769), (0.048143260180950165, 0.026129478588700294, 1.1706970930099487), (0.047158073633909225, -0.07076141238212585, 1.1748930215835571), (0.0757431834936142, -0.02166811190545559, 1.1715524196624756), (0.06737896054983139, 0.02414017729461193, 1.2846896648406982), (0.06450151652097702, -0.04692351818084717, 1.2885663509368896), (0.03884066268801689, 0.04703729972243309, 1.284135341644287), (0.03612980991601944, -0.06737616658210754, 1.2909573316574097), (0.07671889662742615, -0.009313496761023998, 1.286430835723877), (0.11550166457891464, 0.06030753627419472, 1.4393528699874878), (0.12295030802488327, -0.01764148846268654, 1.4325813055038452), (0.03312340006232262, 0.04589778184890747, 1.4899910688400269), (0.042133182287216187, -0.030736807733774185, 1.4736689329147339), (0.12541687488555908, 0.017934517934918404, 1.4442898035049438), (0.012138091027736664, 0.030102061107754707, 0.9377086162567139), (0.009500876069068909, -0.00434480607509613, 0.9377044439315796), (0.04154670238494873, 0.00810341164469719, 1.4969069957733154), (0.020451214164495468, 0.02532137930393219, 1.4705936908721924), (0.019462179392576218, -0.009847268462181091, 1.4641181230545044), (0.024432476609945297, -0.016866516321897507, 1.6151961088180542), (0.01731620356440544, -0.04391678795218468, 1.5814433097839355), (0.026978179812431335, -0.02913355454802513, 1.6003773212432861), (0.022343110293149948, 0.005321044474840164, 1.467568278312683), (0.014132793992757797, -0.0056420378386974335, 1.5743952989578247), (0.013872221112251282, 0.00018647685647010803, 1.545931339263916), (0.015313353389501572, -0.037559133023023605, 1.5538359880447388), (0.014692157506942749, -0.031274449080228806, 1.5317665338516235), (0.022747237235307693, -0.021031629294157028, 1.5647683143615723), (0.021043937653303146, -0.014367744326591492, 1.5373610258102417), (0.2772049605846405, -0.001314937137067318, 1.2725580930709839), (0.2805744409561157, 0.03234544023871422, 1.2718583345413208), (0.299976110458374, 0.03125039488077164, 1.306638479232788), (0.30020540952682495, -0.0037928475067019463, 1.3101738691329956), (0.09684847295284271, -0.020428406074643135, 1.3765789270401), (0.09674839675426483, 0.06272627413272858, 1.3771616220474243), (0.11780229210853577, 0.05910595506429672, 1.4346556663513184), (0.11527743935585022, -0.020181797444820404, 1.4312196969985962), (0.10526466369628906, 0.0695878118276596, 1.4039098024368286), (0.29141542315483093, 0.041805069893598557, 1.2906750440597534), (0.10374093055725098, -0.031386472284793854, 1.4051604270935059), (0.2894706428050995, -0.012027214281260967, 1.2947973012924194), (0.09280820190906525, 0.02124541625380516, 1.363620400428772), (0.27442947030067444, 0.018219565972685814, 1.2656526565551758), (0.12057378888130188, 0.019863661378622055, 1.4490658044815063), (0.3035816252231598, 0.017768535763025284, 1.3160263299942017), (0.30478349328041077, 0.016355689615011215, 1.2432969808578491), (0.1786915361881256, 0.02130458876490593, 1.392425775527954), (0.14642244577407837, 0.023471709340810776, 1.3404003381729126), (0.15776482224464417, -0.0218101367354393, 1.3652126789093018), (0.16462890803813934, 0.05118890851736069, 1.365358829498291), (0.1478608250617981, -0.0013981068041175604, 1.3456306457519531), (0.1714920848608017, -0.003321470692753792, 1.3855345249176025), (0.17448751628398895, 0.04367945343255997, 1.3853685855865479), (0.15016555786132812, 0.03831744194030762, 1.345691204071045), (0.3077833354473114, -0.008533809334039688, 1.248136281967163), (0.34040117263793945, 0.01539653167128563, 1.2977370023727417), (0.3099822402000427, 0.02946361154317856, 1.248892068862915), (0.3266933858394623, 0.03948315605521202, 1.2728215456008911), (0.33703893423080444, 0.03056311048567295, 1.2905151844024658), (0.3213711380958557, -0.020884985104203224, 1.276062250137329), (0.33623871207237244, -0.008222490549087524, 1.295108675956726), (0.054620955139398575, 0.024857617914676666, 1.0975165367126465), (0.06868722289800644, 0.005733306985348463, 1.09920072555542), (0.07786773145198822, -0.01951676420867443, 1.0950998067855835), (0.06891527771949768, -0.05154763534665108, 1.092137336730957), (0.05006777495145798, -0.07411602139472961, 1.091916799545288), (0.04794058948755264, 0.02623918652534485, 1.172513484954834), (0.0658406913280487, 0.011708211153745651, 1.1738156080245972), (0.07562972605228424, -0.02150687575340271, 1.17254638671875), (0.06735873967409134, -0.04934169352054596, 1.1766446828842163), (0.04737996309995651, -0.07045110315084457, 1.175581455230713), (0.03998257964849472, 0.046678438782691956, 1.2856734991073608), (0.06806009262800217, 0.02385810762643814, 1.287786841392517), (0.0771111324429512, -0.009100533090531826, 1.2899073362350464), (0.0653577670454979, -0.04584198072552681, 1.2907527685165405), (0.037049517035484314, -0.06696859002113342, 1.2915605306625366), (0.2744293510913849, 0.018206801265478134, 1.2656491994857788), (0.27716344594955444, -0.0014312909916043282, 1.2728465795516968), (0.29314175248146057, 0.04155467078089714, 1.2909749746322632), (0.28142011165618896, 0.033168237656354904, 1.2719060182571411), (0.28975585103034973, -0.012243016622960567, 1.2945863008499146), (0.3002455532550812, -0.003733268938958645, 1.3102399110794067), (0.30036014318466187, 0.031148862093687057, 1.3064405918121338), (0.30327215790748596, 0.018004348501563072, 1.3161492347717285), (0.10220392048358917, -0.018032902851700783, 1.375730276107788), (0.1054384857416153, 0.058711014688014984, 1.3769378662109375), (0.12350603938102722, 0.05705107003450394, 1.4317474365234375), (0.11751589179039001, -0.020395852625370026, 1.4291523694992065), (0.11118024587631226, 0.06498868763446808, 1.4015321731567383), (0.10875365138053894, -0.028276614844799042, 1.4023996591567993), (0.09840162098407745, 0.023141685873270035, 1.3590061664581299), (0.1283164620399475, 0.020367618650197983, 1.443393349647522), (0.014817707240581512, -0.06191639229655266, 0.9415603876113892), (0.21158315241336823, 0.021114833652973175, 1.3682096004486084), (0.182905375957489, 0.019604679197072983, 1.3212131261825562), (0.1951369196176529, -0.01696958765387535, 1.3436857461929321), (0.2010149359703064, 0.04695416986942291, 1.3448448181152344), (0.18464596569538116, -0.00032493751496076584, 1.3263514041900635), (0.20870967209339142, -0.004455834627151489, 1.3634986877441406), (0.20915359258651733, 0.03681210055947304, 1.3627920150756836), (0.18728968501091003, 0.03856359422206879, 1.3282066583633423), (0.05411411076784134, 0.024313248693943024, 1.13210928440094), (0.06867966800928116, 0.009039176627993584, 1.1302711963653564), (0.07605671137571335, -0.02244235947728157, 1.1306650638580322), (0.07004430890083313, -0.05053599923849106, 1.126466989517212), (0.052219465374946594, -0.07310458272695541, 1.1263123750686646), (0.0383419431746006, -0.053203873336315155, 1.382097601890564), (0.03212425857782364, 0.031315915286540985, 1.5157972574234009), (0.03751877695322037, -0.017158258706331253, 1.5052556991577148), (0.037151023745536804, 0.007196508347988129, 1.519827127456665), (0.08933506160974503, 0.04603900760412216, 1.3649733066558838), (0.09707356244325638, 0.004689887631684542, 1.3684502840042114), (0.09062989801168442, -0.035542406141757965, 1.3625396490097046), (0.047721073031425476, 0.0671856701374054, 1.4116562604904175), (-0.07697752118110657, 0.052143778651952744, 0.07170328497886658), (-0.07776781916618347, 0.023501230403780937, 0.07489295303821564), (-0.06699967384338379, 0.061365578323602676, 0.06909504532814026), (-0.06629844009876251, 0.015137224458158016, 0.0781295895576477), (-0.045384395867586136, 0.04217014089226723, 0.06903551518917084), (-0.0799814984202385, 0.04170656204223633, 0.07365516573190689), (-0.04981735721230507, 0.02581881545484066, 0.0735246017575264), (-0.04558654502034187, 0.04934373497962952, 0.0690227597951889), (-0.38181954622268677, 0.012458213604986668, 1.2088325023651123), (-0.38153550028800964, -0.012455706484615803, 1.2121703624725342), (-0.5102871060371399, -0.002245998941361904, 1.1661550998687744), (-0.5105442404747009, -0.024275504052639008, 1.1669691801071167), (-0.5080170035362244, 0.004302130080759525, 1.1605104207992554), (-0.5060510635375977, -0.031340695917606354, 1.159997582435608), (-0.5021672248840332, -0.01032413449138403, 1.1522777080535889), (-0.5114322304725647, -0.011874518357217312, 1.1687334775924683), (-0.5012912750244141, -0.025582313537597656, 1.1524063348770142), (-0.5031183958053589, -0.0010512908920645714, 1.1528170108795166), (-0.4081724286079407, 0.0038810623809695244, 1.2525142431259155), (-0.3799884021282196, 0.004383581690490246, 1.206764817237854), (-0.3928094208240509, -0.023082170635461807, 1.2334775924682617), (-0.39635300636291504, 0.024735387414693832, 1.2313563823699951), (-0.40625905990600586, -0.012215174734592438, 1.252042531967163), (-0.405590295791626, 0.015116650611162186, 1.246946096420288), (-0.03273125737905502, -0.14454513788223267, 0.0004926919937133789), (-0.03545448184013367, 0.05469809100031853, 4.112720489501953e-05), (-0.08831370621919632, 0.055733319371938705, 0.0002090930938720703), (-0.09610487520694733, -0.13887645304203033, 0.0011397600173950195), (-0.0365726575255394, -0.14304956793785095, 0.021326333284378052), (-0.03418400138616562, 0.052543755620718, 0.06211668252944946), (-0.08558373153209686, 0.05700277164578438, 0.0627056360244751), (-0.08806777745485306, -0.138217493891716, 0.023408234119415283), (-0.06265734881162643, 0.07529474049806595, 0.06758114695549011), (-0.061302658170461655, 0.07936981320381165, 4.112720489501953e-05), (-0.06971386075019836, -0.1562434434890747, 0.026374459266662598), (-0.07015921175479889, -0.16423001885414124, 0.0020148158073425293), (-0.03333215415477753, -0.03606216236948967, 0.04918363690376282), (-0.019282080233097076, -0.028366152197122574, -0.0003191232681274414), (-0.09174508601427078, -0.03060181811451912, 0.04747796058654785), (-0.11148437857627869, -0.04154978320002556, 0.0006368160247802734), (-0.06193060427904129, -0.0452389158308506, 0.001199483871459961), (-0.062352828681468964, -0.032868508249521255, 0.0608033686876297), (-0.01827174425125122, -0.08497527241706848, -0.0005040168762207031), (-0.10350348055362701, -0.08286948502063751, 0.025735050439834595), (-0.06449329853057861, -0.0849347710609436, -0.00104483962059021), (-0.06519091129302979, -0.0871838927268982, 0.04072251915931702), (-0.03051266074180603, -0.08528643846511841, 0.02953416109085083), (-0.11339421570301056, -0.08459943532943726, -0.000573277473449707), (-0.10336685180664062, -0.0822598785161972, 0.025873929262161255), (-0.1133369728922844, -0.08395716547966003, -0.0005102157592773438), (-0.030550189316272736, -0.08465449512004852, 0.029678165912628174), (-0.0183941051363945, -0.08432784676551819, -0.0005009174346923828), (-0.06449329853057861, -0.08426812291145325, -0.00104483962059021), (-0.06525681167840958, -0.08585752546787262, 0.041254520416259766), (-0.10503087192773819, 0.038252294063568115, 0.3143180012702942), (-0.09434282779693604, 0.005808871239423752, 0.3110342025756836), (-0.06600456684827805, -0.005837530363351107, 0.31000640988349915), (-0.025560900568962097, 0.04010346531867981, 0.31547635793685913), (-0.03084150329232216, 0.06351002305746078, 0.31560030579566956), (-0.09922496974468231, 0.075069859623909, 0.3145034909248352), (-0.037350304424762726, 0.010433904826641083, 0.31438061594963074), (-0.06137009337544441, 0.09755827486515045, 0.3137390911579132), (-0.4750038981437683, -0.0070539964362978935, 1.16666579246521), (-0.476002037525177, 0.0010708728805184364, 1.1674007177352905), (-0.47461581230163574, -0.021006755530834198, 1.1676479578018188), (-0.4864260256290436, -0.0082732317969203, 1.186245083808899), (-0.48546069860458374, -0.020009130239486694, 1.1848740577697754), (-0.47995731234550476, -0.026974059641361237, 1.1767133474349976), (-0.48198074102401733, 0.007012401707470417, 1.1767408847808838), (-0.4851623475551605, 0.0006316015496850014, 1.183440089225769), (0.0, -0.07975009828805923, 1.1774508953094482), (0.0, -0.07233328372240067, 1.2932405471801758), (0.0, -0.004395619034767151, 0.9421603679656982), (0.0, 0.03322088345885277, 1.0977132320404053), (0.0, -0.03432738408446312, 1.4721626043319702), (0.0, 0.07094232738018036, 1.434820532798767), (0.0, 0.05288630723953247, 1.2859772443771362), (0.0, 0.041339024901390076, 1.5172808170318604), (-0.03292194753885269, 0.008222382515668869, 0.055396467447280884), (-0.09232527017593384, 0.013844329863786697, 0.0007921755313873291), (-0.03303986042737961, 0.013165969401597977, -0.00013899803161621094), (-0.09313808381557465, 0.013281520456075668, 0.05618269741535187), (-0.06161662936210632, 0.017065446823835373, 0.0006203055381774902), (-0.06296359747648239, 0.015227045863866806, 0.08831541985273361), (-0.061980001628398895, 0.08622121065855026, 0.0416160523891449), (-0.059381529688835144, 0.04851293936371803, 0.08828216791152954), (-0.0253712460398674, -0.012191716581583023, 0.5297055840492249), (-0.02269098162651062, 0.03982088714838028, 0.5285509824752808), (-0.0905749648809433, 0.05084247514605522, 0.5291908383369446), (-0.08911494165658951, -0.01523551344871521, 0.5297379493713379), (-0.015142261981964111, -0.06089746579527855, 0.9379994869232178), (-0.017415963113307953, 0.040452539920806885, 0.9367480278015137), (-0.0873827412724495, 0.03451324999332428, 0.9730415344238281), (-0.08511283993721008, -0.04730905219912529, 0.9734114408493042), (-0.02071259170770645, 0.03569234162569046, 0.754513144493103), (-0.021430693566799164, -0.03179005905985832, 0.7544044256210327), (-0.08923692256212234, 0.03639858961105347, 0.753499448299408), (-0.0847533792257309, -0.0362379364669323, 0.7564396858215332), (-0.05677022784948349, 0.05724932998418808, 0.9602154493331909), (-0.061737217009067535, 0.0678865984082222, 0.5263693928718567), (-0.054923973977565765, -0.07072712481021881, 0.9604895114898682), (-0.059579651802778244, -0.032960157841444016, 0.526475727558136), (-0.05770044028759003, 0.056502826511859894, 0.7543935775756836), (-0.05683572217822075, -0.05543645843863487, 0.7543864250183105), (-0.009887546300888062, -0.005444508045911789, 0.934548020362854), (-0.019955754280090332, 0.02763448841869831, 0.5281904339790344), (-0.0993880033493042, -0.0038982145488262177, 0.9796406030654907), (-0.09994768351316452, 0.024086913093924522, 0.529338002204895), (-0.013834144920110703, 0.005417220294475555, 0.7539235949516296), (-0.10037288814783096, 0.0022613629698753357, 0.7542688250541687), (-0.019850298762321472, 0.027717886492609978, 0.529276967048645), (-0.02536100149154663, -0.012295529246330261, 0.5312697291374207), (-0.060928381979465485, 0.06762704253196716, 0.5257116556167603), (-0.022829793393611908, 0.039576370269060135, 0.5271413922309875), (-0.09996175020933151, 0.024086790159344673, 0.5309106707572937), (-0.08980344235897064, 0.05207522213459015, 0.5259280800819397), (-0.059678126126527786, -0.03284449502825737, 0.5249274373054504), (-0.08901964128017426, -0.015352174639701843, 0.5283012390136719), (-0.08751784265041351, 0.034501321613788605, 0.9748868942260742), (-0.08531248569488525, -0.047063689678907394, 0.9769910573959351), (-0.06693649291992188, 0.004705218598246574, 1.0974494218826294), (-0.06956994533538818, -0.050664208829402924, 1.0933704376220703), (-0.08644071966409683, 0.028005383908748627, 1.005881428718567), (-0.08690207451581955, -0.0468132421374321, 1.0090140104293823), (-0.05442829430103302, 0.024874038994312286, 1.0964889526367188), (-0.05659874156117439, 0.05775190144777298, 0.9636253118515015), (-0.049929179251194, -0.07388609647750854, 1.0930004119873047), (-0.054725389927625656, -0.07082152366638184, 0.9644026756286621), (-0.05424246937036514, 0.05470826104283333, 1.0016462802886963), (-0.059227872639894485, -0.07304796576499939, 1.0077296495437622), (-0.07799886167049408, -0.020564580336213112, 1.092446208000183), (-0.09512457251548767, -0.010920773260295391, 1.0145461559295654), (-0.09909126907587051, -0.0037337765097618103, 0.9834147691726685), (-0.0658445656299591, 0.011864257976412773, 1.1722726821899414), (-0.06716763228178024, -0.04998152330517769, 1.175871729850769), (-0.048143260180950165, 0.026129478588700294, 1.1706970930099487), (-0.047158073633909225, -0.07076141238212585, 1.1748930215835571), (-0.0757431834936142, -0.02166811190545559, 1.1715524196624756), (-0.06737896054983139, 0.02414017729461193, 1.2846896648406982), (-0.06450151652097702, -0.04692351818084717, 1.2885663509368896), (-0.03884066268801689, 0.04703729972243309, 1.284135341644287), (-0.03612980991601944, -0.06737616658210754, 1.2909573316574097), (-0.07671889662742615, -0.009313496761023998, 1.286430835723877), (-0.11550166457891464, 0.06030753627419472, 1.4393528699874878), (-0.12295030802488327, -0.01764148846268654, 1.4325813055038452), (-0.03312340006232262, 0.04589778184890747, 1.4899910688400269), (-0.042133182287216187, -0.030736807733774185, 1.4736689329147339), (-0.12541687488555908, 0.017934517934918404, 1.4442898035049438), (-0.012138091027736664, 0.030102061107754707, 0.9377086162567139), (-0.009500876069068909, -0.00434480607509613, 0.9377044439315796), (-0.04154670238494873, 0.00810341164469719, 1.4969069957733154), (-0.020451214164495468, 0.02532137930393219, 1.4705936908721924), (-0.019462179392576218, -0.009847268462181091, 1.4641181230545044), (-0.024432476609945297, -0.016866516321897507, 1.6151961088180542), (-0.01731620356440544, -0.04391678795218468, 1.5814433097839355), (-0.026978179812431335, -0.02913355454802513, 1.6003773212432861), (-0.022343110293149948, 0.005321044474840164, 1.467568278312683), (-0.014132793992757797, -0.0056420378386974335, 1.5743952989578247), (-0.013872221112251282, 0.00018647685647010803, 1.545931339263916), (-0.015313353389501572, -0.037559133023023605, 1.5538359880447388), (-0.014692157506942749, -0.031274449080228806, 1.5317665338516235), (-0.022747237235307693, -0.021031629294157028, 1.5647683143615723), (-0.021043937653303146, -0.014367744326591492, 1.5373610258102417), (-0.2772049605846405, -0.001314937137067318, 1.2725580930709839), (-0.2805744409561157, 0.03234544023871422, 1.2718583345413208), (-0.299976110458374, 0.03125039488077164, 1.306638479232788), (-0.30020540952682495, -0.0037928475067019463, 1.3101738691329956), (-0.09684847295284271, -0.020428406074643135, 1.3765789270401), (-0.09674839675426483, 0.06272627413272858, 1.3771616220474243), (-0.11780229210853577, 0.05910595506429672, 1.4346556663513184), (-0.11527743935585022, -0.020181797444820404, 1.4312196969985962), (-0.10526466369628906, 0.0695878118276596, 1.4039098024368286), (-0.29141542315483093, 0.041805069893598557, 1.2906750440597534), (-0.10374093055725098, -0.031386472284793854, 1.4051604270935059), (-0.2894706428050995, -0.012027214281260967, 1.2947973012924194), (-0.09280820190906525, 0.02124541625380516, 1.363620400428772), (-0.27442947030067444, 0.018219565972685814, 1.2656526565551758), (-0.12057378888130188, 0.019863661378622055, 1.4490658044815063), (-0.3035816252231598, 0.017768535763025284, 1.3160263299942017), (0.0, -0.0841405913233757, 1.0914709568023682), (0.0, 0.05924946814775467, 0.9707499742507935), (0.0, -0.05827704817056656, 1.3820135593414307), (0.0, -0.0796041488647461, 1.1779934167861938), (0.0, -0.07229448854923248, 1.293190598487854), (0.0, 0.05304202437400818, 1.2852424383163452), (0.0, 0.03287842869758606, 1.173216700553894), (0.0, -0.08383427560329437, 1.088707447052002), (0.0, -0.08133430033922195, 1.1271703243255615), (0.0, 0.0327998548746109, 1.1713279485702515), (0.0, 0.03265082836151123, 0.9433048963546753), (0.0, -0.08218047022819519, 1.0046982765197754), (0.0, 0.05891294404864311, 1.0097599029541016), (0.0, 0.03337794914841652, 1.095664620399475), (0.0, 0.031084362417459488, 1.1328381299972534), (0.0, -0.06969742476940155, 0.9530092477798462), (-0.30478349328041077, 0.016355689615011215, 1.2432969808578491), (-0.1786915361881256, 0.02130458876490593, 1.392425775527954), (-0.14642244577407837, 0.023471709340810776, 1.3404003381729126), (-0.15776482224464417, -0.0218101367354393, 1.3652126789093018), (-0.16462890803813934, 0.05118890851736069, 1.365358829498291), (-0.1478608250617981, -0.0013981068041175604, 1.3456306457519531), (-0.1714920848608017, -0.003321470692753792, 1.3855345249176025), (-0.17448751628398895, 0.04367945343255997, 1.3853685855865479), (-0.15016555786132812, 0.03831744194030762, 1.345691204071045), (-0.3077833354473114, -0.008533809334039688, 1.248136281967163), (-0.34040117263793945, 0.01539653167128563, 1.2977370023727417), (-0.3099822402000427, 0.02946361154317856, 1.248892068862915), (-0.3266933858394623, 0.03948315605521202, 1.2728215456008911), (-0.33703893423080444, 0.03056311048567295, 1.2905151844024658), (-0.3213711380958557, -0.020884985104203224, 1.276062250137329), (-0.33623871207237244, -0.008222490549087524, 1.295108675956726), (-0.054620955139398575, 0.024857617914676666, 1.0975165367126465), (-0.06868722289800644, 0.005733306985348463, 1.09920072555542), (-0.07786773145198822, -0.01951676420867443, 1.0950998067855835), (-0.06891527771949768, -0.05154763534665108, 1.092137336730957), (-0.05006777495145798, -0.07411602139472961, 1.091916799545288), (-0.04794058948755264, 0.02623918652534485, 1.172513484954834), (-0.0658406913280487, 0.011708211153745651, 1.1738156080245972), (-0.07562972605228424, -0.02150687575340271, 1.17254638671875), (-0.06735873967409134, -0.04934169352054596, 1.1766446828842163), (-0.04737996309995651, -0.07045110315084457, 1.175581455230713), (-0.03998257964849472, 0.046678438782691956, 1.2856734991073608), (-0.06806009262800217, 0.02385810762643814, 1.287786841392517), (-0.0771111324429512, -0.009100533090531826, 1.2899073362350464), (-0.0653577670454979, -0.04584198072552681, 1.2907527685165405), (-0.037049517035484314, -0.06696859002113342, 1.2915605306625366), (-0.2744293510913849, 0.018206801265478134, 1.2656491994857788), (-0.27716344594955444, -0.0014312909916043282, 1.2728465795516968), (-0.29314175248146057, 0.04155467078089714, 1.2909749746322632), (-0.28142011165618896, 0.033168237656354904, 1.2719060182571411), (-0.28975585103034973, -0.012243016622960567, 1.2945863008499146), (-0.3002455532550812, -0.003733268938958645, 1.3102399110794067), (-0.30036014318466187, 0.031148862093687057, 1.3064405918121338), (-0.30327215790748596, 0.018004348501563072, 1.3161492347717285), (-0.10220392048358917, -0.018032902851700783, 1.375730276107788), (-0.1054384857416153, 0.058711014688014984, 1.3769378662109375), (-0.12350603938102722, 0.05705107003450394, 1.4317474365234375), (-0.11751589179039001, -0.020395852625370026, 1.4291523694992065), (-0.11118024587631226, 0.06498868763446808, 1.4015321731567383), (-0.10875365138053894, -0.028276614844799042, 1.4023996591567993), (-0.09840162098407745, 0.023141685873270035, 1.3590061664581299), (-0.1283164620399475, 0.020367618650197983, 1.443393349647522), (-0.014817707240581512, -0.06191639229655266, 0.9415603876113892), (-0.21158315241336823, 0.021114833652973175, 1.3682096004486084), (-0.182905375957489, 0.019604679197072983, 1.3212131261825562), (-0.1951369196176529, -0.01696958765387535, 1.3436857461929321), (-0.2010149359703064, 0.04695416986942291, 1.3448448181152344), (-0.18464596569538116, -0.00032493751496076584, 1.3263514041900635), (-0.20870967209339142, -0.004455834627151489, 1.3634986877441406), (-0.20915359258651733, 0.03681210055947304, 1.3627920150756836), (-0.18728968501091003, 0.03856359422206879, 1.3282066583633423), (-0.05411411076784134, 0.024313248693943024, 1.13210928440094), (-0.06867966800928116, 0.009039176627993584, 1.1302711963653564), (-0.07605671137571335, -0.02244235947728157, 1.1306650638580322), (-0.07004430890083313, -0.05053599923849106, 1.126466989517212), (-0.052219465374946594, -0.07310458272695541, 1.1263123750686646), (-0.0383419431746006, -0.053203873336315155, 1.382097601890564), (-0.03212425857782364, 0.031315915286540985, 1.5157972574234009), (-0.03751877695322037, -0.017158258706331253, 1.5052556991577148), (-0.037151023745536804, 0.007196508347988129, 1.519827127456665), (-0.08933506160974503, 0.04603900760412216, 1.3649733066558838), (-0.09707356244325638, 0.004689887631684542, 1.3684502840042114), (-0.09062989801168442, -0.035542406141757965, 1.3625396490097046), (-0.047721073031425476, 0.0671856701374054, 1.4116562604904175), (0.0, 0.028036925941705704, 1.5326025485992432), (0.0, -0.019409727305173874, 1.5043110847473145), (0.0, 0.004048936069011688, 1.5296332836151123), (0.0, 0.003757838159799576, 1.5478888750076294), (0.0, 0.029240969568490982, 1.4697046279907227), (0.0, -0.03609884902834892, 1.5300979614257812), (0.0, -0.01925116777420044, 1.4613255262374878), (0.0, -0.00189899280667305, 1.5800248384475708), (0.0, -0.0009875334799289703, 1.623917579650879), (0.0, -0.042303334921598434, 1.5507739782333374), (0.0, -0.05152575299143791, 1.5757603645324707)]


     
    # Define the faces by index numbers of its vertices. Each face is defined by a tuple of 3 or more integers.
    # N-gons would require a tuple of size N.
    faces = [(58, 61, 2, 7), (60, 57, 4, 6), (57, 58, 7, 4), (54, 55, 1, 5), (56, 60, 6, 3), (59, 54, 5, 0), (55, 56, 3, 1), (61, 59, 0, 2), (63, 68, 12, 17), (64, 62, 14, 16), (62, 63, 17, 14), (65, 66, 11, 15), (67, 64, 16, 13), (69, 65, 15, 10), (66, 67, 13, 11), (68, 69, 10, 12), (70, 29, 25, 72), (32, 30, 26, 33, 76), (43, 31, 27, 47), (34, 28, 24, 35), (74, 33, 26, 71), (75, 77, 32, 29, 70), (29, 32, 76, 33, 25), (31, 34, 35, 27), (72, 25, 33, 74), (73, 30, 32, 77, 75), (50, 36, 37, 51), (73, 38, 39, 71), (52, 40, 39, 49), (53, 41, 36, 50), (51, 37, 40, 52), (48, 38, 41, 53), (38, 48, 49, 39), (28, 46, 42, 24), (35, 44, 47, 27), (34, 45, 46, 28), (24, 42, 44, 35), (31, 43, 45, 34), (48, 53, 45, 43), (53, 50, 46, 45), (50, 51, 42, 46), (51, 52, 44, 42), (52, 49, 47, 44), (49, 48, 43, 47), (8, 21, 68, 63), (9, 19, 62, 64), (19, 8, 63, 62), (18, 22, 66, 65), (20, 9, 64, 67), (23, 18, 65, 69), (22, 20, 67, 66), (21, 23, 69, 68), (30, 73, 71, 26), (38, 73, 75, 41), (37, 72, 74, 40), (41, 75, 70, 36), (40, 74, 71, 39), (36, 70, 72, 37), (100, 86, 79, 102), (94, 88, 80, 91), (101, 89, 81, 106), (95, 87, 103, 93), (78, 97, 57, 60), (108, 78, 60, 56), (96, 83, 86, 100), (90, 84, 88, 94), (98, 85, 89, 101), (92, 82, 87, 95), (86, 94, 91, 79), (89, 95, 93, 81), (107, 99, 54, 59), (104, 107, 59, 61), (83, 90, 94, 86), (85, 92, 95, 89), (87, 100, 102, 103), (88, 101, 106, 80), (97, 105, 58, 57), (109, 108, 56, 55), (82, 96, 100, 87), (84, 98, 101, 88), (105, 104, 61, 58), (99, 109, 55, 54), (120, 114, 110, 117), (123, 115, 111, 124), (121, 430, 434, 218, 119), (116, 112, 114, 120), (122, 113, 115, 123), (118, 419, 430, 121), (431, 120, 117, 420), (115, 121, 119, 111), (432, 116, 120, 431), (113, 118, 121, 115), (114, 123, 124, 110), (112, 122, 123, 114), (117, 140, 429, 420), (227, 433, 428, 127), (229, 228, 125, 129), (228, 227, 127, 125), (230, 229, 129, 126), (231, 230, 126, 128), (427, 231, 128, 310), (195, 194, 134, 131), (196, 195, 131, 133), (193, 192, 132, 130), (192, 425, 424, 132), (422, 196, 133, 423), (194, 193, 130, 134), (421, 232, 138, 314), (237, 236, 135, 139), (238, 237, 139, 136), (232, 238, 136, 138), (236, 239, 137, 135), (239, 315, 317, 137), (141, 119, 218, 434, 312), (140, 141, 312, 429), (139, 142, 138, 136), (137, 142, 139, 135), (138, 142, 235, 234), (507, 150, 143, 508), (154, 152, 144, 148), (152, 509, 510, 144), (150, 154, 148, 143), (512, 145, 149, 511), (511, 149, 150, 507), (147, 146, 151, 153), (153, 151, 152, 154), (146, 514, 513, 151), (151, 513, 509, 152), (145, 147, 153, 149), (149, 153, 154, 150), (206, 155, 180, 185), (180, 171, 19, 9), (185, 180, 9, 20), (184, 181, 18, 23), (183, 184, 23, 21), (155, 168, 171, 180), (171, 182, 8, 19), (186, 185, 20, 22), (182, 183, 21, 8), (181, 186, 22, 18), (208, 170, 181, 184), (204, 208, 184, 183), (168, 205, 182, 171), (207, 206, 185, 186), (205, 204, 183, 182), (170, 207, 186, 181), (167, 160, 211, 216), (163, 161, 212, 214), (169, 162, 213, 217), (165, 159, 210, 215), (160, 163, 214, 211), (162, 165, 215, 213), (159, 167, 216, 210), (161, 169, 217, 212), (313, 187, 116, 432), (187, 188, 112, 116), (188, 189, 122, 112), (189, 190, 113, 122), (190, 191, 118, 113), (191, 426, 419, 118), (425, 192, 127, 428), (192, 193, 125, 127), (193, 194, 129, 125), (194, 195, 126, 129), (195, 196, 128, 126), (196, 422, 310, 128), (316, 197, 132, 424), (197, 198, 130, 132), (198, 199, 134, 130), (199, 200, 131, 134), (200, 201, 133, 131), (201, 311, 423, 133), (102, 79, 105, 97), (79, 91, 104, 105), (91, 80, 107, 104), (80, 106, 99, 107), (106, 81, 109, 99), (81, 93, 108, 109), (93, 103, 78, 108), (103, 102, 97, 78), (202, 156, 205, 168), (156, 164, 204, 205), (164, 157, 208, 204), (157, 209, 170, 208), (209, 158, 207, 170), (158, 166, 206, 207), (166, 203, 155, 206), (203, 202, 168, 155), (90, 117, 110, 84), (117, 90, 83, 140), (124, 98, 84, 110), (98, 124, 111, 85), (119, 92, 85, 111), (141, 312, 434, 218), (141, 96, 82, 218), (82, 92, 119, 218), (96, 141, 140, 83), (142, 137, 233, 235), (173, 179, 226, 220), (175, 178, 225, 222), (172, 177, 224, 219), (174, 176, 223, 221), (179, 175, 222, 226), (177, 174, 221, 224), (176, 173, 220, 223), (178, 172, 219, 225), (187, 313, 433, 227), (189, 188, 228, 229), (188, 187, 227, 228), (190, 189, 229, 230), (191, 190, 230, 231), (426, 191, 231, 427), (216, 211, 179, 173), (214, 212, 178, 175), (217, 213, 177, 172), (215, 210, 176, 174), (211, 214, 175, 179), (213, 215, 174, 177), (210, 216, 173, 176), (212, 217, 172, 178), (222, 225, 157, 164), (226, 222, 164, 156), (224, 221, 166, 158), (219, 224, 158, 209), (221, 223, 203, 166), (225, 219, 209, 157), (220, 226, 156, 202), (223, 220, 202, 203), (234, 235, 506, 505), (235, 233, 504, 506), (137, 317, 504, 233), (314, 138, 234, 505), (197, 316, 315, 239), (198, 197, 239, 236), (201, 200, 238, 232), (200, 199, 237, 238), (199, 198, 236, 237), (311, 201, 232, 421), (298, 247, 242, 301), (300, 246, 244, 297), (297, 244, 247, 298), (294, 245, 241, 295), (296, 243, 246, 300), (299, 240, 245, 294), (295, 241, 243, 296), (301, 242, 240, 299), (303, 257, 252, 308), (304, 256, 254, 302), (302, 254, 257, 303), (305, 255, 251, 306), (307, 253, 256, 304), (309, 250, 255, 305), (306, 251, 253, 307), (308, 252, 250, 309), (318, 320, 265, 269), (272, 324, 273, 266, 270), (283, 287, 267, 271), (274, 275, 264, 268), (322, 319, 266, 273), (323, 318, 269, 272, 325), (269, 265, 273, 324, 272), (271, 267, 275, 274), (320, 322, 273, 265), (321, 323, 325, 272, 270), (290, 291, 277, 276), (321, 319, 279, 278), (292, 289, 279, 280), (293, 290, 276, 281), (291, 292, 280, 277), (288, 293, 281, 278), (278, 279, 289, 288), (268, 264, 282, 286), (275, 267, 287, 284), (274, 268, 286, 285), (264, 275, 284, 282), (271, 274, 285, 283), (288, 283, 285, 293), (293, 285, 286, 290), (290, 286, 282, 291), (291, 282, 284, 292), (292, 284, 287, 289), (289, 287, 283, 288), (248, 303, 308, 261), (249, 304, 302, 259), (259, 302, 303, 248), (258, 305, 306, 262), (260, 307, 304, 249), (263, 309, 305, 258), (262, 306, 307, 260), (261, 308, 309, 263), (270, 266, 319, 321), (278, 281, 323, 321), (277, 280, 322, 320), (281, 276, 318, 323), (280, 279, 319, 322), (276, 277, 320, 318), (348, 350, 327, 334), (342, 339, 328, 336), (349, 354, 329, 337), (343, 341, 351, 335), (326, 300, 297, 345), (356, 296, 300, 326), (344, 348, 334, 331), (338, 342, 336, 332), (346, 349, 337, 333), (340, 343, 335, 330), (334, 327, 339, 342), (337, 329, 341, 343), (355, 299, 294, 347), (352, 301, 299, 355), (331, 334, 342, 338), (333, 337, 343, 340), (335, 351, 350, 348), (336, 328, 354, 349), (345, 297, 298, 353), (357, 295, 296, 356), (330, 335, 348, 344), (332, 336, 349, 346), (353, 298, 301, 352), (347, 294, 295, 357), (368, 365, 358, 362), (371, 372, 359, 363), (369, 367, 482, 434, 430), (364, 368, 362, 360), (370, 371, 363, 361), (366, 369, 430, 419), (431, 420, 365, 368), (363, 359, 367, 369), (432, 431, 368, 364), (361, 363, 369, 366), (362, 358, 372, 371), (360, 362, 371, 370), (365, 420, 429, 388), (491, 375, 428, 433), (493, 377, 373, 492), (492, 373, 375, 491), (494, 374, 377, 493), (495, 376, 374, 494), (427, 310, 376, 495), (459, 379, 382, 458), (460, 381, 379, 459), (457, 378, 380, 456), (456, 380, 424, 425), (422, 423, 381, 460), (458, 382, 378, 457), (421, 314, 386, 496), (501, 387, 383, 500), (502, 384, 387, 501), (496, 386, 384, 502), (500, 383, 385, 503), (503, 385, 317, 315), (389, 312, 434, 482, 367), (388, 429, 312, 389), (387, 384, 386, 390), (385, 383, 387, 390), (386, 498, 499, 390), (507, 508, 391, 398), (402, 396, 392, 400), (400, 392, 510, 509), (398, 391, 396, 402), (512, 511, 397, 393), (511, 507, 398, 397), (395, 401, 399, 394), (401, 402, 400, 399), (394, 399, 513, 514), (399, 400, 509, 513), (393, 397, 401, 395), (397, 398, 402, 401), (470, 449, 444, 403), (444, 249, 259, 435), (449, 260, 249, 444), (448, 263, 258, 445), (447, 261, 263, 448), (403, 444, 435, 416), (435, 259, 248, 446), (450, 262, 260, 449), (446, 248, 261, 447), (445, 258, 262, 450), (472, 448, 445, 418), (468, 447, 448, 472), (416, 435, 446, 469), (471, 450, 449, 470), (469, 446, 447, 468), (418, 445, 450, 471), (415, 480, 475, 408), (411, 478, 476, 409), (417, 481, 477, 410), (413, 479, 474, 407), (408, 475, 478, 411), (410, 477, 479, 413), (407, 474, 480, 415), (409, 476, 481, 417), (313, 432, 364, 451), (451, 364, 360, 452), (452, 360, 370, 453), (453, 370, 361, 454), (454, 361, 366, 455), (455, 366, 419, 426), (425, 428, 375, 456), (456, 375, 373, 457), (457, 373, 377, 458), (458, 377, 374, 459), (459, 374, 376, 460), (460, 376, 310, 422), (316, 424, 380, 461), (461, 380, 378, 462), (462, 378, 382, 463), (463, 382, 379, 464), (464, 379, 381, 465), (465, 381, 423, 311), (350, 345, 353, 327), (327, 353, 352, 339), (339, 352, 355, 328), (328, 355, 347, 354), (354, 347, 357, 329), (329, 357, 356, 341), (341, 356, 326, 351), (351, 326, 345, 350), (466, 416, 469, 404), (404, 469, 468, 412), (412, 468, 472, 405), (405, 472, 418, 473), (473, 418, 471, 406), (406, 471, 470, 414), (414, 470, 403, 467), (467, 403, 416, 466), (338, 332, 358, 365), (365, 388, 331, 338), (372, 358, 332, 346), (346, 333, 359, 372), (367, 359, 333, 340), (389, 482, 434, 312), (389, 482, 330, 344), (330, 482, 367, 340), (344, 331, 388, 389), (390, 499, 497, 385), (437, 484, 490, 443), (439, 486, 489, 442), (436, 483, 488, 441), (438, 485, 487, 440), (443, 490, 486, 439), (441, 488, 485, 438), (440, 487, 484, 437), (442, 489, 483, 436), (451, 491, 433, 313), (453, 493, 492, 452), (452, 492, 491, 451), (454, 494, 493, 453), (455, 495, 494, 454), (426, 427, 495, 455), (480, 437, 443, 475), (478, 439, 442, 476), (481, 436, 441, 477), (479, 438, 440, 474), (475, 443, 439, 478), (477, 441, 438, 479), (474, 440, 437, 480), (476, 442, 436, 481), (486, 412, 405, 489), (490, 404, 412, 486), (488, 406, 414, 485), (483, 473, 406, 488), (485, 414, 467, 487), (489, 405, 473, 483), (484, 466, 404, 490), (487, 467, 466, 484), (498, 505, 506, 499), (499, 506, 504, 497), (385, 497, 504, 317), (314, 505, 498, 386), (461, 503, 315, 316), (462, 500, 503, 461), (465, 496, 502, 464), (464, 502, 501, 463), (463, 501, 500, 462), (311, 421, 496, 465)]
     
    me = bpy.data.meshes.new("BlenRig_proxy_model")   # create a new mesh  
     
    ob = bpy.data.objects.new("BlenRig_proxy_model", me)          # create an object with that mesh
    ob.location[:] = (0.0, 0.0, 0.0)   # position object at 3d-cursor
    bpy.context.scene.objects.link(ob)                # Link object to scene
     
    # Fill the mesh with verts, edges, faces 
    me.from_pydata(coords,[],faces)   # edges or faces should be [], or you ask for problems
    me.update(calc_edges=True)    # Update mesh with new data

    ob.scale[:] = (1.0, 1.0, 1.0)
    ob.draw_type = 'SOLID'
    ob.show_all_edges = True
   

    # Add vertex groups

    vg = ob.vertex_groups.new("shin_def_L")
    vg.add([8],0.0, 'REPLACE')
    vg.add([9],0.0, 'REPLACE')
    vg.add([10],0.0, 'REPLACE')
    vg.add([11],0.0, 'REPLACE')
    vg.add([12],0.0, 'REPLACE')
    vg.add([13],0.0, 'REPLACE')
    vg.add([14],0.0, 'REPLACE')
    vg.add([15],0.0, 'REPLACE')
    vg.add([16],0.0, 'REPLACE')
    vg.add([17],0.0, 'REPLACE')
    vg.add([18],0.0, 'REPLACE')
    vg.add([19],0.0, 'REPLACE')
    vg.add([20],0.0, 'REPLACE')
    vg.add([21],0.0, 'REPLACE')
    vg.add([22],0.0, 'REPLACE')
    vg.add([23],0.0, 'REPLACE')
    vg.add([54],1.0, 'REPLACE')
    vg.add([55],1.0, 'REPLACE')
    vg.add([56],1.0, 'REPLACE')
    vg.add([57],1.0, 'REPLACE')
    vg.add([58],1.0, 'REPLACE')
    vg.add([59],1.0, 'REPLACE')
    vg.add([60],1.0, 'REPLACE')
    vg.add([61],1.0, 'REPLACE')
    vg.add([78],1.0, 'REPLACE')
    vg.add([79],0.25, 'REPLACE')
    vg.add([80],0.25, 'REPLACE')
    vg.add([81],0.25, 'REPLACE')
    vg.add([91],0.25, 'REPLACE')
    vg.add([93],0.25, 'REPLACE')
    vg.add([97],1.0, 'REPLACE')
    vg.add([99],1.0, 'REPLACE')
    vg.add([102],0.25, 'REPLACE')
    vg.add([103],0.25, 'REPLACE')
    vg.add([104],1.0, 'REPLACE')
    vg.add([105],1.0, 'REPLACE')
    vg.add([106],0.25, 'REPLACE')
    vg.add([107],1.0, 'REPLACE')
    vg.add([108],1.0, 'REPLACE')
    vg.add([109],1.0, 'REPLACE')
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([132],0.0, 'REPLACE')
    vg.add([133],0.0, 'REPLACE')
    vg.add([134],0.0, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([138],0.0, 'REPLACE')
    vg.add([139],0.0, 'REPLACE')
    vg.add([142],0.0, 'REPLACE')
    vg.add([144],0.0, 'REPLACE')
    vg.add([148],0.0, 'REPLACE')
    vg.add([155],0.0, 'REPLACE')
    vg.add([156],0.0, 'REPLACE')
    vg.add([157],0.0, 'REPLACE')
    vg.add([158],0.0, 'REPLACE')
    vg.add([159],0.0, 'REPLACE')
    vg.add([160],0.0, 'REPLACE')
    vg.add([161],0.0, 'REPLACE')
    vg.add([162],0.0, 'REPLACE')
    vg.add([163],0.0, 'REPLACE')
    vg.add([164],0.0, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([166],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([168],0.0, 'REPLACE')
    vg.add([169],0.0, 'REPLACE')
    vg.add([170],0.0, 'REPLACE')
    vg.add([171],0.0, 'REPLACE')
    vg.add([180],0.0, 'REPLACE')
    vg.add([181],0.0, 'REPLACE')
    vg.add([182],0.0, 'REPLACE')
    vg.add([183],0.0, 'REPLACE')
    vg.add([184],0.0, 'REPLACE')
    vg.add([185],0.0, 'REPLACE')
    vg.add([186],0.0, 'REPLACE')
    vg.add([197],0.0, 'REPLACE')
    vg.add([198],0.0, 'REPLACE')
    vg.add([199],0.0, 'REPLACE')
    vg.add([200],0.0, 'REPLACE')
    vg.add([201],0.0, 'REPLACE')
    vg.add([202],0.0, 'REPLACE')
    vg.add([203],0.0, 'REPLACE')
    vg.add([204],0.0, 'REPLACE')
    vg.add([205],0.0, 'REPLACE')
    vg.add([206],0.0, 'REPLACE')
    vg.add([207],0.0, 'REPLACE')
    vg.add([208],0.0, 'REPLACE')
    vg.add([209],0.0, 'REPLACE')
    vg.add([210],0.0, 'REPLACE')
    vg.add([211],0.0, 'REPLACE')
    vg.add([212],0.0, 'REPLACE')
    vg.add([213],0.0, 'REPLACE')
    vg.add([214],0.0, 'REPLACE')
    vg.add([215],0.0, 'REPLACE')
    vg.add([216],0.0, 'REPLACE')
    vg.add([217],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([235],0.0, 'REPLACE')
    vg.add([378],0.0, 'REPLACE')
    vg.add([379],0.0, 'REPLACE')
    vg.add([380],0.0, 'REPLACE')
    vg.add([381],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],0.0, 'REPLACE')
    vg.add([395],0.0, 'REPLACE')
    vg.add([461],0.0, 'REPLACE')
    vg.add([462],0.0, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_twist_def_L")
    vg.add([8],0.0, 'REPLACE')
    vg.add([9],0.0, 'REPLACE')
    vg.add([10],0.0, 'REPLACE')
    vg.add([11],0.0, 'REPLACE')
    vg.add([12],0.0, 'REPLACE')
    vg.add([13],0.0, 'REPLACE')
    vg.add([14],0.0, 'REPLACE')
    vg.add([15],0.0, 'REPLACE')
    vg.add([16],0.0, 'REPLACE')
    vg.add([17],0.0, 'REPLACE')
    vg.add([18],0.0, 'REPLACE')
    vg.add([19],0.0, 'REPLACE')
    vg.add([20],0.0, 'REPLACE')
    vg.add([21],0.0, 'REPLACE')
    vg.add([22],0.0, 'REPLACE')
    vg.add([23],0.0, 'REPLACE')
    vg.add([78],0.25, 'REPLACE')
    vg.add([79],1.0, 'REPLACE')
    vg.add([80],1.0, 'REPLACE')
    vg.add([81],1.0, 'REPLACE')
    vg.add([82],0.0, 'REPLACE')
    vg.add([83],0.0, 'REPLACE')
    vg.add([84],0.0, 'REPLACE')
    vg.add([85],0.0, 'REPLACE')
    vg.add([86],1.0, 'REPLACE')
    vg.add([87],1.0, 'REPLACE')
    vg.add([88],1.0, 'REPLACE')
    vg.add([89],1.0, 'REPLACE')
    vg.add([90],0.0, 'REPLACE')
    vg.add([91],1.0, 'REPLACE')
    vg.add([92],0.0, 'REPLACE')
    vg.add([93],1.0, 'REPLACE')
    vg.add([94],1.0, 'REPLACE')
    vg.add([95],1.0, 'REPLACE')
    vg.add([96],0.0, 'REPLACE')
    vg.add([97],0.25, 'REPLACE')
    vg.add([98],0.0, 'REPLACE')
    vg.add([99],0.25, 'REPLACE')
    vg.add([100],1.0, 'REPLACE')
    vg.add([101],1.0, 'REPLACE')
    vg.add([102],1.0, 'REPLACE')
    vg.add([103],1.0, 'REPLACE')
    vg.add([104],0.25, 'REPLACE')
    vg.add([105],0.25, 'REPLACE')
    vg.add([106],1.0, 'REPLACE')
    vg.add([107],0.25, 'REPLACE')
    vg.add([108],0.25, 'REPLACE')
    vg.add([109],0.25, 'REPLACE')
    vg.add([110],0.0, 'REPLACE')
    vg.add([111],0.0, 'REPLACE')
    vg.add([124],0.0, 'REPLACE')
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([132],0.0, 'REPLACE')
    vg.add([133],0.0, 'REPLACE')
    vg.add([134],0.0, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([137],0.0, 'REPLACE')
    vg.add([138],0.0, 'REPLACE')
    vg.add([139],0.0, 'REPLACE')
    vg.add([140],0.0, 'REPLACE')
    vg.add([141],0.0, 'REPLACE')
    vg.add([142],0.0, 'REPLACE')
    vg.add([143],0.0, 'REPLACE')
    vg.add([144],0.0, 'REPLACE')
    vg.add([145],0.0, 'REPLACE')
    vg.add([146],0.0, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([148],0.0, 'REPLACE')
    vg.add([149],0.0, 'REPLACE')
    vg.add([150],0.0, 'REPLACE')
    vg.add([151],0.0, 'REPLACE')
    vg.add([152],0.0, 'REPLACE')
    vg.add([153],0.0, 'REPLACE')
    vg.add([154],0.0, 'REPLACE')
    vg.add([155],0.0, 'REPLACE')
    vg.add([156],0.0, 'REPLACE')
    vg.add([157],0.0, 'REPLACE')
    vg.add([158],0.0, 'REPLACE')
    vg.add([159],0.0, 'REPLACE')
    vg.add([160],0.0, 'REPLACE')
    vg.add([161],0.0, 'REPLACE')
    vg.add([162],0.0, 'REPLACE')
    vg.add([163],0.0, 'REPLACE')
    vg.add([164],0.0, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([166],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([168],0.0, 'REPLACE')
    vg.add([169],0.0, 'REPLACE')
    vg.add([170],0.0, 'REPLACE')
    vg.add([171],0.0, 'REPLACE')
    vg.add([180],0.0, 'REPLACE')
    vg.add([181],0.0, 'REPLACE')
    vg.add([182],0.0, 'REPLACE')
    vg.add([183],0.0, 'REPLACE')
    vg.add([184],0.0, 'REPLACE')
    vg.add([185],0.0, 'REPLACE')
    vg.add([186],0.0, 'REPLACE')
    vg.add([197],0.0, 'REPLACE')
    vg.add([198],0.0, 'REPLACE')
    vg.add([199],0.0, 'REPLACE')
    vg.add([200],0.0, 'REPLACE')
    vg.add([201],0.0, 'REPLACE')
    vg.add([202],0.0, 'REPLACE')
    vg.add([203],0.0, 'REPLACE')
    vg.add([204],0.0, 'REPLACE')
    vg.add([205],0.0, 'REPLACE')
    vg.add([206],0.0, 'REPLACE')
    vg.add([207],0.0, 'REPLACE')
    vg.add([208],0.0, 'REPLACE')
    vg.add([209],0.0, 'REPLACE')
    vg.add([210],0.0, 'REPLACE')
    vg.add([211],0.0, 'REPLACE')
    vg.add([212],0.0, 'REPLACE')
    vg.add([213],0.0, 'REPLACE')
    vg.add([214],0.0, 'REPLACE')
    vg.add([215],0.0, 'REPLACE')
    vg.add([216],0.0, 'REPLACE')
    vg.add([217],0.0, 'REPLACE')
    vg.add([233],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([235],0.0, 'REPLACE')
    vg.add([314],0.0, 'REPLACE')
    vg.add([317],0.0, 'REPLACE')
    vg.add([378],0.0, 'REPLACE')
    vg.add([379],0.0, 'REPLACE')
    vg.add([380],0.0, 'REPLACE')
    vg.add([381],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],0.0, 'REPLACE')
    vg.add([386],0.0, 'REPLACE')
    vg.add([395],0.0, 'REPLACE')
    vg.add([396],0.0, 'REPLACE')
    vg.add([401],0.0, 'REPLACE')
    vg.add([402],0.0, 'REPLACE')
    vg.add([461],0.0, 'REPLACE')
    vg.add([462],0.0, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([504],0.0, 'REPLACE')
    vg.add([505],0.0, 'REPLACE')
    vg.add([506],0.0, 'REPLACE')
    vg.add([507],0.0, 'REPLACE')
    vg.add([508],0.0, 'REPLACE')
    vg.add([509],0.0, 'REPLACE')
    vg.add([510],0.0, 'REPLACE')
    vg.add([513],0.0, 'REPLACE')
    vg.add([514],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("shin_def_R")
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([132],0.0, 'REPLACE')
    vg.add([133],0.0, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([137],0.0, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([197],0.0, 'REPLACE')
    vg.add([198],0.0, 'REPLACE')
    vg.add([200],0.0, 'REPLACE')
    vg.add([201],0.0, 'REPLACE')
    vg.add([233],0.0, 'REPLACE')
    vg.add([248],0.0, 'REPLACE')
    vg.add([249],0.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([251],0.0, 'REPLACE')
    vg.add([252],0.0, 'REPLACE')
    vg.add([253],0.0, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([255],0.0, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.0, 'REPLACE')
    vg.add([258],0.0, 'REPLACE')
    vg.add([259],0.0, 'REPLACE')
    vg.add([260],0.0, 'REPLACE')
    vg.add([261],0.0, 'REPLACE')
    vg.add([262],0.0, 'REPLACE')
    vg.add([263],0.0, 'REPLACE')
    vg.add([294],1.0, 'REPLACE')
    vg.add([295],1.0, 'REPLACE')
    vg.add([296],1.0, 'REPLACE')
    vg.add([297],1.0, 'REPLACE')
    vg.add([298],1.0, 'REPLACE')
    vg.add([299],1.0, 'REPLACE')
    vg.add([300],1.0, 'REPLACE')
    vg.add([301],1.0, 'REPLACE')
    vg.add([326],1.0, 'REPLACE')
    vg.add([327],0.25, 'REPLACE')
    vg.add([328],0.25, 'REPLACE')
    vg.add([329],0.25, 'REPLACE')
    vg.add([339],0.25, 'REPLACE')
    vg.add([341],0.25, 'REPLACE')
    vg.add([345],1.0, 'REPLACE')
    vg.add([347],1.0, 'REPLACE')
    vg.add([350],0.25, 'REPLACE')
    vg.add([351],0.25, 'REPLACE')
    vg.add([352],1.0, 'REPLACE')
    vg.add([353],1.0, 'REPLACE')
    vg.add([354],0.25, 'REPLACE')
    vg.add([355],1.0, 'REPLACE')
    vg.add([356],1.0, 'REPLACE')
    vg.add([357],1.0, 'REPLACE')
    vg.add([378],0.0, 'REPLACE')
    vg.add([379],0.0, 'REPLACE')
    vg.add([380],0.0, 'REPLACE')
    vg.add([381],0.0, 'REPLACE')
    vg.add([382],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([386],0.0, 'REPLACE')
    vg.add([387],0.0, 'REPLACE')
    vg.add([390],0.0, 'REPLACE')
    vg.add([392],0.0, 'REPLACE')
    vg.add([396],0.0, 'REPLACE')
    vg.add([403],0.0, 'REPLACE')
    vg.add([404],0.0, 'REPLACE')
    vg.add([405],0.0, 'REPLACE')
    vg.add([406],0.0, 'REPLACE')
    vg.add([407],0.0, 'REPLACE')
    vg.add([408],0.0, 'REPLACE')
    vg.add([409],0.0, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([411],0.0, 'REPLACE')
    vg.add([412],0.0, 'REPLACE')
    vg.add([413],0.0, 'REPLACE')
    vg.add([414],0.0, 'REPLACE')
    vg.add([415],0.0, 'REPLACE')
    vg.add([416],0.0, 'REPLACE')
    vg.add([417],0.0, 'REPLACE')
    vg.add([418],0.0, 'REPLACE')
    vg.add([435],0.0, 'REPLACE')
    vg.add([444],0.0, 'REPLACE')
    vg.add([445],0.0, 'REPLACE')
    vg.add([446],0.0, 'REPLACE')
    vg.add([447],0.0, 'REPLACE')
    vg.add([448],0.0, 'REPLACE')
    vg.add([449],0.0, 'REPLACE')
    vg.add([450],0.0, 'REPLACE')
    vg.add([461],0.0, 'REPLACE')
    vg.add([462],0.0, 'REPLACE')
    vg.add([463],0.0, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([466],0.0, 'REPLACE')
    vg.add([467],0.0, 'REPLACE')
    vg.add([468],0.0, 'REPLACE')
    vg.add([469],0.0, 'REPLACE')
    vg.add([470],0.0, 'REPLACE')
    vg.add([471],0.0, 'REPLACE')
    vg.add([472],0.0, 'REPLACE')
    vg.add([473],0.0, 'REPLACE')
    vg.add([474],0.0, 'REPLACE')
    vg.add([475],0.0, 'REPLACE')
    vg.add([476],0.0, 'REPLACE')
    vg.add([477],0.0, 'REPLACE')
    vg.add([478],0.0, 'REPLACE')
    vg.add([479],0.0, 'REPLACE')
    vg.add([480],0.0, 'REPLACE')
    vg.add([481],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([499],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_twist_def_R")
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([132],0.0, 'REPLACE')
    vg.add([133],0.0, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([137],0.0, 'REPLACE')
    vg.add([138],0.0, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([148],0.0, 'REPLACE')
    vg.add([153],0.0, 'REPLACE')
    vg.add([154],0.0, 'REPLACE')
    vg.add([197],0.0, 'REPLACE')
    vg.add([198],0.0, 'REPLACE')
    vg.add([200],0.0, 'REPLACE')
    vg.add([201],0.0, 'REPLACE')
    vg.add([233],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([248],0.0, 'REPLACE')
    vg.add([249],0.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([251],0.0, 'REPLACE')
    vg.add([252],0.0, 'REPLACE')
    vg.add([253],0.0, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([255],0.0, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.0, 'REPLACE')
    vg.add([258],0.0, 'REPLACE')
    vg.add([259],0.0, 'REPLACE')
    vg.add([260],0.0, 'REPLACE')
    vg.add([261],0.0, 'REPLACE')
    vg.add([262],0.0, 'REPLACE')
    vg.add([263],0.0, 'REPLACE')
    vg.add([314],0.0, 'REPLACE')
    vg.add([317],0.0, 'REPLACE')
    vg.add([326],0.25, 'REPLACE')
    vg.add([327],1.0, 'REPLACE')
    vg.add([328],1.0, 'REPLACE')
    vg.add([329],1.0, 'REPLACE')
    vg.add([330],0.0, 'REPLACE')
    vg.add([331],0.0, 'REPLACE')
    vg.add([332],0.0, 'REPLACE')
    vg.add([333],0.0, 'REPLACE')
    vg.add([334],1.0, 'REPLACE')
    vg.add([335],1.0, 'REPLACE')
    vg.add([336],1.0, 'REPLACE')
    vg.add([337],1.0, 'REPLACE')
    vg.add([338],0.0, 'REPLACE')
    vg.add([339],1.0, 'REPLACE')
    vg.add([340],0.0, 'REPLACE')
    vg.add([341],1.0, 'REPLACE')
    vg.add([342],1.0, 'REPLACE')
    vg.add([343],1.0, 'REPLACE')
    vg.add([344],0.0, 'REPLACE')
    vg.add([345],0.25, 'REPLACE')
    vg.add([346],0.0, 'REPLACE')
    vg.add([347],0.25, 'REPLACE')
    vg.add([348],1.0, 'REPLACE')
    vg.add([349],1.0, 'REPLACE')
    vg.add([350],1.0, 'REPLACE')
    vg.add([351],1.0, 'REPLACE')
    vg.add([352],0.25, 'REPLACE')
    vg.add([353],0.25, 'REPLACE')
    vg.add([354],1.0, 'REPLACE')
    vg.add([355],0.25, 'REPLACE')
    vg.add([356],0.25, 'REPLACE')
    vg.add([357],0.25, 'REPLACE')
    vg.add([358],0.0, 'REPLACE')
    vg.add([359],0.0, 'REPLACE')
    vg.add([372],0.0, 'REPLACE')
    vg.add([378],0.0, 'REPLACE')
    vg.add([379],0.0, 'REPLACE')
    vg.add([380],0.0, 'REPLACE')
    vg.add([381],0.0, 'REPLACE')
    vg.add([382],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],0.0, 'REPLACE')
    vg.add([386],0.0, 'REPLACE')
    vg.add([387],0.0, 'REPLACE')
    vg.add([388],0.0, 'REPLACE')
    vg.add([389],0.0, 'REPLACE')
    vg.add([390],0.0, 'REPLACE')
    vg.add([391],0.0, 'REPLACE')
    vg.add([392],0.0, 'REPLACE')
    vg.add([393],0.0, 'REPLACE')
    vg.add([394],0.0, 'REPLACE')
    vg.add([395],0.0, 'REPLACE')
    vg.add([396],0.0, 'REPLACE')
    vg.add([397],0.0, 'REPLACE')
    vg.add([398],0.0, 'REPLACE')
    vg.add([399],0.0, 'REPLACE')
    vg.add([400],0.0, 'REPLACE')
    vg.add([401],0.0, 'REPLACE')
    vg.add([402],0.0, 'REPLACE')
    vg.add([403],0.0, 'REPLACE')
    vg.add([404],0.0, 'REPLACE')
    vg.add([405],0.0, 'REPLACE')
    vg.add([406],0.0, 'REPLACE')
    vg.add([407],0.0, 'REPLACE')
    vg.add([408],0.0, 'REPLACE')
    vg.add([409],0.0, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([411],0.0, 'REPLACE')
    vg.add([412],0.0, 'REPLACE')
    vg.add([413],0.0, 'REPLACE')
    vg.add([414],0.0, 'REPLACE')
    vg.add([415],0.0, 'REPLACE')
    vg.add([416],0.0, 'REPLACE')
    vg.add([417],0.0, 'REPLACE')
    vg.add([418],0.0, 'REPLACE')
    vg.add([435],0.0, 'REPLACE')
    vg.add([444],0.0, 'REPLACE')
    vg.add([445],0.0, 'REPLACE')
    vg.add([446],0.0, 'REPLACE')
    vg.add([447],0.0, 'REPLACE')
    vg.add([448],0.0, 'REPLACE')
    vg.add([449],0.0, 'REPLACE')
    vg.add([450],0.0, 'REPLACE')
    vg.add([461],0.0, 'REPLACE')
    vg.add([462],0.0, 'REPLACE')
    vg.add([463],0.0, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([466],0.0, 'REPLACE')
    vg.add([467],0.0, 'REPLACE')
    vg.add([468],0.0, 'REPLACE')
    vg.add([469],0.0, 'REPLACE')
    vg.add([470],0.0, 'REPLACE')
    vg.add([471],0.0, 'REPLACE')
    vg.add([472],0.0, 'REPLACE')
    vg.add([473],0.0, 'REPLACE')
    vg.add([474],0.0, 'REPLACE')
    vg.add([475],0.0, 'REPLACE')
    vg.add([476],0.0, 'REPLACE')
    vg.add([477],0.0, 'REPLACE')
    vg.add([478],0.0, 'REPLACE')
    vg.add([479],0.0, 'REPLACE')
    vg.add([480],0.0, 'REPLACE')
    vg.add([481],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([499],0.0, 'REPLACE')
    vg.add([504],0.0, 'REPLACE')
    vg.add([505],0.0, 'REPLACE')
    vg.add([506],0.0, 'REPLACE')
    vg.add([507],0.0, 'REPLACE')
    vg.add([508],0.0, 'REPLACE')
    vg.add([509],0.0, 'REPLACE')
    vg.add([510],0.0, 'REPLACE')
    vg.add([513],0.0, 'REPLACE')
    vg.add([514],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("foot_def_L")
    vg.add([25],1.0, 'REPLACE')
    vg.add([26],1.0, 'REPLACE')
    vg.add([29],1.0, 'REPLACE')
    vg.add([30],1.0, 'REPLACE')
    vg.add([32],1.0, 'REPLACE')
    vg.add([33],1.0, 'REPLACE')
    vg.add([36],1.0, 'REPLACE')
    vg.add([37],1.0, 'REPLACE')
    vg.add([38],1.0, 'REPLACE')
    vg.add([39],1.0, 'REPLACE')
    vg.add([40],1.0, 'REPLACE')
    vg.add([41],1.0, 'REPLACE')
    vg.add([42],0.0, 'REPLACE')
    vg.add([43],0.0, 'REPLACE')
    vg.add([44],0.0, 'REPLACE')
    vg.add([45],0.0, 'REPLACE')
    vg.add([46],0.0, 'REPLACE')
    vg.add([47],0.0, 'REPLACE')
    vg.add([48],0.0, 'REPLACE')
    vg.add([49],0.0, 'REPLACE')
    vg.add([50],0.0, 'REPLACE')
    vg.add([51],0.0, 'REPLACE')
    vg.add([52],0.0, 'REPLACE')
    vg.add([53],0.0, 'REPLACE')
    vg.add([70],1.0, 'REPLACE')
    vg.add([71],1.0, 'REPLACE')
    vg.add([72],1.0, 'REPLACE')
    vg.add([73],1.0, 'REPLACE')
    vg.add([74],1.0, 'REPLACE')
    vg.add([75],1.0, 'REPLACE')
    vg.add([76],1.0, 'REPLACE')
    vg.add([77],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("foot_def_R")
    vg.add([265],1.0, 'REPLACE')
    vg.add([266],1.0, 'REPLACE')
    vg.add([269],1.0, 'REPLACE')
    vg.add([270],1.0, 'REPLACE')
    vg.add([272],1.0, 'REPLACE')
    vg.add([273],1.0, 'REPLACE')
    vg.add([276],1.0, 'REPLACE')
    vg.add([277],1.0, 'REPLACE')
    vg.add([278],1.0, 'REPLACE')
    vg.add([279],1.0, 'REPLACE')
    vg.add([280],1.0, 'REPLACE')
    vg.add([281],1.0, 'REPLACE')
    vg.add([282],0.0, 'REPLACE')
    vg.add([283],0.0, 'REPLACE')
    vg.add([284],0.0, 'REPLACE')
    vg.add([285],0.0, 'REPLACE')
    vg.add([286],0.0, 'REPLACE')
    vg.add([287],0.0, 'REPLACE')
    vg.add([288],0.0, 'REPLACE')
    vg.add([289],0.0, 'REPLACE')
    vg.add([290],0.0, 'REPLACE')
    vg.add([291],0.0, 'REPLACE')
    vg.add([292],0.0, 'REPLACE')
    vg.add([293],0.0, 'REPLACE')
    vg.add([318],1.0, 'REPLACE')
    vg.add([319],1.0, 'REPLACE')
    vg.add([320],1.0, 'REPLACE')
    vg.add([321],1.0, 'REPLACE')
    vg.add([322],1.0, 'REPLACE')
    vg.add([323],1.0, 'REPLACE')
    vg.add([324],1.0, 'REPLACE')
    vg.add([325],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_2_def_L")
    vg.add([24],1.0, 'REPLACE')
    vg.add([27],1.0, 'REPLACE')
    vg.add([28],1.0, 'REPLACE')
    vg.add([31],1.0, 'REPLACE')
    vg.add([34],1.0, 'REPLACE')
    vg.add([35],1.0, 'REPLACE')
    vg.add([42],1.0, 'REPLACE')
    vg.add([43],1.0, 'REPLACE')
    vg.add([44],1.0, 'REPLACE')
    vg.add([45],1.0, 'REPLACE')
    vg.add([46],1.0, 'REPLACE')
    vg.add([47],1.0, 'REPLACE')
    vg.add([48],0.25, 'REPLACE')
    vg.add([49],0.25, 'REPLACE')
    vg.add([50],0.25, 'REPLACE')
    vg.add([51],0.25, 'REPLACE')
    vg.add([52],0.25, 'REPLACE')
    vg.add([53],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("toe_2_def_R")
    vg.add([264],1.0, 'REPLACE')
    vg.add([267],1.0, 'REPLACE')
    vg.add([268],1.0, 'REPLACE')
    vg.add([271],1.0, 'REPLACE')
    vg.add([274],1.0, 'REPLACE')
    vg.add([275],1.0, 'REPLACE')
    vg.add([282],1.0, 'REPLACE')
    vg.add([283],1.0, 'REPLACE')
    vg.add([284],1.0, 'REPLACE')
    vg.add([285],1.0, 'REPLACE')
    vg.add([286],1.0, 'REPLACE')
    vg.add([287],1.0, 'REPLACE')
    vg.add([288],0.25, 'REPLACE')
    vg.add([289],0.25, 'REPLACE')
    vg.add([290],0.25, 'REPLACE')
    vg.add([291],0.25, 'REPLACE')
    vg.add([292],0.25, 'REPLACE')
    vg.add([293],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("pelvis_def")
    vg.add([82],0.25, 'REPLACE')
    vg.add([83],0.25, 'REPLACE')
    vg.add([84],0.25, 'REPLACE')
    vg.add([85],0.25, 'REPLACE')
    vg.add([90],0.25, 'REPLACE')
    vg.add([92],0.25, 'REPLACE')
    vg.add([96],0.25, 'REPLACE')
    vg.add([98],0.25, 'REPLACE')
    vg.add([110],1.0, 'REPLACE')
    vg.add([111],1.0, 'REPLACE')
    vg.add([112],1.0, 'REPLACE')
    vg.add([113],1.0, 'REPLACE')
    vg.add([114],1.0, 'REPLACE')
    vg.add([115],1.0, 'REPLACE')
    vg.add([116],1.0, 'REPLACE')
    vg.add([117],1.0, 'REPLACE')
    vg.add([118],1.0, 'REPLACE')
    vg.add([119],1.0, 'REPLACE')
    vg.add([120],1.0, 'REPLACE')
    vg.add([121],1.0, 'REPLACE')
    vg.add([122],1.0, 'REPLACE')
    vg.add([123],1.0, 'REPLACE')
    vg.add([124],1.0, 'REPLACE')
    vg.add([140],1.0, 'REPLACE')
    vg.add([141],1.0, 'REPLACE')
    vg.add([187],0.25, 'REPLACE')
    vg.add([188],0.25, 'REPLACE')
    vg.add([189],0.25, 'REPLACE')
    vg.add([190],0.25, 'REPLACE')
    vg.add([191],0.25, 'REPLACE')
    vg.add([218],1.0, 'REPLACE')
    vg.add([227],0.125, 'REPLACE')
    vg.add([228],0.125, 'REPLACE')
    vg.add([229],0.125, 'REPLACE')
    vg.add([230],0.125, 'REPLACE')
    vg.add([231],0.125, 'REPLACE')
    vg.add([312],1.0, 'REPLACE')
    vg.add([313],0.25, 'REPLACE')
    vg.add([330],0.25, 'REPLACE')
    vg.add([331],0.25, 'REPLACE')
    vg.add([332],0.25, 'REPLACE')
    vg.add([333],0.25, 'REPLACE')
    vg.add([338],0.25, 'REPLACE')
    vg.add([340],0.25, 'REPLACE')
    vg.add([344],0.25, 'REPLACE')
    vg.add([346],0.25, 'REPLACE')
    vg.add([358],1.0, 'REPLACE')
    vg.add([359],1.0, 'REPLACE')
    vg.add([360],1.0, 'REPLACE')
    vg.add([361],1.0, 'REPLACE')
    vg.add([362],1.0, 'REPLACE')
    vg.add([363],1.0, 'REPLACE')
    vg.add([364],1.0, 'REPLACE')
    vg.add([365],1.0, 'REPLACE')
    vg.add([366],1.0, 'REPLACE')
    vg.add([367],1.0, 'REPLACE')
    vg.add([368],1.0, 'REPLACE')
    vg.add([369],1.0, 'REPLACE')
    vg.add([370],1.0, 'REPLACE')
    vg.add([371],1.0, 'REPLACE')
    vg.add([372],1.0, 'REPLACE')
    vg.add([388],1.0, 'REPLACE')
    vg.add([389],1.0, 'REPLACE')
    vg.add([419],1.0, 'REPLACE')
    vg.add([420],1.0, 'REPLACE')
    vg.add([426],0.25, 'REPLACE')
    vg.add([427],0.125, 'REPLACE')
    vg.add([429],1.0, 'REPLACE')
    vg.add([430],1.0, 'REPLACE')
    vg.add([431],1.0, 'REPLACE')
    vg.add([432],1.0, 'REPLACE')
    vg.add([433],0.125, 'REPLACE')
    vg.add([434],1.0, 'REPLACE')
    vg.add([451],0.25, 'REPLACE')
    vg.add([452],0.25, 'REPLACE')
    vg.add([453],0.25, 'REPLACE')
    vg.add([454],0.25, 'REPLACE')
    vg.add([455],0.25, 'REPLACE')
    vg.add([482],1.0, 'REPLACE')
    vg.add([491],0.125, 'REPLACE')
    vg.add([492],0.125, 'REPLACE')
    vg.add([493],0.125, 'REPLACE')
    vg.add([494],0.125, 'REPLACE')
    vg.add([495],0.125, 'REPLACE')
    vg = ob.vertex_groups.new("spine_1_def")
    vg.add([112],0.25, 'REPLACE')
    vg.add([113],0.25, 'REPLACE')
    vg.add([116],0.25, 'REPLACE')
    vg.add([118],0.25, 'REPLACE')
    vg.add([122],0.25, 'REPLACE')
    vg.add([125],1.0, 'REPLACE')
    vg.add([126],1.0, 'REPLACE')
    vg.add([127],1.0, 'REPLACE')
    vg.add([128],1.0, 'REPLACE')
    vg.add([129],1.0, 'REPLACE')
    vg.add([187],1.0, 'REPLACE')
    vg.add([188],1.0, 'REPLACE')
    vg.add([189],1.0, 'REPLACE')
    vg.add([190],1.0, 'REPLACE')
    vg.add([191],1.0, 'REPLACE')
    vg.add([192],0.25, 'REPLACE')
    vg.add([193],0.25, 'REPLACE')
    vg.add([194],0.25, 'REPLACE')
    vg.add([195],0.25, 'REPLACE')
    vg.add([196],0.25, 'REPLACE')
    vg.add([227],1.0, 'REPLACE')
    vg.add([228],1.0, 'REPLACE')
    vg.add([229],1.0, 'REPLACE')
    vg.add([230],1.0, 'REPLACE')
    vg.add([231],1.0, 'REPLACE')
    vg.add([310],1.0, 'REPLACE')
    vg.add([313],1.0, 'REPLACE')
    vg.add([360],0.25, 'REPLACE')
    vg.add([361],0.25, 'REPLACE')
    vg.add([364],0.25, 'REPLACE')
    vg.add([366],0.25, 'REPLACE')
    vg.add([370],0.25, 'REPLACE')
    vg.add([373],1.0, 'REPLACE')
    vg.add([374],1.0, 'REPLACE')
    vg.add([375],1.0, 'REPLACE')
    vg.add([376],1.0, 'REPLACE')
    vg.add([377],1.0, 'REPLACE')
    vg.add([419],0.25, 'REPLACE')
    vg.add([422],0.25, 'REPLACE')
    vg.add([425],0.25, 'REPLACE')
    vg.add([426],1.0, 'REPLACE')
    vg.add([427],1.0, 'REPLACE')
    vg.add([428],1.0, 'REPLACE')
    vg.add([432],0.25, 'REPLACE')
    vg.add([433],1.0, 'REPLACE')
    vg.add([451],1.0, 'REPLACE')
    vg.add([452],1.0, 'REPLACE')
    vg.add([453],1.0, 'REPLACE')
    vg.add([454],1.0, 'REPLACE')
    vg.add([455],1.0, 'REPLACE')
    vg.add([456],0.25, 'REPLACE')
    vg.add([457],0.25, 'REPLACE')
    vg.add([458],0.25, 'REPLACE')
    vg.add([459],0.25, 'REPLACE')
    vg.add([460],0.25, 'REPLACE')
    vg.add([491],1.0, 'REPLACE')
    vg.add([492],1.0, 'REPLACE')
    vg.add([493],1.0, 'REPLACE')
    vg.add([494],1.0, 'REPLACE')
    vg.add([495],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("spine_2_def")
    vg.add([125],0.25, 'REPLACE')
    vg.add([126],0.25, 'REPLACE')
    vg.add([127],0.25, 'REPLACE')
    vg.add([128],0.25, 'REPLACE')
    vg.add([129],0.25, 'REPLACE')
    vg.add([130],1.0, 'REPLACE')
    vg.add([131],1.0, 'REPLACE')
    vg.add([132],1.0, 'REPLACE')
    vg.add([133],1.0, 'REPLACE')
    vg.add([134],1.0, 'REPLACE')
    vg.add([192],1.0, 'REPLACE')
    vg.add([193],1.0, 'REPLACE')
    vg.add([194],1.0, 'REPLACE')
    vg.add([195],1.0, 'REPLACE')
    vg.add([196],1.0, 'REPLACE')
    vg.add([197],0.25, 'REPLACE')
    vg.add([198],0.25, 'REPLACE')
    vg.add([199],0.25, 'REPLACE')
    vg.add([200],0.25, 'REPLACE')
    vg.add([201],0.25, 'REPLACE')
    vg.add([227],0.125, 'REPLACE')
    vg.add([228],0.125, 'REPLACE')
    vg.add([229],0.125, 'REPLACE')
    vg.add([230],0.125, 'REPLACE')
    vg.add([231],0.125, 'REPLACE')
    vg.add([232],0.125, 'REPLACE')
    vg.add([236],0.125, 'REPLACE')
    vg.add([237],0.125, 'REPLACE')
    vg.add([238],0.125, 'REPLACE')
    vg.add([239],0.125, 'REPLACE')
    vg.add([310],0.25, 'REPLACE')
    vg.add([311],0.25, 'REPLACE')
    vg.add([315],0.125, 'REPLACE')
    vg.add([316],0.25, 'REPLACE')
    vg.add([373],0.25, 'REPLACE')
    vg.add([374],0.25, 'REPLACE')
    vg.add([375],0.25, 'REPLACE')
    vg.add([376],0.25, 'REPLACE')
    vg.add([377],0.25, 'REPLACE')
    vg.add([378],1.0, 'REPLACE')
    vg.add([379],1.0, 'REPLACE')
    vg.add([380],1.0, 'REPLACE')
    vg.add([381],1.0, 'REPLACE')
    vg.add([382],1.0, 'REPLACE')
    vg.add([421],0.125, 'REPLACE')
    vg.add([422],1.0, 'REPLACE')
    vg.add([423],1.0, 'REPLACE')
    vg.add([424],1.0, 'REPLACE')
    vg.add([425],1.0, 'REPLACE')
    vg.add([427],0.125, 'REPLACE')
    vg.add([428],0.25, 'REPLACE')
    vg.add([433],0.125, 'REPLACE')
    vg.add([456],1.0, 'REPLACE')
    vg.add([457],1.0, 'REPLACE')
    vg.add([458],1.0, 'REPLACE')
    vg.add([459],1.0, 'REPLACE')
    vg.add([460],1.0, 'REPLACE')
    vg.add([461],0.25, 'REPLACE')
    vg.add([462],0.25, 'REPLACE')
    vg.add([463],0.25, 'REPLACE')
    vg.add([464],0.25, 'REPLACE')
    vg.add([465],0.25, 'REPLACE')
    vg.add([491],0.125, 'REPLACE')
    vg.add([492],0.125, 'REPLACE')
    vg.add([493],0.125, 'REPLACE')
    vg.add([494],0.125, 'REPLACE')
    vg.add([495],0.125, 'REPLACE')
    vg.add([496],0.125, 'REPLACE')
    vg.add([500],0.125, 'REPLACE')
    vg.add([501],0.125, 'REPLACE')
    vg.add([502],0.125, 'REPLACE')
    vg.add([503],0.125, 'REPLACE')
    vg = ob.vertex_groups.new("spine_3_def")
    vg.add([130],0.25, 'REPLACE')
    vg.add([131],0.25, 'REPLACE')
    vg.add([132],0.25, 'REPLACE')
    vg.add([133],0.25, 'REPLACE')
    vg.add([134],0.25, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([137],1.0, 'REPLACE')
    vg.add([138],1.0, 'REPLACE')
    vg.add([139],0.0, 'REPLACE')
    vg.add([142],1.0, 'REPLACE')
    vg.add([143],1.0, 'REPLACE')
    vg.add([144],1.0, 'REPLACE')
    vg.add([148],1.0, 'REPLACE')
    vg.add([162],0.0, 'REPLACE')
    vg.add([197],1.0, 'REPLACE')
    vg.add([198],1.0, 'REPLACE')
    vg.add([199],1.0, 'REPLACE')
    vg.add([200],1.0, 'REPLACE')
    vg.add([201],1.0, 'REPLACE')
    vg.add([232],1.0, 'REPLACE')
    vg.add([233],1.0, 'REPLACE')
    vg.add([234],1.0, 'REPLACE')
    vg.add([235],1.0, 'REPLACE')
    vg.add([236],0.5, 'REPLACE')
    vg.add([237],0.5, 'REPLACE')
    vg.add([238],0.5, 'REPLACE')
    vg.add([239],1.0, 'REPLACE')
    vg.add([311],1.0, 'REPLACE')
    vg.add([314],1.0, 'REPLACE')
    vg.add([315],1.0, 'REPLACE')
    vg.add([316],1.0, 'REPLACE')
    vg.add([317],1.0, 'REPLACE')
    vg.add([378],0.25, 'REPLACE')
    vg.add([379],0.25, 'REPLACE')
    vg.add([380],0.25, 'REPLACE')
    vg.add([381],0.25, 'REPLACE')
    vg.add([382],0.25, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],1.0, 'REPLACE')
    vg.add([386],1.0, 'REPLACE')
    vg.add([387],0.0, 'REPLACE')
    vg.add([390],1.0, 'REPLACE')
    vg.add([391],1.0, 'REPLACE')
    vg.add([392],1.0, 'REPLACE')
    vg.add([396],1.0, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([421],1.0, 'REPLACE')
    vg.add([423],0.25, 'REPLACE')
    vg.add([424],0.25, 'REPLACE')
    vg.add([461],1.0, 'REPLACE')
    vg.add([462],1.0, 'REPLACE')
    vg.add([463],1.0, 'REPLACE')
    vg.add([464],1.0, 'REPLACE')
    vg.add([465],1.0, 'REPLACE')
    vg.add([496],1.0, 'REPLACE')
    vg.add([497],1.0, 'REPLACE')
    vg.add([498],1.0, 'REPLACE')
    vg.add([499],1.0, 'REPLACE')
    vg.add([500],0.5, 'REPLACE')
    vg.add([501],0.5, 'REPLACE')
    vg.add([502],0.5, 'REPLACE')
    vg.add([503],1.0, 'REPLACE')
    vg.add([504],1.0, 'REPLACE')
    vg.add([505],1.0, 'REPLACE')
    vg.add([506],1.0, 'REPLACE')
    vg.add([508],1.0, 'REPLACE')
    vg.add([510],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("clavi_def_L")
    vg.add([130],0.125, 'REPLACE')
    vg.add([131],0.125, 'REPLACE')
    vg.add([134],0.125, 'REPLACE')
    vg.add([135],1.0, 'REPLACE')
    vg.add([136],1.0, 'REPLACE')
    vg.add([137],1.0, 'REPLACE')
    vg.add([138],1.0, 'REPLACE')
    vg.add([139],1.0, 'REPLACE')
    vg.add([142],1.0, 'REPLACE')
    vg.add([159],1.0, 'REPLACE')
    vg.add([160],1.0, 'REPLACE')
    vg.add([161],1.0, 'REPLACE')
    vg.add([162],1.0, 'REPLACE')
    vg.add([163],1.0, 'REPLACE')
    vg.add([165],1.0, 'REPLACE')
    vg.add([167],1.0, 'REPLACE')
    vg.add([169],1.0, 'REPLACE')
    vg.add([198],0.125, 'REPLACE')
    vg.add([199],0.125, 'REPLACE')
    vg.add([200],0.125, 'REPLACE')
    vg.add([232],0.5, 'REPLACE')
    vg.add([233],1.0, 'REPLACE')
    vg.add([234],1.0, 'REPLACE')
    vg.add([235],1.0, 'REPLACE')
    vg.add([236],0.75, 'REPLACE')
    vg.add([237],1.0, 'REPLACE')
    vg.add([238],0.75, 'REPLACE')
    vg.add([239],0.5, 'REPLACE')
    vg.add([378],0.0, 'REPLACE')
    vg.add([379],0.0, 'REPLACE')
    vg.add([380],0.0, 'REPLACE')
    vg.add([381],0.0, 'REPLACE')
    vg.add([382],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],0.0, 'REPLACE')
    vg.add([386],0.0, 'REPLACE')
    vg.add([387],0.0, 'REPLACE')
    vg.add([390],0.0, 'REPLACE')
    vg.add([391],0.0, 'REPLACE')
    vg.add([392],0.0, 'REPLACE')
    vg.add([394],0.0, 'REPLACE')
    vg.add([395],0.0, 'REPLACE')
    vg.add([396],0.0, 'REPLACE')
    vg.add([397],0.0, 'REPLACE')
    vg.add([398],0.0, 'REPLACE')
    vg.add([399],0.0, 'REPLACE')
    vg.add([400],0.0, 'REPLACE')
    vg.add([401],0.0, 'REPLACE')
    vg.add([402],0.0, 'REPLACE')
    vg.add([407],0.0, 'REPLACE')
    vg.add([408],0.0, 'REPLACE')
    vg.add([409],0.0, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([411],0.0, 'REPLACE')
    vg.add([413],0.0, 'REPLACE')
    vg.add([415],0.0, 'REPLACE')
    vg.add([417],0.0, 'REPLACE')
    vg.add([461],0.0, 'REPLACE')
    vg.add([462],0.0, 'REPLACE')
    vg.add([463],0.0, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([474],0.0, 'REPLACE')
    vg.add([475],0.0, 'REPLACE')
    vg.add([476],0.0, 'REPLACE')
    vg.add([477],0.0, 'REPLACE')
    vg.add([478],0.0, 'REPLACE')
    vg.add([479],0.0, 'REPLACE')
    vg.add([480],0.0, 'REPLACE')
    vg.add([481],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([499],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("clavi_def_R")
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([132],0.0, 'REPLACE')
    vg.add([133],0.0, 'REPLACE')
    vg.add([134],0.0, 'REPLACE')
    vg.add([135],0.0, 'REPLACE')
    vg.add([136],0.0, 'REPLACE')
    vg.add([137],0.0, 'REPLACE')
    vg.add([138],0.0, 'REPLACE')
    vg.add([139],0.0, 'REPLACE')
    vg.add([142],0.0, 'REPLACE')
    vg.add([143],0.0, 'REPLACE')
    vg.add([144],0.0, 'REPLACE')
    vg.add([146],0.0, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([148],0.0, 'REPLACE')
    vg.add([149],0.0, 'REPLACE')
    vg.add([150],0.0, 'REPLACE')
    vg.add([151],0.0, 'REPLACE')
    vg.add([152],0.0, 'REPLACE')
    vg.add([153],0.0, 'REPLACE')
    vg.add([154],0.0, 'REPLACE')
    vg.add([159],0.0, 'REPLACE')
    vg.add([160],0.0, 'REPLACE')
    vg.add([161],0.0, 'REPLACE')
    vg.add([162],0.0, 'REPLACE')
    vg.add([163],0.0, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([169],0.0, 'REPLACE')
    vg.add([197],0.0, 'REPLACE')
    vg.add([198],0.0, 'REPLACE')
    vg.add([199],0.0, 'REPLACE')
    vg.add([200],0.0, 'REPLACE')
    vg.add([201],0.0, 'REPLACE')
    vg.add([210],0.0, 'REPLACE')
    vg.add([211],0.0, 'REPLACE')
    vg.add([212],0.0, 'REPLACE')
    vg.add([213],0.0, 'REPLACE')
    vg.add([214],0.0, 'REPLACE')
    vg.add([215],0.0, 'REPLACE')
    vg.add([216],0.0, 'REPLACE')
    vg.add([217],0.0, 'REPLACE')
    vg.add([233],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([235],0.0, 'REPLACE')
    vg.add([378],0.125, 'REPLACE')
    vg.add([379],0.125, 'REPLACE')
    vg.add([382],0.125, 'REPLACE')
    vg.add([383],1.0, 'REPLACE')
    vg.add([384],1.0, 'REPLACE')
    vg.add([385],1.0, 'REPLACE')
    vg.add([386],1.0, 'REPLACE')
    vg.add([387],1.0, 'REPLACE')
    vg.add([390],1.0, 'REPLACE')
    vg.add([407],1.0, 'REPLACE')
    vg.add([408],1.0, 'REPLACE')
    vg.add([409],1.0, 'REPLACE')
    vg.add([410],1.0, 'REPLACE')
    vg.add([411],1.0, 'REPLACE')
    vg.add([413],1.0, 'REPLACE')
    vg.add([415],1.0, 'REPLACE')
    vg.add([417],1.0, 'REPLACE')
    vg.add([462],0.125, 'REPLACE')
    vg.add([463],0.125, 'REPLACE')
    vg.add([464],0.125, 'REPLACE')
    vg.add([496],0.5, 'REPLACE')
    vg.add([497],1.0, 'REPLACE')
    vg.add([498],1.0, 'REPLACE')
    vg.add([499],1.0, 'REPLACE')
    vg.add([500],0.75, 'REPLACE')
    vg.add([501],1.0, 'REPLACE')
    vg.add([502],0.75, 'REPLACE')
    vg.add([503],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("arm_def_L")
    vg.add([172],1.0, 'REPLACE')
    vg.add([173],1.0, 'REPLACE')
    vg.add([174],1.0, 'REPLACE')
    vg.add([175],1.0, 'REPLACE')
    vg.add([176],1.0, 'REPLACE')
    vg.add([177],1.0, 'REPLACE')
    vg.add([178],1.0, 'REPLACE')
    vg.add([179],1.0, 'REPLACE')
    vg.add([210],1.0, 'REPLACE')
    vg.add([211],1.0, 'REPLACE')
    vg.add([212],1.0, 'REPLACE')
    vg.add([213],1.0, 'REPLACE')
    vg.add([214],1.0, 'REPLACE')
    vg.add([215],1.0, 'REPLACE')
    vg.add([216],1.0, 'REPLACE')
    vg.add([217],1.0, 'REPLACE')
    vg.add([219],1.0, 'REPLACE')
    vg.add([220],1.0, 'REPLACE')
    vg.add([221],1.0, 'REPLACE')
    vg.add([222],1.0, 'REPLACE')
    vg.add([223],1.0, 'REPLACE')
    vg.add([224],1.0, 'REPLACE')
    vg.add([225],1.0, 'REPLACE')
    vg.add([226],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("arm_def_R")
    vg.add([436],1.0, 'REPLACE')
    vg.add([437],1.0, 'REPLACE')
    vg.add([438],1.0, 'REPLACE')
    vg.add([439],1.0, 'REPLACE')
    vg.add([440],1.0, 'REPLACE')
    vg.add([441],1.0, 'REPLACE')
    vg.add([442],1.0, 'REPLACE')
    vg.add([443],1.0, 'REPLACE')
    vg.add([474],1.0, 'REPLACE')
    vg.add([475],1.0, 'REPLACE')
    vg.add([476],1.0, 'REPLACE')
    vg.add([477],1.0, 'REPLACE')
    vg.add([478],1.0, 'REPLACE')
    vg.add([479],1.0, 'REPLACE')
    vg.add([480],1.0, 'REPLACE')
    vg.add([481],1.0, 'REPLACE')
    vg.add([483],1.0, 'REPLACE')
    vg.add([484],1.0, 'REPLACE')
    vg.add([485],1.0, 'REPLACE')
    vg.add([486],1.0, 'REPLACE')
    vg.add([487],1.0, 'REPLACE')
    vg.add([488],1.0, 'REPLACE')
    vg.add([489],1.0, 'REPLACE')
    vg.add([490],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("arm_twist_def_L")
    vg.add([155],0.25, 'REPLACE')
    vg.add([156],1.0, 'REPLACE')
    vg.add([157],1.0, 'REPLACE')
    vg.add([158],1.0, 'REPLACE')
    vg.add([164],1.0, 'REPLACE')
    vg.add([166],1.0, 'REPLACE')
    vg.add([168],0.25, 'REPLACE')
    vg.add([170],0.25, 'REPLACE')
    vg.add([172],0.0, 'REPLACE')
    vg.add([173],0.0, 'REPLACE')
    vg.add([174],0.0, 'REPLACE')
    vg.add([175],0.0, 'REPLACE')
    vg.add([176],0.0, 'REPLACE')
    vg.add([177],0.0, 'REPLACE')
    vg.add([178],0.0, 'REPLACE')
    vg.add([179],0.0, 'REPLACE')
    vg.add([202],1.0, 'REPLACE')
    vg.add([203],1.0, 'REPLACE')
    vg.add([204],0.25, 'REPLACE')
    vg.add([205],0.25, 'REPLACE')
    vg.add([206],0.25, 'REPLACE')
    vg.add([207],0.25, 'REPLACE')
    vg.add([208],0.25, 'REPLACE')
    vg.add([209],1.0, 'REPLACE')
    vg.add([219],1.0, 'REPLACE')
    vg.add([220],1.0, 'REPLACE')
    vg.add([221],1.0, 'REPLACE')
    vg.add([222],1.0, 'REPLACE')
    vg.add([223],1.0, 'REPLACE')
    vg.add([224],1.0, 'REPLACE')
    vg.add([225],1.0, 'REPLACE')
    vg.add([226],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("arm_twist_def_R")
    vg.add([403],0.25, 'REPLACE')
    vg.add([404],1.0, 'REPLACE')
    vg.add([405],1.0, 'REPLACE')
    vg.add([406],1.0, 'REPLACE')
    vg.add([412],1.0, 'REPLACE')
    vg.add([414],1.0, 'REPLACE')
    vg.add([416],0.25, 'REPLACE')
    vg.add([418],0.25, 'REPLACE')
    vg.add([436],0.0, 'REPLACE')
    vg.add([437],0.0, 'REPLACE')
    vg.add([438],0.0, 'REPLACE')
    vg.add([439],0.0, 'REPLACE')
    vg.add([440],0.0, 'REPLACE')
    vg.add([441],0.0, 'REPLACE')
    vg.add([442],0.0, 'REPLACE')
    vg.add([443],0.0, 'REPLACE')
    vg.add([466],1.0, 'REPLACE')
    vg.add([467],1.0, 'REPLACE')
    vg.add([468],0.25, 'REPLACE')
    vg.add([469],0.25, 'REPLACE')
    vg.add([470],0.25, 'REPLACE')
    vg.add([471],0.25, 'REPLACE')
    vg.add([472],0.25, 'REPLACE')
    vg.add([473],1.0, 'REPLACE')
    vg.add([483],1.0, 'REPLACE')
    vg.add([484],1.0, 'REPLACE')
    vg.add([485],1.0, 'REPLACE')
    vg.add([486],1.0, 'REPLACE')
    vg.add([487],1.0, 'REPLACE')
    vg.add([488],1.0, 'REPLACE')
    vg.add([489],1.0, 'REPLACE')
    vg.add([490],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_def_L")
    vg.add([8],1.0, 'REPLACE')
    vg.add([9],1.0, 'REPLACE')
    vg.add([10],0.0, 'REPLACE')
    vg.add([11],0.0, 'REPLACE')
    vg.add([12],0.0, 'REPLACE')
    vg.add([13],0.0, 'REPLACE')
    vg.add([14],0.0, 'REPLACE')
    vg.add([15],0.0, 'REPLACE')
    vg.add([16],0.0, 'REPLACE')
    vg.add([17],0.0, 'REPLACE')
    vg.add([18],1.0, 'REPLACE')
    vg.add([19],1.0, 'REPLACE')
    vg.add([20],1.0, 'REPLACE')
    vg.add([21],1.0, 'REPLACE')
    vg.add([22],1.0, 'REPLACE')
    vg.add([23],1.0, 'REPLACE')
    vg.add([62],0.0, 'REPLACE')
    vg.add([63],0.0, 'REPLACE')
    vg.add([64],0.0, 'REPLACE')
    vg.add([65],0.0, 'REPLACE')
    vg.add([66],0.0, 'REPLACE')
    vg.add([67],0.0, 'REPLACE')
    vg.add([68],0.0, 'REPLACE')
    vg.add([69],0.0, 'REPLACE')
    vg.add([155],1.0, 'REPLACE')
    vg.add([156],0.25, 'REPLACE')
    vg.add([157],0.25, 'REPLACE')
    vg.add([158],0.25, 'REPLACE')
    vg.add([164],0.25, 'REPLACE')
    vg.add([166],0.25, 'REPLACE')
    vg.add([168],1.0, 'REPLACE')
    vg.add([170],1.0, 'REPLACE')
    vg.add([171],1.0, 'REPLACE')
    vg.add([180],1.0, 'REPLACE')
    vg.add([181],1.0, 'REPLACE')
    vg.add([182],1.0, 'REPLACE')
    vg.add([183],1.0, 'REPLACE')
    vg.add([184],1.0, 'REPLACE')
    vg.add([185],1.0, 'REPLACE')
    vg.add([186],1.0, 'REPLACE')
    vg.add([202],0.25, 'REPLACE')
    vg.add([203],0.25, 'REPLACE')
    vg.add([204],1.0, 'REPLACE')
    vg.add([205],1.0, 'REPLACE')
    vg.add([206],1.0, 'REPLACE')
    vg.add([207],1.0, 'REPLACE')
    vg.add([208],1.0, 'REPLACE')
    vg.add([209],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_def_R")
    vg.add([248],1.0, 'REPLACE')
    vg.add([249],1.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([251],0.0, 'REPLACE')
    vg.add([252],0.0, 'REPLACE')
    vg.add([253],0.0, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([255],0.0, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.0, 'REPLACE')
    vg.add([258],1.0, 'REPLACE')
    vg.add([259],1.0, 'REPLACE')
    vg.add([260],1.0, 'REPLACE')
    vg.add([261],1.0, 'REPLACE')
    vg.add([262],1.0, 'REPLACE')
    vg.add([263],1.0, 'REPLACE')
    vg.add([302],0.0, 'REPLACE')
    vg.add([303],0.0, 'REPLACE')
    vg.add([304],0.0, 'REPLACE')
    vg.add([305],0.0, 'REPLACE')
    vg.add([306],0.0, 'REPLACE')
    vg.add([307],0.0, 'REPLACE')
    vg.add([308],0.0, 'REPLACE')
    vg.add([309],0.0, 'REPLACE')
    vg.add([403],1.0, 'REPLACE')
    vg.add([404],0.25, 'REPLACE')
    vg.add([405],0.25, 'REPLACE')
    vg.add([406],0.25, 'REPLACE')
    vg.add([412],0.25, 'REPLACE')
    vg.add([414],0.25, 'REPLACE')
    vg.add([416],1.0, 'REPLACE')
    vg.add([418],1.0, 'REPLACE')
    vg.add([435],1.0, 'REPLACE')
    vg.add([444],1.0, 'REPLACE')
    vg.add([445],1.0, 'REPLACE')
    vg.add([446],1.0, 'REPLACE')
    vg.add([447],1.0, 'REPLACE')
    vg.add([448],1.0, 'REPLACE')
    vg.add([449],1.0, 'REPLACE')
    vg.add([450],1.0, 'REPLACE')
    vg.add([466],0.25, 'REPLACE')
    vg.add([467],0.25, 'REPLACE')
    vg.add([468],1.0, 'REPLACE')
    vg.add([469],1.0, 'REPLACE')
    vg.add([470],1.0, 'REPLACE')
    vg.add([471],1.0, 'REPLACE')
    vg.add([472],1.0, 'REPLACE')
    vg.add([473],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("hand_def_L")
    vg.add([10],0.5, 'REPLACE')
    vg.add([11],0.5, 'REPLACE')
    vg.add([12],0.5, 'REPLACE')
    vg.add([13],0.5, 'REPLACE')
    vg.add([14],0.5, 'REPLACE')
    vg.add([15],0.5, 'REPLACE')
    vg.add([16],0.5, 'REPLACE')
    vg.add([17],0.5, 'REPLACE')
    vg.add([62],0.0, 'REPLACE')
    vg.add([63],0.25, 'REPLACE')
    vg.add([64],0.0, 'REPLACE')
    vg.add([65],0.0, 'REPLACE')
    vg.add([66],0.0, 'REPLACE')
    vg.add([67],0.0, 'REPLACE')
    vg.add([68],0.25, 'REPLACE')
    vg.add([69],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("hand_def_R")
    vg.add([250],0.5, 'REPLACE')
    vg.add([251],0.5, 'REPLACE')
    vg.add([252],0.5, 'REPLACE')
    vg.add([253],0.5, 'REPLACE')
    vg.add([254],0.5, 'REPLACE')
    vg.add([255],0.5, 'REPLACE')
    vg.add([256],0.5, 'REPLACE')
    vg.add([257],0.5, 'REPLACE')
    vg.add([302],0.0, 'REPLACE')
    vg.add([303],0.25, 'REPLACE')
    vg.add([304],0.0, 'REPLACE')
    vg.add([305],0.0, 'REPLACE')
    vg.add([306],0.0, 'REPLACE')
    vg.add([307],0.0, 'REPLACE')
    vg.add([308],0.25, 'REPLACE')
    vg.add([309],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("neck_1_def")
    vg.add([150],1.0, 'REPLACE')
    vg.add([152],1.0, 'REPLACE')
    vg.add([154],1.0, 'REPLACE')
    vg.add([398],1.0, 'REPLACE')
    vg.add([400],1.0, 'REPLACE')
    vg.add([402],1.0, 'REPLACE')
    vg.add([507],1.0, 'REPLACE')
    vg.add([509],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("neck_2_def")
    vg.add([149],1.0, 'REPLACE')
    vg.add([150],1.0, 'REPLACE')
    vg.add([151],1.0, 'REPLACE')
    vg.add([152],1.0, 'REPLACE')
    vg.add([153],1.0, 'REPLACE')
    vg.add([154],1.0, 'REPLACE')
    vg.add([397],1.0, 'REPLACE')
    vg.add([398],1.0, 'REPLACE')
    vg.add([399],1.0, 'REPLACE')
    vg.add([400],1.0, 'REPLACE')
    vg.add([401],1.0, 'REPLACE')
    vg.add([402],1.0, 'REPLACE')
    vg.add([507],1.0, 'REPLACE')
    vg.add([509],1.0, 'REPLACE')
    vg.add([511],1.0, 'REPLACE')
    vg.add([513],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("neck_3_def")
    vg.add([145],1.0, 'REPLACE')
    vg.add([146],1.0, 'REPLACE')
    vg.add([147],1.0, 'REPLACE')
    vg.add([149],1.0, 'REPLACE')
    vg.add([151],1.0, 'REPLACE')
    vg.add([153],1.0, 'REPLACE')
    vg.add([393],1.0, 'REPLACE')
    vg.add([394],1.0, 'REPLACE')
    vg.add([395],1.0, 'REPLACE')
    vg.add([397],1.0, 'REPLACE')
    vg.add([399],1.0, 'REPLACE')
    vg.add([401],1.0, 'REPLACE')
    vg.add([511],1.0, 'REPLACE')
    vg.add([512],1.0, 'REPLACE')
    vg.add([513],1.0, 'REPLACE')
    vg.add([514],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_def_L")
    vg.add([82],1.0, 'REPLACE')
    vg.add([83],1.0, 'REPLACE')
    vg.add([84],1.0, 'REPLACE')
    vg.add([85],1.0, 'REPLACE')
    vg.add([86],1.0, 'REPLACE')
    vg.add([87],1.0, 'REPLACE')
    vg.add([88],1.0, 'REPLACE')
    vg.add([89],1.0, 'REPLACE')
    vg.add([90],1.0, 'REPLACE')
    vg.add([92],1.0, 'REPLACE')
    vg.add([94],1.0, 'REPLACE')
    vg.add([95],1.0, 'REPLACE')
    vg.add([96],1.0, 'REPLACE')
    vg.add([98],1.0, 'REPLACE')
    vg.add([100],1.0, 'REPLACE')
    vg.add([101],1.0, 'REPLACE')
    vg.add([110],0.25, 'REPLACE')
    vg.add([111],0.25, 'REPLACE')
    vg.add([117],0.25, 'REPLACE')
    vg.add([119],0.25, 'REPLACE')
    vg.add([124],0.25, 'REPLACE')
    vg.add([140],0.25, 'REPLACE')
    vg.add([141],0.25, 'REPLACE')
    vg.add([218],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_def_R")
    vg.add([330],1.0, 'REPLACE')
    vg.add([331],1.0, 'REPLACE')
    vg.add([332],1.0, 'REPLACE')
    vg.add([333],1.0, 'REPLACE')
    vg.add([334],1.0, 'REPLACE')
    vg.add([335],1.0, 'REPLACE')
    vg.add([336],1.0, 'REPLACE')
    vg.add([337],1.0, 'REPLACE')
    vg.add([338],1.0, 'REPLACE')
    vg.add([340],1.0, 'REPLACE')
    vg.add([342],1.0, 'REPLACE')
    vg.add([343],1.0, 'REPLACE')
    vg.add([344],1.0, 'REPLACE')
    vg.add([346],1.0, 'REPLACE')
    vg.add([348],1.0, 'REPLACE')
    vg.add([349],1.0, 'REPLACE')
    vg.add([358],0.25, 'REPLACE')
    vg.add([359],0.25, 'REPLACE')
    vg.add([365],0.25, 'REPLACE')
    vg.add([367],0.25, 'REPLACE')
    vg.add([372],0.25, 'REPLACE')
    vg.add([388],0.25, 'REPLACE')
    vg.add([389],0.25, 'REPLACE')
    vg.add([482],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("shin_twist_def_L")
    vg.add([0],1.0, 'REPLACE')
    vg.add([1],1.0, 'REPLACE')
    vg.add([2],1.0, 'REPLACE')
    vg.add([3],1.0, 'REPLACE')
    vg.add([4],1.0, 'REPLACE')
    vg.add([5],1.0, 'REPLACE')
    vg.add([6],1.0, 'REPLACE')
    vg.add([7],1.0, 'REPLACE')
    vg.add([8],0.0, 'REPLACE')
    vg.add([9],0.0, 'REPLACE')
    vg.add([10],0.0, 'REPLACE')
    vg.add([11],0.0, 'REPLACE')
    vg.add([12],0.0, 'REPLACE')
    vg.add([13],0.0, 'REPLACE')
    vg.add([14],0.0, 'REPLACE')
    vg.add([15],0.0, 'REPLACE')
    vg.add([16],0.0, 'REPLACE')
    vg.add([17],0.0, 'REPLACE')
    vg.add([18],0.0, 'REPLACE')
    vg.add([19],0.0, 'REPLACE')
    vg.add([20],0.0, 'REPLACE')
    vg.add([21],0.0, 'REPLACE')
    vg.add([22],0.0, 'REPLACE')
    vg.add([23],0.0, 'REPLACE')
    vg.add([54],1.0, 'REPLACE')
    vg.add([55],1.0, 'REPLACE')
    vg.add([56],1.0, 'REPLACE')
    vg.add([57],1.0, 'REPLACE')
    vg.add([58],1.0, 'REPLACE')
    vg.add([59],1.0, 'REPLACE')
    vg.add([60],1.0, 'REPLACE')
    vg.add([61],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("shin_twist_def_R")
    vg.add([240],1.0, 'REPLACE')
    vg.add([241],1.0, 'REPLACE')
    vg.add([242],1.0, 'REPLACE')
    vg.add([243],1.0, 'REPLACE')
    vg.add([244],1.0, 'REPLACE')
    vg.add([245],1.0, 'REPLACE')
    vg.add([246],1.0, 'REPLACE')
    vg.add([247],1.0, 'REPLACE')
    vg.add([248],0.0, 'REPLACE')
    vg.add([249],0.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([251],0.0, 'REPLACE')
    vg.add([252],0.0, 'REPLACE')
    vg.add([253],0.0, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([255],0.0, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.0, 'REPLACE')
    vg.add([258],0.0, 'REPLACE')
    vg.add([259],0.0, 'REPLACE')
    vg.add([260],0.0, 'REPLACE')
    vg.add([261],0.0, 'REPLACE')
    vg.add([262],0.0, 'REPLACE')
    vg.add([263],0.0, 'REPLACE')
    vg.add([294],1.0, 'REPLACE')
    vg.add([295],1.0, 'REPLACE')
    vg.add([296],1.0, 'REPLACE')
    vg.add([297],1.0, 'REPLACE')
    vg.add([298],1.0, 'REPLACE')
    vg.add([299],1.0, 'REPLACE')
    vg.add([300],1.0, 'REPLACE')
    vg.add([301],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_twist_def_L")
    vg.add([8],1.0, 'REPLACE')
    vg.add([9],1.0, 'REPLACE')
    vg.add([10],1.0, 'REPLACE')
    vg.add([11],1.0, 'REPLACE')
    vg.add([12],1.0, 'REPLACE')
    vg.add([13],1.0, 'REPLACE')
    vg.add([14],1.0, 'REPLACE')
    vg.add([15],1.0, 'REPLACE')
    vg.add([16],1.0, 'REPLACE')
    vg.add([17],1.0, 'REPLACE')
    vg.add([18],1.0, 'REPLACE')
    vg.add([19],1.0, 'REPLACE')
    vg.add([20],1.0, 'REPLACE')
    vg.add([21],1.0, 'REPLACE')
    vg.add([22],1.0, 'REPLACE')
    vg.add([23],1.0, 'REPLACE')
    vg.add([62],1.0, 'REPLACE')
    vg.add([63],1.0, 'REPLACE')
    vg.add([64],1.0, 'REPLACE')
    vg.add([65],1.0, 'REPLACE')
    vg.add([66],1.0, 'REPLACE')
    vg.add([67],1.0, 'REPLACE')
    vg.add([68],1.0, 'REPLACE')
    vg.add([69],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_twist_def_R")
    vg.add([248],1.0, 'REPLACE')
    vg.add([249],1.0, 'REPLACE')
    vg.add([250],1.0, 'REPLACE')
    vg.add([251],1.0, 'REPLACE')
    vg.add([252],1.0, 'REPLACE')
    vg.add([253],1.0, 'REPLACE')
    vg.add([254],1.0, 'REPLACE')
    vg.add([255],1.0, 'REPLACE')
    vg.add([256],1.0, 'REPLACE')
    vg.add([257],1.0, 'REPLACE')
    vg.add([258],1.0, 'REPLACE')
    vg.add([259],1.0, 'REPLACE')
    vg.add([260],1.0, 'REPLACE')
    vg.add([261],1.0, 'REPLACE')
    vg.add([262],1.0, 'REPLACE')
    vg.add([263],1.0, 'REPLACE')
    vg.add([302],1.0, 'REPLACE')
    vg.add([303],1.0, 'REPLACE')
    vg.add([304],1.0, 'REPLACE')
    vg.add([305],1.0, 'REPLACE')
    vg.add([306],1.0, 'REPLACE')
    vg.add([307],1.0, 'REPLACE')
    vg.add([308],1.0, 'REPLACE')
    vg.add([309],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_1_def_L")
    vg.add([42],0.25, 'REPLACE')
    vg.add([43],0.25, 'REPLACE')
    vg.add([44],0.25, 'REPLACE')
    vg.add([45],0.25, 'REPLACE')
    vg.add([46],0.25, 'REPLACE')
    vg.add([47],0.25, 'REPLACE')
    vg.add([48],1.0, 'REPLACE')
    vg.add([49],1.0, 'REPLACE')
    vg.add([50],1.0, 'REPLACE')
    vg.add([51],1.0, 'REPLACE')
    vg.add([52],1.0, 'REPLACE')
    vg.add([53],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_1_def_R")
    vg.add([282],0.25, 'REPLACE')
    vg.add([283],0.25, 'REPLACE')
    vg.add([284],0.25, 'REPLACE')
    vg.add([285],0.25, 'REPLACE')
    vg.add([286],0.25, 'REPLACE')
    vg.add([287],0.25, 'REPLACE')
    vg.add([288],1.0, 'REPLACE')
    vg.add([289],1.0, 'REPLACE')
    vg.add([290],1.0, 'REPLACE')
    vg.add([291],1.0, 'REPLACE')
    vg.add([292],1.0, 'REPLACE')
    vg.add([293],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("knee_fix_L")
    vg = ob.vertex_groups.new("knee_fix_R")
    vg = ob.vertex_groups.new("pelvis_def_L")
    vg = ob.vertex_groups.new("pelvis_def_R")
    vg = ob.vertex_groups.new("buttock_def_L")
    vg = ob.vertex_groups.new("buttock_def_R")
    vg = ob.vertex_groups.new("head_def_1")
    vg = ob.vertex_groups.new("elbow_fix_L")
    vg = ob.vertex_groups.new("elbow_fix_R")
    vg = ob.vertex_groups.new("wrist_fix_low_L")
    vg = ob.vertex_groups.new("wrist_fix_up_L")
    vg = ob.vertex_groups.new("wrist_fix_up_R")
    vg = ob.vertex_groups.new("wrist_fix_low_R")
    vg = ob.vertex_groups.new("chest_fix_R")
    vg = ob.vertex_groups.new("chest_fix_L")
    vg = ob.vertex_groups.new("back_fix_L")
    vg = ob.vertex_groups.new("back_fix_R")
    vg = ob.vertex_groups.new("shin_fix_R")
    vg = ob.vertex_groups.new("shin_fix_L")
    vg = ob.vertex_groups.new("arm_fix_L")
    vg = ob.vertex_groups.new("arm_fix_R")
    vg = ob.vertex_groups.new("thigh_fix_L")
    vg = ob.vertex_groups.new("thigh_fix_R")
    vg = ob.vertex_groups.new("hip_fix_L")
    vg = ob.vertex_groups.new("hip_fix_R")
    vg = ob.vertex_groups.new("toe_fix_L")
    vg = ob.vertex_groups.new("toe_fix_R")
    vg = ob.vertex_groups.new("maxi")
    vg = ob.vertex_groups.new("toe_fix_up_1_L")
    vg = ob.vertex_groups.new("toe_fix_up_1_R")
    vg = ob.vertex_groups.new("lattice_body")
    vg.add([8],0.0002558291598688811, 'REPLACE')
    vg.add([82],0.0032899423968046904, 'REPLACE')
    vg.add([83],0.6945636868476868, 'REPLACE')
    vg.add([84],0.6853390336036682, 'REPLACE')
    vg.add([85],0.04452734440565109, 'REPLACE')
    vg.add([88],0.08830437064170837, 'REPLACE')
    vg.add([90],0.8290111422538757, 'REPLACE')
    vg.add([92],0.03250063583254814, 'REPLACE')
    vg.add([96],0.014152783900499344, 'REPLACE')
    vg.add([98],0.5621654391288757, 'REPLACE')
    vg.add([110],0.7358227372169495, 'REPLACE')
    vg.add([111],0.04452734440565109, 'REPLACE')
    vg.add([112],0.2526257336139679, 'REPLACE')
    vg.add([114],0.5846162438392639, 'REPLACE')
    vg.add([116],0.49383974075317383, 'REPLACE')
    vg.add([117],0.8608279228210449, 'REPLACE')
    vg.add([119],0.03250063583254814, 'REPLACE')
    vg.add([120],0.7345001101493835, 'REPLACE')
    vg.add([124],0.5621654391288757, 'REPLACE')
    vg.add([125],0.125, 'REPLACE')
    vg.add([126],0.25, 'REPLACE')
    vg.add([127],0.125, 'REPLACE')
    vg.add([128],0.25, 'REPLACE')
    vg.add([129],0.125, 'REPLACE')
    vg.add([130],0.050370972603559494, 'REPLACE')
    vg.add([131],0.940525472164154, 'REPLACE')
    vg.add([132],0.018695354461669922, 'REPLACE')
    vg.add([133],0.9461123943328857, 'REPLACE')
    vg.add([134],0.09018402546644211, 'REPLACE')
    vg.add([136],0.0010144509142264724, 'REPLACE')
    vg.add([138],0.08399969339370728, 'REPLACE')
    vg.add([140],0.6945636868476868, 'REPLACE')
    vg.add([141],0.014152783900499344, 'REPLACE')
    vg.add([144],0.3500065505504608, 'REPLACE')
    vg.add([148],0.08399969339370728, 'REPLACE')
    vg.add([159],0.01758205145597458, 'REPLACE')
    vg.add([162],0.0010144509142264724, 'REPLACE')
    vg.add([165],0.015942944213747978, 'REPLACE')
    vg.add([174],0.03148753196001053, 'REPLACE')
    vg.add([176],0.03148753196001053, 'REPLACE')
    vg.add([187],0.49383974075317383, 'REPLACE')
    vg.add([188],0.2526257336139679, 'REPLACE')
    vg.add([192],0.125, 'REPLACE')
    vg.add([193],0.125, 'REPLACE')
    vg.add([194],0.125, 'REPLACE')
    vg.add([195],0.25, 'REPLACE')
    vg.add([196],0.25, 'REPLACE')
    vg.add([197],0.018695354461669922, 'REPLACE')
    vg.add([198],0.050370972603559494, 'REPLACE')
    vg.add([199],0.09018402546644211, 'REPLACE')
    vg.add([200],0.940525472164154, 'REPLACE')
    vg.add([201],0.9461123943328857, 'REPLACE')
    vg.add([210],0.01758205145597458, 'REPLACE')
    vg.add([213],0.0010144509142264724, 'REPLACE')
    vg.add([215],0.01951073855161667, 'REPLACE')
    vg.add([218],0.0032899423968046904, 'REPLACE')
    vg.add([226],0.004543588496744633, 'REPLACE')
    vg.add([227],0.49383974075317383, 'REPLACE')
    vg.add([228],0.2526257336139679, 'REPLACE')
    vg.add([230],0.125, 'REPLACE')
    vg.add([231],0.125, 'REPLACE')
    vg.add([232],1.0, 'REPLACE')
    vg.add([234],0.0007891241693869233, 'REPLACE')
    vg.add([238],0.08731111884117126, 'REPLACE')
    vg.add([248],0.0002558291598688811, 'REPLACE')
    vg.add([310],0.25, 'REPLACE')
    vg.add([311],0.8401229381561279, 'REPLACE')
    vg.add([312],0.007288879714906216, 'REPLACE')
    vg.add([313],0.505375862121582, 'REPLACE')
    vg.add([314],0.2509493827819824, 'REPLACE')
    vg.add([316],0.007968222722411156, 'REPLACE')
    vg.add([330],0.0032899423968046904, 'REPLACE')
    vg.add([331],0.6945636868476868, 'REPLACE')
    vg.add([332],0.6853390336036682, 'REPLACE')
    vg.add([333],0.04452734440565109, 'REPLACE')
    vg.add([336],0.08830437064170837, 'REPLACE')
    vg.add([338],0.8290111422538757, 'REPLACE')
    vg.add([340],0.03250063583254814, 'REPLACE')
    vg.add([344],0.014152783900499344, 'REPLACE')
    vg.add([346],0.5621654391288757, 'REPLACE')
    vg.add([358],0.7358227372169495, 'REPLACE')
    vg.add([359],0.04452734440565109, 'REPLACE')
    vg.add([360],0.2526257336139679, 'REPLACE')
    vg.add([362],0.5846162438392639, 'REPLACE')
    vg.add([364],0.49383974075317383, 'REPLACE')
    vg.add([365],0.8608279228210449, 'REPLACE')
    vg.add([367],0.03250063583254814, 'REPLACE')
    vg.add([368],0.7345001101493835, 'REPLACE')
    vg.add([372],0.5621654391288757, 'REPLACE')
    vg.add([373],0.125, 'REPLACE')
    vg.add([374],0.25, 'REPLACE')
    vg.add([375],0.125, 'REPLACE')
    vg.add([376],0.25, 'REPLACE')
    vg.add([377],0.125, 'REPLACE')
    vg.add([378],0.050370972603559494, 'REPLACE')
    vg.add([379],0.940525472164154, 'REPLACE')
    vg.add([380],0.018695354461669922, 'REPLACE')
    vg.add([381],0.9461123943328857, 'REPLACE')
    vg.add([382],0.09018402546644211, 'REPLACE')
    vg.add([384],0.0010144509142264724, 'REPLACE')
    vg.add([386],0.08399969339370728, 'REPLACE')
    vg.add([388],0.6945636868476868, 'REPLACE')
    vg.add([389],0.014152783900499344, 'REPLACE')
    vg.add([392],0.3500065505504608, 'REPLACE')
    vg.add([396],0.08399969339370728, 'REPLACE')
    vg.add([407],0.01758205145597458, 'REPLACE')
    vg.add([410],0.0010144509142264724, 'REPLACE')
    vg.add([413],0.015942944213747978, 'REPLACE')
    vg.add([420],0.6900291442871094, 'REPLACE')
    vg.add([421],0.9675661325454712, 'REPLACE')
    vg.add([422],0.25, 'REPLACE')
    vg.add([423],0.8401229381561279, 'REPLACE')
    vg.add([424],0.007968222722411156, 'REPLACE')
    vg.add([425],0.125, 'REPLACE')
    vg.add([427],0.125, 'REPLACE')
    vg.add([428],0.125, 'REPLACE')
    vg.add([429],0.6900291442871094, 'REPLACE')
    vg.add([431],0.9452072381973267, 'REPLACE')
    vg.add([432],0.6067253947257996, 'REPLACE')
    vg.add([433],0.505375862121582, 'REPLACE')
    vg.add([434],0.0015726902056485415, 'REPLACE')
    vg.add([438],0.03148753196001053, 'REPLACE')
    vg.add([440],0.03148753196001053, 'REPLACE')
    vg.add([451],0.49383974075317383, 'REPLACE')
    vg.add([452],0.2526257336139679, 'REPLACE')
    vg.add([456],0.125, 'REPLACE')
    vg.add([457],0.125, 'REPLACE')
    vg.add([458],0.125, 'REPLACE')
    vg.add([459],0.25, 'REPLACE')
    vg.add([460],0.25, 'REPLACE')
    vg.add([461],0.018695354461669922, 'REPLACE')
    vg.add([462],0.050370972603559494, 'REPLACE')
    vg.add([463],0.09018402546644211, 'REPLACE')
    vg.add([464],0.940525472164154, 'REPLACE')
    vg.add([465],0.9461123943328857, 'REPLACE')
    vg.add([474],0.01758205145597458, 'REPLACE')
    vg.add([477],0.0010144509142264724, 'REPLACE')
    vg.add([479],0.01951073855161667, 'REPLACE')
    vg.add([482],0.0032899423968046904, 'REPLACE')
    vg.add([490],0.004543588496744633, 'REPLACE')
    vg.add([491],0.49383974075317383, 'REPLACE')
    vg.add([492],0.2526257336139679, 'REPLACE')
    vg.add([494],0.125, 'REPLACE')
    vg.add([495],0.125, 'REPLACE')
    vg.add([496],1.0, 'REPLACE')
    vg.add([498],0.0007891241693869233, 'REPLACE')
    vg.add([502],0.08731111884117126, 'REPLACE')
    vg.add([505],0.03855287283658981, 'REPLACE')
    vg.add([510],0.2509493827819824, 'REPLACE')
    vg = ob.vertex_groups.new("head_def_2")
    vg = ob.vertex_groups.new("head_def_3")
    vg = ob.vertex_groups.new("toe_fix_low_1_R")
    vg = ob.vertex_groups.new("toe_fix_low_1_L")


   
    # Add Aramture modifier        
    mod = ob.modifiers.new('Armature', 'ARMATURE')
    mod.object = bpy.data.objects[self.blenrig_armature_name[0]]
    mod.use_vertex_groups = True
    mod.use_deform_preserve_volume = True
    
    # Add Lattice Modifier       
    mod = ob.modifiers.new('Body_Lattice', 'LATTICE')
    for N in self.blenrig_lattice_names:
        if N.startswith('LATTICE_BODY'):
            mod.object = bpy.data.objects[N]
    mod.vertex_group = 'lattice_body'
    mod.strength = 1.0    
    
    ob.layers = (False, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False)
    