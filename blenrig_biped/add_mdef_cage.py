import bpy

############################ Add Mesh Deform Cage ############################ 

def add_mdef_cage(self, context):
    
    # Define the coordinates of the vertices. Each vertex is defined by a tuple of 3 floats.
    coords = [(0.8984572887420654, 0.7458903789520264, -0.08041897416114807), (1.0632857084274292, -1.4226125478744507, -0.0843268558382988), (0.2377871572971344, -1.4683161973953247, -0.07178473472595215), (0.2626815736293793, 0.738645076751709, -0.05511366203427315), (0.8422204256057739, 0.7609201669692993, 0.7016843557357788), (1.0533854961395264, -1.4785041809082031, 0.3790711760520935), (0.2594144344329834, -1.5253089666366577, 0.3872792422771454), (0.29826241731643677, 0.7031336426734924, 0.705254316329956), (1.0473768711090088, -0.027337126433849335, -0.07807827740907669), (0.28764110803604126, -0.024739930406212807, -0.0816548690199852), (0.9104485511779785, -0.017529144883155823, 0.7476515769958496), (0.31547391414642334, -0.01809501275420189, 0.7210657596588135), (0.40174227952957153, 0.07052420824766159, 1.0193555355072021), (0.8332382440567017, 0.04740416258573532, 1.0283373594284058), (0.37019822001457214, 0.6547314524650574, 1.0451257228851318), (0.8192008137702942, 0.6750699281692505, 1.029215693473816), (1.121442437171936, -0.2888129949569702, -0.07698771357536316), (0.2063671499490738, -0.27944543957710266, -0.07034426927566528), (1.0163109302520752, -0.3449017405509949, 0.6294500231742859), (0.28222161531448364, -0.34638285636901855, 0.6170453429222107), (0.6196134686470032, -1.708626627922058, -0.06552834808826447), (0.5584152936935425, 0.8282861113548279, -0.08716036379337311), (0.6322249174118042, -1.5782420635223389, 0.4283377528190613), (0.5344146490097046, 0.8594180345535278, 0.8795356154441833), (0.6723764538764954, -0.06370007246732712, -0.07802145928144455), (0.6342795491218567, -0.2226807028055191, 0.9169919490814209), (0.6477314829826355, -0.058560922741889954, 1.1035962104797363), (0.5737075805664062, 0.7837808728218079, 1.0716784000396729), (0.687980055809021, -0.3717711865901947, -0.07728979736566544), (0.6246728301048279, -0.3595412075519562, 0.7906639575958252), (0.9590080380439758, 0.49877089262008667, -0.0812486931681633), (0.2603394687175751, 0.48613327741622925, -0.09271784126758575), (1.0135409832000732, 0.40376824140548706, 0.7497903108596802), (0.2522857189178467, 0.4052944481372833, 0.7373272180557251), (0.30732977390289307, 0.3955470025539398, 1.030317783355713), (0.9297555088996887, 0.3878183960914612, 1.0199661254882812), (0.6048054695129395, 0.5481107234954834, -0.07807856053113937), (0.25222763419151306, 0.9267618656158447, 3.8288686275482178), (1.0420175790786743, 0.9685458540916443, 3.896357297897339), (0.9849480390548706, 0.06411775946617126, 3.6710610389709473), (0.26845797896385193, 0.04817935824394226, 3.6130738258361816), (0.646424412727356, 1.326210856437683, 3.978163242340088), (0.6172603964805603, -0.10311105847358704, 3.623668909072876), (1.1853941679000854, 0.4486958384513855, 3.7859127521514893), (0.10851263999938965, 0.34727180004119873, 3.6997196674346924), (0.40930503606796265, 0.80284583568573, 1.6794880628585815), (0.34286391735076904, 0.8940697908401489, 2.714698553085327), (0.7860673666000366, 0.80595463514328, 1.684312105178833), (0.8980213403701782, 0.902135968208313, 2.7376976013183594), (0.7992802858352661, 0.033625707030296326, 1.678788423538208), (0.8885420560836792, 0.06034824997186661, 2.6566214561462402), (0.4494098424911499, 0.04531808942556381, 1.672311782836914), (0.37568360567092896, 0.061993442475795746, 2.6391687393188477), (0.5878920555114746, 0.9282759428024292, 1.6892261505126953), (0.6137893199920654, 1.0970547199249268, 2.754255771636963), (0.6236690282821655, -0.05636756122112274, 1.689298391342163), (0.6261690855026245, -0.062326252460479736, 2.6399035453796387), (0.9460594654083252, 0.38886624574661255, 1.679811954498291), (1.076742172241211, 0.43408340215682983, 2.699106454849243), (0.32007911801338196, 0.4011966586112976, 1.6726828813552856), (0.21360620856285095, 0.42415761947631836, 2.6688404083251953), (0.5245699882507324, 0.9699922800064087, 0.5830388069152832), (1.1134252548217773, -1.4529467821121216, 0.1506778448820114), (0.8624300360679626, 0.7940034866333008, 0.43110278248786926), (0.2273474782705307, -1.495597243309021, 0.14834564924240112), (0.2403324991464615, 0.742511510848999, 0.4474910497665405), (1.1061770915985107, -0.05560867115855217, 0.39379701018333435), (0.23156283795833588, -0.055379364639520645, 0.3776129484176636), (1.2107224464416504, -0.31111082434654236, 0.3354541063308716), (0.12185949832201004, -0.2876344621181488, 0.3237604796886444), (0.6155807971954346, -1.7558789253234863, 0.14154867827892303), (1.0471893548965454, 0.4668884873390198, 0.4515138864517212), (0.23170889914035797, 0.4740258753299713, 0.4330909252166748), (0.49594032764434814, 0.9909724593162537, 0.4217560291290283), (1.1736640930175781, -0.5787355899810791, -0.07665172964334488), (0.1494608223438263, -0.5868251919746399, -0.07603281736373901), (1.1056681871414185, -0.6001470685005188, 0.4762924909591675), (0.2399452179670334, -0.6019623875617981, 0.4769645631313324), (0.6618971824645996, -0.5562316179275513, -0.07687593996524811), (0.6361223459243774, -0.6460148692131042, 0.62008136510849), (1.2697166204452515, -0.5980863571166992, 0.2620112895965576), (0.06761956214904785, -0.5861454010009766, 0.261796236038208), (1.1557278633117676, -0.9356350898742676, -0.07726776599884033), (0.21396823227405548, -0.9245990514755249, -0.07914073020219803), (1.117408037185669, -0.9368128776550293, 0.37751200795173645), (0.22078922390937805, -0.9313089847564697, 0.3832922875881195), (0.6849750280380249, -0.9802561402320862, -0.07594248652458191), (0.6286083459854126, -0.9444662928581238, 0.48710134625434875), (1.25084388256073, -0.9318413734436035, 0.1953815072774887), (0.09630481898784637, -0.9310912489891052, 0.1915966123342514), (0.19872024655342102, 0.830721914768219, 4.802292346954346), (1.1512939929962158, 0.8417297601699829, 4.809398651123047), (0.9516748189926147, -0.03646204620599747, 4.54889440536499), (0.28444617986679077, -0.03625120967626572, 4.5473480224609375), (0.2303183227777481, -0.2811222970485687, 5.430877685546875), (0.965074360370636, -0.27296578884124756, 5.393606662750244), (0.13917340338230133, 0.6892067790031433, 5.880707740783691), (1.0834558010101318, 0.7480443120002747, 5.873791217803955), (1.0933048725128174, 0.648101270198822, 6.450928211212158), (0.10832316428422928, 0.753004789352417, 6.354884624481201), (0.957988440990448, -0.2733985483646393, 6.184450149536133), (0.22681857645511627, -0.27766990661621094, 6.151238441467285), (0.21281571686267853, -0.6684777140617371, 9.162127494812012), (1.012014389038086, -0.6933555006980896, 9.676060676574707), (0.23170122504234314, 0.9485450983047485, 9.178339958190918), (1.1510287523269653, 0.2739167809486389, 9.602437973022461), (0.955720067024231, -0.7285473942756653, 10.065694808959961), (0.9944695234298706, -0.7525235414505005, 11.068317413330078), (0.924155056476593, 0.40499284863471985, 10.85126781463623), (0.8940333127975464, 0.7383626103401184, 10.421979904174805), (0.5384425520896912, 0.992946445941925, 10.14808464050293), (1.0967016220092773, 0.5343947410583496, 9.61396312713623), (0.3347419500350952, 1.0745446681976318, 9.357449531555176), (0.9517490267753601, -0.7864172458648682, 10.74140453338623), (1.0498909950256348, 0.403535395860672, 10.452338218688965), (1.0307544469833374, 0.6842134594917297, 9.92679500579834), (0.48084649443626404, 1.0530881881713867, 9.740225791931152), (0.6955596208572388, 1.0961960554122925, 4.920369625091553), (0.615848958492279, -0.20473450422286987, 4.530243873596191), (0.6063653230667114, -0.4630995988845825, 5.466536998748779), (0.6391152739524841, 0.9737619161605835, 5.940982341766357), (0.6609253287315369, 0.895774781703949, 6.487897872924805), (0.6234673857688904, -0.44118064641952515, 6.17285680770874), (0.6090295910835266, -0.7914024591445923, 9.51806354522705), (0.7867333292961121, 0.8159903883934021, 9.283364295959473), (0.5340636372566223, -0.8371309638023376, 9.888458251953125), (0.450469046831131, -0.9648680090904236, 10.902188301086426), (0.22621583938598633, 0.6875297427177429, 10.899078369140625), (0.7944266200065613, 0.9253031611442566, 10.084203720092773), (0.821107029914856, 0.8667835593223572, 9.427672386169434), (0.44057533144950867, -0.9443618059158325, 10.421565055847168), (0.8259518146514893, 0.8905880451202393, 9.773807525634766), (1.1691606044769287, 0.33321812748908997, 4.718783378601074), (0.10768327116966248, 0.3131383955478668, 4.7355804443359375), (0.0903712585568428, 0.18238478899002075, 5.528898239135742), (1.0688964128494263, 0.15749786794185638, 5.471683025360107), (1.080732822418213, 0.02808344177901745, 6.090404987335205), (0.08787578344345093, 0.17221824824810028, 6.17333459854126), (0.07266715168952942, 0.33010390400886536, 9.145610809326172), (1.1827908754348755, -0.16304714977741241, 9.566374778747559), (1.1917561292648315, -0.24217034876346588, 10.841400146484375), (1.1765398979187012, -0.21869318187236786, 10.260104179382324), (0.6237929463386536, 0.35700103640556335, 11.67902660369873), (0.9472278952598572, 0.0658312439918518, 11.666825294494629), (0.9705086350440979, -0.7297962307929993, 11.477158546447754), (0.25466370582580566, 0.469488263130188, 11.762177467346191), (0.45846232771873474, -0.9855678081512451, 11.419594764709473), (0.25928813219070435, -0.9327618479728699, 9.637733459472656), (0.9688213467597961, -0.48201364278793335, 7.357110023498535), (0.26258134841918945, -0.472702294588089, 7.3348188400268555), (0.2109675258398056, 0.6620416045188904, 7.435830593109131), (0.9700912237167358, 0.5045637488365173, 7.4617600440979), (0.6279041171073914, -0.6781520843505859, 7.327722072601318), (0.6211442947387695, 0.8569006323814392, 7.464919090270996), (0.10458405315876007, 0.23261412978172302, 7.3579840660095215), (1.0999469757080078, -0.04707123711705208, 7.353896141052246), (0.029291769489645958, 0.52479487657547, 9.359075546264648), (1.016736388206482, -0.554662823677063, 8.28470230102539), (0.30253127217292786, -0.5208102464675903, 8.232514381408691), (0.1904752105474472, 0.6588141322135925, 8.159790992736816), (1.0109251737594604, 0.4554802179336548, 8.306856155395508), (0.6654868721961975, -0.7175092697143555, 8.24557876586914), (0.643619179725647, 0.7999247908592224, 8.262152671813965), (0.08707771450281143, 0.1864696741104126, 8.23974609375), (1.1229026317596436, -0.12197252362966537, 8.297846794128418), (0.9702143669128418, -0.2978444993495941, 5.721681118011475), (0.1787150651216507, -0.24189209938049316, 5.7211833000183105), (0.6093837022781372, -0.4924939274787903, 5.722690582275391), (1.1630080938339233, -0.14110979437828064, 9.891329765319824), (1.140831470489502, 0.16481663286685944, 10.067605972290039), (0.10790101438760757, 0.958428144454956, 9.361936569213867), (0.12735524773597717, 0.6640735864639282, 9.11386775970459), (0.17826735973358154, 0.9574686884880066, 9.67943286895752), (0.238698348402977, 0.8550158739089966, 10.15843677520752), (0.09845380485057831, -0.38945910334587097, 9.163954734802246), (0.058192744851112366, -0.5666791200637817, 9.341520309448242), (1.1975032091140747, -0.28802239894866943, 11.183985710144043), (1.1360878944396973, -0.337217777967453, 11.568511009216309), (0.564655065536499, 0.5139331817626953, 11.248504638671875), (0.9428049325942993, 0.2169506847858429, 11.243124961853027), (0.22969645261764526, 0.5348581075668335, 11.249235153198242), (0.5566999316215515, 0.643130362033844, 10.888334274291992), (0.2322464883327484, 0.7878316044807434, 10.559752464294434), (0.5565996766090393, 0.8627795577049255, 10.55954647064209), (0.36856842041015625, -0.8482147455215454, 9.592467308044434), (0.22362251579761505, -0.7784061431884766, 9.393589973449707), (0.049871645867824554, 0.41451725363731384, 9.279237747192383), (0.09832410514354706, 0.8573750257492065, 9.197526931762695), (0.09552065283060074, -0.4801800549030304, 9.300004005432129), (0.10576238483190536, -0.8975486159324646, 9.42720890045166), (1.0363789796829224, -0.6008017063140869, 9.178285598754883), (0.2336224913597107, -0.5928763151168823, 8.887887001037598), (0.19350209832191467, 0.6477866172790527, 8.780192375183105), (1.0841493606567383, 0.4382025897502899, 9.137267112731934), (0.6940075755119324, -0.7617189884185791, 9.05201244354248), (0.7007722854614258, 0.7341249585151672, 8.92979907989502), (1.1420261859893799, -0.17321062088012695, 9.233391761779785), (0.07654862850904465, 0.31407445669174194, 8.766258239746094), (0.0939813107252121, -0.2874537706375122, 8.868157386779785), (0.1395092010498047, -0.11271009594202042, 6.168506145477295), (0.12084798514842987, -0.08200100809335709, 7.344152927398682), (0.11842017620801926, -0.12936006486415863, 8.20547103881836), (0.6180258989334106, -0.4059324860572815, 5.242569446563721), (0.622061014175415, -0.34840816259384155, 5.063237190246582), (0.6176165342330933, -0.2751527428627014, 4.79557466506958), (0.9576353430747986, -0.07136260718107224, 4.782351970672607), (0.9671057462692261, -0.1340416520833969, 5.038864612579346), (0.9641363024711609, -0.18901385366916656, 5.236191749572754), (0.28195062279701233, -0.10861267149448395, 4.8055925369262695), (0.27972111105918884, -0.20345421135425568, 5.057285308837891), (0.2688613533973694, -0.23237688839435577, 5.287297248840332), (1.1031240224838257, 0.2007957249879837, 5.15217924118042), (0.11560767889022827, 0.21022790670394897, 5.008633136749268), (0.06731833517551422, -0.04207342118024826, 9.186600685119629), (0.06068246811628342, -0.03219487518072128, 9.379508018493652), (0.058289460837841034, -0.029997503384947777, 9.304234504699707), (0.07891562581062317, -0.014104276895523071, 8.766819953918457), (0.4396732747554779, -0.9207573533058167, 12.557138442993164), (0.9063494801521301, -0.6999176740646362, 12.557124137878418), (0.8557986617088318, 0.4317542612552643, 12.903937339782715), (0.9944602251052856, 0.011950384825468063, 12.742393493652344), (0.9408093094825745, -0.03333577513694763, 14.871429443359375), (0.5007063150405884, 0.2545141577720642, 15.183194160461426), (0.4824379086494446, -0.47073623538017273, 14.576095581054688), (0.11404959112405777, 0.4539652168750763, 15.26012134552002), (0.27503445744514465, -0.539089560508728, 14.515954971313477), (0.17454096674919128, -0.34797582030296326, 15.044692993164062), (0.2832229733467102, -0.3061266243457794, 15.092314720153809), (0.10261623561382294, 0.2875807285308838, 15.432769775390625), (0.36746981739997864, 0.11386192589998245, 15.357528686523438), (0.4271065294742584, -0.08629471808671951, 15.2648344039917), (0.4496822655200958, -0.03466501086950302, 16.025348663330078), (0.42858514189720154, -0.30240026116371155, 15.917325019836426), (0.24370595812797546, -0.6369854211807251, 15.62138557434082), (0.13393981754779816, 0.12161391228437424, 16.08124542236328), (0.1710335910320282, -0.6975652575492859, 15.603095054626465), (0.2579587697982788, -1.057755470275879, 15.484085083007812), (0.4701453149318695, -0.8888952732086182, 15.530739784240723), (0.1931370198726654, 0.32519054412841797, 16.158720016479492), (0.6815227270126343, 0.020065315067768097, 16.17195701599121), (0.6846262216567993, -0.49475133419036865, 15.935922622680664), (0.9447976350784302, 0.1832561492919922, 16.419479370117188), (0.9613137245178223, -0.6134926676750183, 16.298446655273438), (0.7670189142227173, -1.0735139846801758, 16.131103515625), (0.3486495614051819, 0.7091474533081055, 16.314376831054688), (0.39944547414779663, -1.4606974124908447, 16.11054229736328), (0.6356256008148193, -0.9153937697410583, 15.675597190856934), (0.336328387260437, -1.32303786277771, 15.619028091430664), (0.5657735466957092, -1.1184155941009521, 17.50620460510254), (0.9277827739715576, -0.9189110994338989, 17.29384994506836), (0.3712989091873169, 1.2361407279968262, 16.921483993530273), (1.1201728582382202, 0.3322630524635315, 17.54750633239746), (1.1075636148452759, -0.6245975494384766, 17.477645874023438), (0.6790239810943604, -0.7967539429664612, 17.967506408691406), (0.5319654941558838, -0.590407133102417, 14.34709358215332), (0.289390504360199, -0.6621598601341248, 14.27894115447998), (0.9723356366157532, 0.11490374058485031, 13.282588005065918), (0.9339085817337036, 0.5054519176483154, 13.5117826461792), (0.6811972856521606, 0.5058896541595459, 14.954843521118164), (0.9787382483482361, 0.16184061765670776, 13.494342803955078), (2.4653031826019287, 0.38922184705734253, 12.828191757202148), (2.5478837490081787, 0.4839763939380646, 12.982061386108398), (2.706221580505371, 0.4240277111530304, 13.224088668823242), (2.906822681427002, 0.2786986827850342, 13.274084091186523), (2.7223947048187256, -0.1894022822380066, 13.005772590637207), (2.8632009029388428, 0.0010025491937994957, 13.268871307373047), (5.158015251159668, -0.6486318707466125, 11.490886688232422), (5.248158931732178, -0.4794159233570099, 11.695465087890625), (5.285372734069824, -0.14338839054107666, 11.776568412780762), (5.042935848236084, -0.08797132223844528, 11.21951961517334), (4.995975494384766, -0.5206276774406433, 11.19546127319336), (5.257289886474609, 0.1941213458776474, 11.710269927978516), (5.201756954193115, 0.35481372475624084, 11.586729049682617), (5.105437755584717, 0.26491042971611023, 11.39457893371582), (2.936098337173462, -0.19397538900375366, 12.902959823608398), (3.1099467277526855, -0.04816020280122757, 13.156694412231445), (3.1064560413360596, 0.30095142126083374, 13.214838981628418), (2.6947240829467773, 0.19321748614311218, 12.511778831481934), (2.7903048992156982, -0.13942909240722656, 12.627965927124023), (3.1642372608184814, -0.2851003110408783, 12.793633460998535), (3.358652114868164, -0.13055841624736786, 13.040902137756348), (3.380357027053833, 0.20425951480865479, 13.071196556091309), (2.945910692214966, 0.12215087562799454, 12.330887794494629), (3.0119264125823975, -0.18859590590000153, 12.442596435546875), (3.3317039012908936, 0.4372785687446594, 12.940577507019043), (3.140928030014038, 0.5296223163604736, 12.645764350891113), (3.0289597511291504, 0.39338135719299316, 12.394922256469727), (4.890692234039307, -0.35275858640670776, 11.728964805603027), (4.958746910095215, -0.31094253063201904, 11.8673734664917), (4.975064277648926, -0.12981078028678894, 11.916369438171387), (4.820258140563965, -0.07645820826292038, 11.552749633789062), (4.834718227386475, -0.2413516342639923, 11.610623359680176), (4.95993185043335, 0.05308273434638977, 11.86707878112793), (4.91379976272583, 0.14446093142032623, 11.712846755981445), (4.843445777893066, 0.09297410398721695, 11.607772827148438), (5.397615432739258, -0.06179571896791458, 10.671730041503906), (5.591703414916992, 0.3799888491630554, 10.962267875671387), (5.797943115234375, 0.5257482528686523, 11.221793174743652), (5.894519329071045, 0.3368992209434509, 11.399105072021484), (5.920684337615967, -0.14774666726589203, 11.390658378601074), (5.613159656524658, -1.0549447536468506, 11.173517227172852), (5.3107709884643555, -0.8781265616416931, 10.895172119140625), (5.846233367919922, -0.7494393587112427, 11.365680694580078), (6.596066474914551, -0.24740223586559296, 10.56077766418457), (6.350921630859375, -0.8063284158706665, 10.969337463378906), (6.057215213775635, -0.861004650592804, 10.527195930480957), (6.293850421905518, -0.9374912977218628, 10.715707778930664), (6.541781902313232, -0.2365044206380844, 10.94128704071045), (6.450286388397217, 0.35614243149757385, 11.061773300170898), (6.424384117126465, 0.459476113319397, 10.827165603637695), (6.180690288543701, 0.3953370451927185, 10.627986907958984), (6.2013840675354, -0.1855391263961792, 10.36497688293457), (1.0772595405578613, 0.40478992462158203, 13.485767364501953), (1.0305824279785156, 0.19947144389152527, 13.546683311462402), (1.2580369710922241, 0.5656591057777405, 14.414132118225098), (1.3206313848495483, 0.299591988325119, 14.483424186706543), (1.4107469320297241, -0.0018225052626803517, 14.528647422790527), (5.011077404022217, -0.3577766418457031, 11.65269660949707), (5.0973429679870605, -0.3197886645793915, 11.78765869140625), (5.128787040710449, -0.14044813811779022, 11.828718185424805), (4.969877243041992, -0.08072993159294128, 11.462348937988281), (4.959582805633545, -0.2663783133029938, 11.491628646850586), (5.096351146697998, 0.02251817286014557, 11.773306846618652), (5.052450180053711, 0.13059504330158234, 11.649679183959961), (5.02183198928833, 0.0743306428194046, 11.507643699645996), (4.226472854614258, -0.3551219701766968, 12.151605606079102), (4.352092742919922, -0.2349507212638855, 12.350833892822266), (4.397286891937256, 0.0022835531271994114, 12.407455444335938), (4.036733627319336, 0.012650048360228539, 11.810834884643555), (4.090387344360352, -0.26212596893310547, 11.917484283447266), (4.348690986633301, 0.2252092808485031, 12.304298400878906), (4.222118377685547, 0.3171085715293884, 12.08706283569336), (4.0988264083862305, 0.24913820624351501, 11.89181900024414), (2.259258270263672, 0.4947018325328827, 13.193631172180176), (2.3958323001861572, 0.4368468225002289, 13.462759971618652), (2.4923689365386963, 0.2609490752220154, 13.59565258026123), (2.341618299484253, -0.2561347782611847, 13.302051544189453), (2.4616212844848633, -0.025984402745962143, 13.539388656616211), (0.44808804988861084, -0.9354646801948547, 12.077019691467285), (0.9657347798347473, -0.685964822769165, 12.032180786132812), (0.2909128963947296, 0.554237961769104, 12.421096801757812), (0.6798456907272339, 0.3388747274875641, 12.285646438598633), (0.9927066564559937, 0.004856261424720287, 12.194790840148926), (1.3717716932296753, 0.7038586735725403, 13.97646427154541), (1.5190774202346802, 0.501897931098938, 14.190286636352539), (1.5867363214492798, 0.2542317509651184, 14.252266883850098), (1.611885905265808, -0.010475161485373974, 14.238636016845703), (1.4092705249786377, -0.2530904710292816, 14.141834259033203), (0.8645728230476379, 0.5283294320106506, 13.312088012695312), (1.8484644889831543, 0.538292646408081, 13.512287139892578), (1.9639207124710083, 0.45008596777915955, 13.717595100402832), (2.083935022354126, 0.28886306285858154, 13.83698844909668), (2.063086986541748, -0.03573327884078026, 13.813514709472656), (1.9711445569992065, -0.2133551985025406, 13.642005920410156), (1.2901946306228638, -0.2737206220626831, 14.513601303100586), (0.8795197606086731, -0.20208482444286346, 14.775751113891602), (0.86439049243927, 0.24417753517627716, 14.901994705200195), (0.286800354719162, -0.5638229846954346, 15.682879447937012), (0.39662298560142517, -0.18198488652706146, 15.197046279907227), (0.35531821846961975, -0.4582021236419678, 15.799570083618164), (0.6115871071815491, -0.6586011648178101, 15.716535568237305), (0.32028716802597046, -0.004011228680610657, 15.56297779083252), (0.3547547161579132, -0.15299668908119202, 15.498697280883789), (0.2046399712562561, -0.3621097207069397, 15.416220664978027), (0.08451627939939499, 0.1141459196805954, 15.60643482208252), (0.1057274267077446, -0.40408360958099365, 15.394344329833984), (0.343982994556427, -0.24934671819210052, 15.465768814086914), (0.23259063065052032, -0.39731502532958984, 14.786567687988281), (0.34911465644836426, -0.3351726233959198, 14.85285758972168), (0.5428749322891235, -0.02404184825718403, 15.09388256072998), (0.4277649223804474, -0.270429790019989, 14.950506210327148), (0.4899881184101105, -0.1710248738527298, 15.044987678527832), (0.40054845809936523, 0.012220221571624279, 15.319110870361328), (0.4586136043071747, -0.15787790715694427, 15.996841430664062), (0.707443356513977, -0.1874169409275055, 16.119081497192383), (1.0053132772445679, -0.18088899552822113, 16.408369064331055), (1.1965909004211426, -0.19458997249603271, 17.56029510498047), (0.742486834526062, -0.36529040336608887, 18.167312622070312), (0.3408208191394806, -0.08139698952436447, 15.528718948364258), (0.541034460067749, 0.12349208444356918, 15.140289306640625), (0.2578718960285187, 0.4275961220264435, 15.226625442504883), (0.2000228613615036, 0.2552396357059479, 15.424308776855469), (0.2655360698699951, 0.10357454419136047, 16.059492111206055), (0.43329161405563354, 0.2762600779533386, 16.161651611328125), (0.6109544038772583, 0.6516895890235901, 16.34543800354004), (0.5623745918273926, 1.188751220703125, 17.169870376586914), (0.1662689596414566, 0.09837841242551804, 15.605182647705078), (0.1218341737985611, 0.8291347622871399, 14.728541374206543), (0.31802037358283997, 0.8301141262054443, 14.75003719329834), (0.3906095027923584, 0.3566007912158966, 15.201010704040527), (0.28768160939216614, 0.2008710354566574, 15.40165901184082), (0.3795124590396881, 0.05750652402639389, 16.040029525756836), (0.8207757472991943, 0.49353253841400146, 16.386524200439453), (1.126894235610962, 0.633834958076477, 13.657427787780762), (1.7411929368972778, 0.4017193019390106, 13.253148078918457), (0.8792043924331665, 0.8110883235931396, 13.629697799682617), (0.6008158922195435, 0.17982515692710876, 16.17765998840332), (0.24025209248065948, 0.06590472906827927, 15.599510192871094), (1.5139365196228027, 0.653984546661377, 13.84410572052002), (1.648924469947815, 0.4982713758945465, 14.032135009765625), (1.7358553409576416, 0.2506672143936157, 14.093038558959961), (1.707649827003479, -0.018472040072083473, 14.08597469329834), (1.5692076683044434, -0.20229580998420715, 13.971651077270508), (1.3607186079025269, 0.5936585068702698, 13.579094886779785), (0.6761103868484497, 0.8478508591651917, 13.49465274810791), (1.0313149690628052, -0.14894600212574005, 13.497791290283203), (2.113415002822876, 0.13299860060214996, 12.953632354736328), (0.9690232872962952, -0.31044143438339233, 13.468631744384766), (0.9903707504272461, -0.3815692067146301, 13.099679946899414), (1.6733124256134033, 0.08540090173482895, 13.164994239807129), (1.2105106115341187, 0.1323091983795166, 13.45854377746582), (0.7437742352485657, -0.513494074344635, 14.403244972229004), (0.7252203822135925, -0.39456257224082947, 14.645770072937012), (0.8551356196403503, -0.5511189699172974, 14.192634582519531), (0.3609538674354553, -0.2555927336215973, 15.141060829162598), (0.5667081475257874, -0.7824651598930359, 15.600651741027832), (0.29198142886161804, -0.3177454471588135, 15.432809829711914), (0.830660343170166, -0.6969379782676697, 13.015957832336426), (0.38780826330184937, -0.9242182970046997, 13.048789978027344), (1.0682402849197388, -0.3576217293739319, 12.641491889953613), (1.1047337055206299, -0.33916765451431274, 12.156087875366211), (0.24932123720645905, 0.7618212103843689, 13.287187576293945), (2.1718671321868896, 0.38177230954170227, 13.007185935974121), (0.7959610819816589, 0.8862624168395996, 17.515644073486328), (0.6074764728546143, 0.6078449487686157, 18.09925079345703), (0.7181203365325928, 0.15427908301353455, 18.189437866210938), (3.749260425567627, -0.3570745289325714, 12.453490257263184), (3.915811061859131, -0.20278994739055634, 12.689635276794434), (3.9320895671844482, 0.11378736793994904, 12.721334457397461), (3.5308077335357666, 0.07632778584957123, 12.047109603881836), (3.5773770809173584, -0.2338077425956726, 12.151423454284668), (3.871178388595581, 0.32787349820137024, 12.605965614318848), (3.699220657348633, 0.4291984438896179, 12.329010963439941), (3.577505111694336, 0.33301109075546265, 12.12407112121582), (1.1592670679092407, -0.2088402807712555, 14.655352592468262), (1.1772589683532715, 0.2848394215106964, 14.688204765319824), (2.2161333560943604, -0.1597234308719635, 13.067916870117188), (1.7750977277755737, -0.16483058035373688, 13.34193229675293), (1.3537827730178833, -0.22886502742767334, 13.612395286560059), (0.8461902141571045, -0.754523515701294, 13.44027042388916), (0.3432149589061737, -0.9431493282318115, 13.40294075012207), (1.0102461576461792, -0.5176522731781006, 13.82675838470459), (1.4241583347320557, 0.566460132598877, 14.235838890075684), (1.4522836208343506, 0.27139782905578613, 14.362427711486816), (1.5492030382156372, -0.03619193658232689, 14.34141731262207), (1.3496187925338745, -0.2965368926525116, 14.329023361206055), (0.15954354405403137, 0.9138933420181274, 14.054720878601074), (0.35276198387145996, 0.9027597904205322, 14.148242950439453), (1.2370821237564087, 0.766792893409729, 14.093278884887695), (1.028188705444336, -0.3949528932571411, 14.521974563598633), (1.0719510316848755, -0.46469128131866455, 14.255582809448242), (1.197266936302185, -0.4500153362751007, 13.900432586669922), (0.9914703369140625, -0.2895444929599762, 14.655097961425781), (1.0420007705688477, 0.5970153212547302, 14.669929504394531), (1.1781985759735107, -0.020595770329236984, 14.754018783569336), (2.565664291381836, 0.1925596296787262, 12.683884620666504), (2.574876308441162, -0.1306265890598297, 12.81220817565918), (0.642329752445221, -0.6859064698219299, 14.06837272644043), (0.3204173445701599, -0.7746500372886658, 13.974020004272461), (0.9457179307937622, 0.7913327813148499, 13.997197151184082), (0.597255289554596, 0.8325592279434204, 14.215682983398438), (1.0448342561721802, 0.7419307231903076, 14.310867309570312), (0.8096022605895996, 0.7544323801994324, 14.550248146057129), (0.4936072826385498, 0.7458934783935547, 14.81762409210205), (4.539930820465088, 0.16551917791366577, 11.705904006958008), (4.640643119812012, 0.2200639843940735, 11.872285842895508), (4.728328704833984, 0.12924900650978088, 12.051212310791016), (4.530487537384033, -0.2654944062232971, 11.710966110229492), (4.48736572265625, -0.03890296071767807, 11.629173278808594), (4.756687164306641, -0.07189977169036865, 12.12420654296875), (4.718038082122803, -0.26126691699028015, 12.059654235839844), (4.629251956939697, -0.34793275594711304, 11.892585754394531), (0.2842862606048584, -0.06232484430074692, 15.859030723571777), (0.2997343838214874, -0.24951283633708954, 15.810236930847168), (0.17423836886882782, -0.4905298352241516, 15.680377006530762), (0.08501492440700531, 0.041953761130571365, 15.911444664001465), (0.09712786227464676, -0.5200812220573425, 15.647107124328613), (0.2649938464164734, -0.3558122515678406, 15.752887725830078), (0.3016482889652252, -0.15048635005950928, 15.837128639221191), (0.16785985231399536, 0.030728444457054138, 15.898998260498047), (0.22813621163368225, -0.44234180450439453, 15.709916114807129), (0.24286715686321259, 0.005272773094475269, 15.887871742248535), (2.6257498264312744, 0.4968477487564087, 12.935184478759766), (2.717040538787842, 0.5340468883514404, 12.860304832458496), (2.8321313858032227, 0.5449493527412415, 12.786784172058105), (2.968703508377075, 0.529527485370636, 12.729615211486816), (3.1650829315185547, 0.47335606813430786, 13.034706115722656), (3.039288282394409, 0.4996902048587799, 13.103363990783691), (2.8988966941833496, 0.48117339611053467, 13.152161598205566), (2.7867608070373535, 0.4446575343608856, 13.183818817138672), (2.8273138999938965, 0.40151333808898926, 12.517618179321289), (2.716787576675415, 0.41541242599487305, 12.586050033569336), (2.6025986671447754, 0.40660232305526733, 12.68748950958252), (2.5207228660583496, 0.39371049404144287, 12.773021697998047), (0.4767369329929352, -1.3436816930770874, 16.81233787536621), (0.8699838519096375, -1.0153448581695557, 16.75322723388672), (0.378902792930603, 1.0247708559036255, 16.601497650146484), (1.1409879922866821, 0.30737003684043884, 16.904186248779297), (1.130751132965088, -0.614080011844635, 16.84908103942871), (1.2148685455322266, -0.16406993567943573, 16.915321350097656), (0.6719319820404053, 0.9446744918823242, 16.716480255126953), (0.9381240010261536, 0.722192108631134, 16.853891372680664), (-0.8984572887420654, 0.7458903789520264, -0.08041897416114807), (-1.0632857084274292, -1.4226125478744507, -0.0843268558382988), (-0.2377871572971344, -1.4683161973953247, -0.07178473472595215), (-0.2626815736293793, 0.738645076751709, -0.05511366203427315), (-0.8422204256057739, 0.7609201669692993, 0.7016843557357788), (-1.0533854961395264, -1.4785041809082031, 0.3790711760520935), (-0.2594144344329834, -1.5253089666366577, 0.3872792422771454), (-0.29826241731643677, 0.7031336426734924, 0.705254316329956), (-1.0473768711090088, -0.027337126433849335, -0.07807827740907669), (-0.28764110803604126, -0.024739930406212807, -0.0816548690199852), (-0.9104485511779785, -0.017529144883155823, 0.7476515769958496), (-0.31547391414642334, -0.01809501275420189, 0.7210657596588135), (-0.40174227952957153, 0.07052420824766159, 1.0193555355072021), (-0.8332382440567017, 0.04740416258573532, 1.0283373594284058), (-0.37019822001457214, 0.6547314524650574, 1.0451257228851318), (-0.8192008137702942, 0.6750699281692505, 1.029215693473816), (-1.121442437171936, -0.2888129949569702, -0.07698771357536316), (-0.2063671499490738, -0.27944543957710266, -0.07034426927566528), (-1.0163109302520752, -0.3449017405509949, 0.6294500231742859), (-0.28222161531448364, -0.34638285636901855, 0.6170453429222107), (-0.6196134686470032, -1.708626627922058, -0.06552834808826447), (-0.5584152936935425, 0.8282861113548279, -0.08716036379337311), (-0.6322249174118042, -1.5782420635223389, 0.4283377528190613), (-0.5344146490097046, 0.8594180345535278, 0.8795356154441833), (-0.6723764538764954, -0.06370007246732712, -0.07802145928144455), (-0.6342795491218567, -0.2226807028055191, 0.9169919490814209), (-0.6477314829826355, -0.058560922741889954, 1.1035962104797363), (-0.5737075805664062, 0.7837808728218079, 1.0716784000396729), (-0.687980055809021, -0.3717711865901947, -0.07728979736566544), (-0.6246728301048279, -0.3595412075519562, 0.7906639575958252), (-0.9590080380439758, 0.49877089262008667, -0.0812486931681633), (-0.2603394687175751, 0.48613327741622925, -0.09271784126758575), (-1.0135409832000732, 0.40376824140548706, 0.7497903108596802), (-0.2522857189178467, 0.4052944481372833, 0.7373272180557251), (-0.30732977390289307, 0.3955470025539398, 1.030317783355713), (-0.9297555088996887, 0.3878183960914612, 1.0199661254882812), (-0.6048054695129395, 0.5481107234954834, -0.07807856053113937), (-0.25222763419151306, 0.9267618656158447, 3.8288686275482178), (-1.0420175790786743, 0.9685458540916443, 3.896357297897339), (-0.9849480390548706, 0.06411775946617126, 3.6710610389709473), (-0.26845797896385193, 0.04817935824394226, 3.6130738258361816), (-0.646424412727356, 1.326210856437683, 3.978163242340088), (-0.6172603964805603, -0.10311105847358704, 3.623668909072876), (-1.1853941679000854, 0.4486958384513855, 3.7859127521514893), (-0.10851263999938965, 0.34727180004119873, 3.6997196674346924), (-0.40930503606796265, 0.80284583568573, 1.6794880628585815), (-0.34286391735076904, 0.8940697908401489, 2.714698553085327), (-0.7860673666000366, 0.80595463514328, 1.684312105178833), (-0.8980213403701782, 0.902135968208313, 2.7376976013183594), (-0.7992802858352661, 0.033625707030296326, 1.678788423538208), (-0.8885420560836792, 0.06034824997186661, 2.6566214561462402), (-0.4494098424911499, 0.04531808942556381, 1.672311782836914), (-0.37568360567092896, 0.061993442475795746, 2.6391687393188477), (-0.5878920555114746, 0.9282759428024292, 1.6892261505126953), (-0.6137893199920654, 1.0970547199249268, 2.754255771636963), (-0.6236690282821655, -0.05636756122112274, 1.689298391342163), (-0.6261690855026245, -0.062326252460479736, 2.6399035453796387), (-0.9460594654083252, 0.38886624574661255, 1.679811954498291), (-1.076742172241211, 0.43408340215682983, 2.699106454849243), (-0.32007911801338196, 0.4011966586112976, 1.6726828813552856), (-0.21360620856285095, 0.42415761947631836, 2.6688404083251953), (-0.5245699882507324, 0.9699922800064087, 0.5830388069152832), (-1.1134252548217773, -1.4529467821121216, 0.1506778448820114), (-0.8624300360679626, 0.7940034866333008, 0.43110278248786926), (-0.2273474782705307, -1.495597243309021, 0.14834564924240112), (-0.2403324991464615, 0.742511510848999, 0.4474910497665405), (-1.1061770915985107, -0.05560867115855217, 0.39379701018333435), (-0.23156283795833588, -0.055379364639520645, 0.3776129484176636), (-1.2107224464416504, -0.31111082434654236, 0.3354541063308716), (-0.12185949832201004, -0.2876344621181488, 0.3237604796886444), (-0.6155807971954346, -1.7558789253234863, 0.14154867827892303), (-1.0471893548965454, 0.4668884873390198, 0.4515138864517212), (-0.23170889914035797, 0.4740258753299713, 0.4330909252166748), (-0.49594032764434814, 0.9909724593162537, 0.4217560291290283), (-1.1736640930175781, -0.5787355899810791, -0.07665172964334488), (-0.1494608223438263, -0.5868251919746399, -0.07603281736373901), (-1.1056681871414185, -0.6001470685005188, 0.4762924909591675), (-0.2399452179670334, -0.6019623875617981, 0.4769645631313324), (-0.6618971824645996, -0.5562316179275513, -0.07687593996524811), (-0.6361223459243774, -0.6460148692131042, 0.62008136510849), (-1.2697166204452515, -0.5980863571166992, 0.2620112895965576), (-0.06761956214904785, -0.5861454010009766, 0.261796236038208), (-1.1557278633117676, -0.9356350898742676, -0.07726776599884033), (-0.21396823227405548, -0.9245990514755249, -0.07914073020219803), (-1.117408037185669, -0.9368128776550293, 0.37751200795173645), (-0.22078922390937805, -0.9313089847564697, 0.3832922875881195), (-0.6849750280380249, -0.9802561402320862, -0.07594248652458191), (-0.6286083459854126, -0.9444662928581238, 0.48710134625434875), (-1.25084388256073, -0.9318413734436035, 0.1953815072774887), (-0.09630481898784637, -0.9310912489891052, 0.1915966123342514), (-0.19872024655342102, 0.830721914768219, 4.802292346954346), (-1.1512939929962158, 0.8417297601699829, 4.809398651123047), (-0.9516748189926147, -0.03646204620599747, 4.54889440536499), (-0.28444617986679077, -0.03625120967626572, 4.5473480224609375), (-0.2303183227777481, -0.2811222970485687, 5.430877685546875), (-0.965074360370636, -0.27296578884124756, 5.393606662750244), (-0.13917340338230133, 0.6892067790031433, 5.880707740783691), (-1.0834558010101318, 0.7480443120002747, 5.873791217803955), (-1.0933048725128174, 0.648101270198822, 6.450928211212158), (-0.10832316428422928, 0.753004789352417, 6.354884624481201), (-0.957988440990448, -0.2733985483646393, 6.184450149536133), (-0.22681857645511627, -0.27766990661621094, 6.151238441467285), (-0.21281571686267853, -0.6684777140617371, 9.162127494812012), (-1.012014389038086, -0.6933555006980896, 9.676060676574707), (-0.23170122504234314, 0.9485450983047485, 9.178339958190918), (-1.1510287523269653, 0.2739167809486389, 9.602437973022461), (-0.955720067024231, -0.7285473942756653, 10.065694808959961), (-0.9944695234298706, -0.7525235414505005, 11.068317413330078), (-0.924155056476593, 0.40499284863471985, 10.85126781463623), (-0.8940333127975464, 0.7383626103401184, 10.421979904174805), (-0.5384425520896912, 0.992946445941925, 10.14808464050293), (-1.0967016220092773, 0.5343947410583496, 9.61396312713623), (-0.3347419500350952, 1.0745446681976318, 9.357449531555176), (-0.9517490267753601, -0.7864172458648682, 10.74140453338623), (-1.0498909950256348, 0.403535395860672, 10.452338218688965), (-1.0307544469833374, 0.6842134594917297, 9.92679500579834), (-0.48084649443626404, 1.0530881881713867, 9.740225791931152), (-0.6955596208572388, 1.0961960554122925, 4.920369625091553), (-0.615848958492279, -0.20473450422286987, 4.530243873596191), (-0.6063653230667114, -0.4630995988845825, 5.466536998748779), (-0.6391152739524841, 0.9737619161605835, 5.940982341766357), (-0.6609253287315369, 0.895774781703949, 6.487897872924805), (-0.6234673857688904, -0.44118064641952515, 6.17285680770874), (-0.6090295910835266, -0.7914024591445923, 9.51806354522705), (-0.7867333292961121, 0.8159903883934021, 9.283364295959473), (-0.5340636372566223, -0.8371309638023376, 9.888458251953125), (-0.450469046831131, -0.9648680090904236, 10.902188301086426), (-0.22621583938598633, 0.6875297427177429, 10.899078369140625), (-0.7944266200065613, 0.9253031611442566, 10.084203720092773), (-0.821107029914856, 0.8667835593223572, 9.427672386169434), (-0.44057533144950867, -0.9443618059158325, 10.421565055847168), (-0.8259518146514893, 0.8905880451202393, 9.773807525634766), (-1.1691606044769287, 0.33321812748908997, 4.718783378601074), (-0.10768327116966248, 0.3131383955478668, 4.7355804443359375), (-0.0903712585568428, 0.18238478899002075, 5.528898239135742), (-1.0688964128494263, 0.15749786794185638, 5.471683025360107), (-1.080732822418213, 0.02808344177901745, 6.090404987335205), (-0.08787578344345093, 0.17221824824810028, 6.17333459854126), (-0.07266715168952942, 0.33010390400886536, 9.145610809326172), (-1.1827908754348755, -0.16304714977741241, 9.566374778747559), (-1.1917561292648315, -0.24217034876346588, 10.841400146484375), (-1.1765398979187012, -0.21869318187236786, 10.260104179382324), (-0.6237929463386536, 0.35700103640556335, 11.67902660369873), (-0.9472278952598572, 0.0658312439918518, 11.666825294494629), (-0.9705086350440979, -0.7297962307929993, 11.477158546447754), (-0.25466370582580566, 0.469488263130188, 11.762177467346191), (-0.45846232771873474, -0.9855678081512451, 11.419594764709473), (-0.25928813219070435, -0.9327618479728699, 9.637733459472656), (-0.9688213467597961, -0.48201364278793335, 7.357110023498535), (-0.26258134841918945, -0.472702294588089, 7.3348188400268555), (-0.2109675258398056, 0.6620416045188904, 7.435830593109131), (-0.9700912237167358, 0.5045637488365173, 7.4617600440979), (-0.6279041171073914, -0.6781520843505859, 7.327722072601318), (-0.6211442947387695, 0.8569006323814392, 7.464919090270996), (-0.10458405315876007, 0.23261412978172302, 7.3579840660095215), (-1.0999469757080078, -0.04707123711705208, 7.353896141052246), (-0.029291769489645958, 0.52479487657547, 9.359075546264648), (-1.016736388206482, -0.554662823677063, 8.28470230102539), (-0.30253127217292786, -0.5208102464675903, 8.232514381408691), (-0.1904752105474472, 0.6588141322135925, 8.159790992736816), (-1.0109251737594604, 0.4554802179336548, 8.306856155395508), (-0.6654868721961975, -0.7175092697143555, 8.24557876586914), (-0.643619179725647, 0.7999247908592224, 8.262152671813965), (-0.08707771450281143, 0.1864696741104126, 8.23974609375), (-1.1229026317596436, -0.12197252362966537, 8.297846794128418), (-0.9702143669128418, -0.2978444993495941, 5.721681118011475), (-0.1787150651216507, -0.24189209938049316, 5.7211833000183105), (-0.6093837022781372, -0.4924939274787903, 5.722690582275391), (-1.1630080938339233, -0.14110979437828064, 9.891329765319824), (-1.140831470489502, 0.16481663286685944, 10.067605972290039), (-0.10790101438760757, 0.958428144454956, 9.361936569213867), (-0.12735524773597717, 0.6640735864639282, 9.11386775970459), (-0.17826735973358154, 0.9574686884880066, 9.67943286895752), (-0.238698348402977, 0.8550158739089966, 10.15843677520752), (-0.09845380485057831, -0.38945910334587097, 9.163954734802246), (-0.058192744851112366, -0.5666791200637817, 9.341520309448242), (-1.1975032091140747, -0.28802239894866943, 11.183985710144043), (-1.1360878944396973, -0.337217777967453, 11.568511009216309), (-0.564655065536499, 0.5139331817626953, 11.248504638671875), (-0.9428049325942993, 0.2169506847858429, 11.243124961853027), (-0.22969645261764526, 0.5348581075668335, 11.249235153198242), (-0.5566999316215515, 0.643130362033844, 10.888334274291992), (-0.2322464883327484, 0.7878316044807434, 10.559752464294434), (-0.5565996766090393, 0.8627795577049255, 10.55954647064209), (-0.36856842041015625, -0.8482147455215454, 9.592467308044434), (-0.22362251579761505, -0.7784061431884766, 9.393589973449707), (-0.049871645867824554, 0.41451725363731384, 9.279237747192383), (-0.09832410514354706, 0.8573750257492065, 9.197526931762695), (-0.09552065283060074, -0.4801800549030304, 9.300004005432129), (-0.10576238483190536, -0.8975486159324646, 9.42720890045166), (-1.0363789796829224, -0.6008017063140869, 9.178285598754883), (-0.2336224913597107, -0.5928763151168823, 8.887887001037598), (-0.19350209832191467, 0.6477866172790527, 8.780192375183105), (-1.0841493606567383, 0.4382025897502899, 9.137267112731934), (-0.6940075755119324, -0.7617189884185791, 9.05201244354248), (-0.7007722854614258, 0.7341249585151672, 8.92979907989502), (-1.1420261859893799, -0.17321062088012695, 9.233391761779785), (-0.07654862850904465, 0.31407445669174194, 8.766258239746094), (-0.0939813107252121, -0.2874537706375122, 8.868157386779785), (-0.1395092010498047, -0.11271009594202042, 6.168506145477295), (-0.12084798514842987, -0.08200100809335709, 7.344152927398682), (-0.11842017620801926, -0.12936006486415863, 8.20547103881836), (-0.6180258989334106, -0.4059324860572815, 5.242569446563721), (-0.622061014175415, -0.34840816259384155, 5.063237190246582), (-0.6176165342330933, -0.2751527428627014, 4.79557466506958), (-0.9576353430747986, -0.07136260718107224, 4.782351970672607), (-0.9671057462692261, -0.1340416520833969, 5.038864612579346), (-0.9641363024711609, -0.18901385366916656, 5.236191749572754), (-0.28195062279701233, -0.10861267149448395, 4.8055925369262695), (-0.27972111105918884, -0.20345421135425568, 5.057285308837891), (-0.2688613533973694, -0.23237688839435577, 5.287297248840332), (-1.1031240224838257, 0.2007957249879837, 5.15217924118042), (-0.11560767889022827, 0.21022790670394897, 5.008633136749268), (-0.06731833517551422, -0.04207342118024826, 9.186600685119629), (-0.06068246811628342, -0.03219487518072128, 9.379508018493652), (-0.058289460837841034, -0.029997503384947777, 9.304234504699707), (-0.07891562581062317, -0.014104276895523071, 8.766819953918457), (-0.4396732747554779, -0.9207573533058167, 12.557138442993164), (-0.9063494801521301, -0.6999176740646362, 12.557124137878418), (-0.8557986617088318, 0.4317542612552643, 12.903937339782715), (-0.9944602251052856, 0.011950384825468063, 12.742393493652344), (-0.9408093094825745, -0.03333577513694763, 14.871429443359375), (-0.5007063150405884, 0.2545141577720642, 15.183194160461426), (-0.4824379086494446, -0.47073623538017273, 14.576095581054688), (-0.11404959112405777, 0.4539652168750763, 15.26012134552002), (-0.27503445744514465, -0.539089560508728, 14.515954971313477), (-0.17454096674919128, -0.34797582030296326, 15.044692993164062), (-0.2832229733467102, -0.3061266243457794, 15.092314720153809), (-0.10261623561382294, 0.2875807285308838, 15.432769775390625), (-0.36746981739997864, 0.11386192589998245, 15.357528686523438), (-0.4271065294742584, -0.08629471808671951, 15.2648344039917), (-0.4496822655200958, -0.03466501086950302, 16.025348663330078), (-0.42858514189720154, -0.30240026116371155, 15.917325019836426), (-0.24370595812797546, -0.6369854211807251, 15.62138557434082), (-0.13393981754779816, 0.12161391228437424, 16.08124542236328), (-0.1710335910320282, -0.6975652575492859, 15.603095054626465), (-0.2579587697982788, -1.057755470275879, 15.484085083007812), (-0.4701453149318695, -0.8888952732086182, 15.530739784240723), (-0.1931370198726654, 0.32519054412841797, 16.158720016479492), (-0.6815227270126343, 0.020065315067768097, 16.17195701599121), (-0.6846262216567993, -0.49475133419036865, 15.935922622680664), (-0.9447976350784302, 0.1832561492919922, 16.419479370117188), (-0.9613137245178223, -0.6134926676750183, 16.298446655273438), (-0.7670189142227173, -1.0735139846801758, 16.131103515625), (-0.3486495614051819, 0.7091474533081055, 16.314376831054688), (-0.39944547414779663, -1.4606974124908447, 16.11054229736328), (-0.6356256008148193, -0.9153937697410583, 15.675597190856934), (-0.336328387260437, -1.32303786277771, 15.619028091430664), (-0.5657735466957092, -1.1184155941009521, 17.50620460510254), (-0.9277827739715576, -0.9189110994338989, 17.29384994506836), (-0.3712989091873169, 1.2361407279968262, 16.921483993530273), (-1.1201728582382202, 0.3322630524635315, 17.54750633239746), (-1.1075636148452759, -0.6245975494384766, 17.477645874023438), (-0.6790239810943604, -0.7967539429664612, 17.967506408691406), (-0.5319654941558838, -0.590407133102417, 14.34709358215332), (-0.289390504360199, -0.6621598601341248, 14.27894115447998), (-0.9723356366157532, 0.11490374058485031, 13.282588005065918), (-0.9339085817337036, 0.5054519176483154, 13.5117826461792), (-0.6811972856521606, 0.5058896541595459, 14.954843521118164), (-0.9787382483482361, 0.16184061765670776, 13.494342803955078), (-2.4653031826019287, 0.38922184705734253, 12.828191757202148), (-2.5478837490081787, 0.4839763939380646, 12.982061386108398), (-2.706221580505371, 0.4240277111530304, 13.224088668823242), (-2.906822681427002, 0.2786986827850342, 13.274084091186523), (-2.7223947048187256, -0.1894022822380066, 13.005772590637207), (-2.8632009029388428, 0.0010025491937994957, 13.268871307373047), (-5.158015251159668, -0.6486318707466125, 11.490886688232422), (-5.248158931732178, -0.4794159233570099, 11.695465087890625), (-5.285372734069824, -0.14338839054107666, 11.776568412780762), (-5.042935848236084, -0.08797132223844528, 11.21951961517334), (-4.995975494384766, -0.5206276774406433, 11.19546127319336), (-5.257289886474609, 0.1941213458776474, 11.710269927978516), (-5.201756954193115, 0.35481372475624084, 11.586729049682617), (-5.105437755584717, 0.26491042971611023, 11.39457893371582), (-2.936098337173462, -0.19397538900375366, 12.902959823608398), (-3.1099467277526855, -0.04816020280122757, 13.156694412231445), (-3.1064560413360596, 0.30095142126083374, 13.214838981628418), (-2.6947240829467773, 0.19321748614311218, 12.511778831481934), (-2.7903048992156982, -0.13942909240722656, 12.627965927124023), (-3.1642372608184814, -0.2851003110408783, 12.793633460998535), (-3.358652114868164, -0.13055841624736786, 13.040902137756348), (-3.380357027053833, 0.20425951480865479, 13.071196556091309), (-2.945910692214966, 0.12215087562799454, 12.330887794494629), (-3.0119264125823975, -0.18859590590000153, 12.442596435546875), (-3.3317039012908936, 0.4372785687446594, 12.940577507019043), (-3.140928030014038, 0.5296223163604736, 12.645764350891113), (-3.0289597511291504, 0.39338135719299316, 12.394922256469727), (-4.890692234039307, -0.35275858640670776, 11.728964805603027), (-4.958746910095215, -0.31094253063201904, 11.8673734664917), (-4.975064277648926, -0.12981078028678894, 11.916369438171387), (-4.820258140563965, -0.07645820826292038, 11.552749633789062), (-4.834718227386475, -0.2413516342639923, 11.610623359680176), (-4.95993185043335, 0.05308273434638977, 11.86707878112793), (-4.91379976272583, 0.14446093142032623, 11.712846755981445), (-4.843445777893066, 0.09297410398721695, 11.607772827148438), (-5.397615432739258, -0.06179571896791458, 10.671730041503906), (-5.591703414916992, 0.3799888491630554, 10.962267875671387), (-5.797943115234375, 0.5257482528686523, 11.221793174743652), (-5.894519329071045, 0.3368992209434509, 11.399105072021484), (-5.920684337615967, -0.14774666726589203, 11.390658378601074), (-5.613159656524658, -1.0549447536468506, 11.173517227172852), (-5.3107709884643555, -0.8781265616416931, 10.895172119140625), (-5.846233367919922, -0.7494393587112427, 11.365680694580078), (-6.596066474914551, -0.24740223586559296, 10.56077766418457), (-6.350921630859375, -0.8063284158706665, 10.969337463378906), (-6.057215213775635, -0.861004650592804, 10.527195930480957), (-6.293850421905518, -0.9374912977218628, 10.715707778930664), (-6.541781902313232, -0.2365044206380844, 10.94128704071045), (-6.450286388397217, 0.35614243149757385, 11.061773300170898), (-6.424384117126465, 0.459476113319397, 10.827165603637695), (-6.180690288543701, 0.3953370451927185, 10.627986907958984), (-6.2013840675354, -0.1855391263961792, 10.36497688293457), (-1.0772595405578613, 0.40478992462158203, 13.485767364501953), (-1.0305824279785156, 0.19947144389152527, 13.546683311462402), (-1.2580369710922241, 0.5656591057777405, 14.414132118225098), (-1.3206313848495483, 0.299591988325119, 14.483424186706543), (-1.4107469320297241, -0.0018225052626803517, 14.528647422790527), (-5.011077404022217, -0.3577766418457031, 11.65269660949707), (-5.0973429679870605, -0.3197886645793915, 11.78765869140625), (-5.128787040710449, -0.14044813811779022, 11.828718185424805), (-4.969877243041992, -0.08072993159294128, 11.462348937988281), (-4.959582805633545, -0.2663783133029938, 11.491628646850586), (-5.096351146697998, 0.02251817286014557, 11.773306846618652), (-5.052450180053711, 0.13059504330158234, 11.649679183959961), (-5.02183198928833, 0.0743306428194046, 11.507643699645996), (-4.226472854614258, -0.3551219701766968, 12.151605606079102), (-4.352092742919922, -0.2349507212638855, 12.350833892822266), (-4.397286891937256, 0.0022835531271994114, 12.407455444335938), (-4.036733627319336, 0.012650048360228539, 11.810834884643555), (-4.090387344360352, -0.26212596893310547, 11.917484283447266), (-4.348690986633301, 0.2252092808485031, 12.304298400878906), (-4.222118377685547, 0.3171085715293884, 12.08706283569336), (-4.0988264083862305, 0.24913820624351501, 11.89181900024414), (-2.259258270263672, 0.4947018325328827, 13.193631172180176), (-2.3958323001861572, 0.4368468225002289, 13.462759971618652), (-2.4923689365386963, 0.2609490752220154, 13.59565258026123), (-2.341618299484253, -0.2561347782611847, 13.302051544189453), (-2.4616212844848633, -0.025984402745962143, 13.539388656616211), (-0.44808804988861084, -0.9354646801948547, 12.077019691467285), (-0.9657347798347473, -0.685964822769165, 12.032180786132812), (-0.2909128963947296, 0.554237961769104, 12.421096801757812), (-0.6798456907272339, 0.3388747274875641, 12.285646438598633), (-0.9927066564559937, 0.004856261424720287, 12.194790840148926), (-1.3717716932296753, 0.7038586735725403, 13.97646427154541), (-1.5190774202346802, 0.501897931098938, 14.190286636352539), (-1.5867363214492798, 0.2542317509651184, 14.252266883850098), (-1.611885905265808, -0.010475161485373974, 14.238636016845703), (-1.4092705249786377, -0.2530904710292816, 14.141834259033203), (-0.8645728230476379, 0.5283294320106506, 13.312088012695312), (-1.8484644889831543, 0.538292646408081, 13.512287139892578), (-1.9639207124710083, 0.45008596777915955, 13.717595100402832), (-2.083935022354126, 0.28886306285858154, 13.83698844909668), (-2.063086986541748, -0.03573327884078026, 13.813514709472656), (-1.9711445569992065, -0.2133551985025406, 13.642005920410156), (-1.2901946306228638, -0.2737206220626831, 14.513601303100586), (-0.8795197606086731, -0.20208482444286346, 14.775751113891602), (-0.86439049243927, 0.24417753517627716, 14.901994705200195), (-0.286800354719162, -0.5638229846954346, 15.682879447937012), (-0.39662298560142517, -0.18198488652706146, 15.197046279907227), (-0.35531821846961975, -0.4582021236419678, 15.799570083618164), (-0.6115871071815491, -0.6586011648178101, 15.716535568237305), (-0.32028716802597046, -0.004011228680610657, 15.56297779083252), (-0.3547547161579132, -0.15299668908119202, 15.498697280883789), (-0.2046399712562561, -0.3621097207069397, 15.416220664978027), (-0.08451627939939499, 0.1141459196805954, 15.60643482208252), (-0.1057274267077446, -0.40408360958099365, 15.394344329833984), (-0.343982994556427, -0.24934671819210052, 15.465768814086914), (-0.23259063065052032, -0.39731502532958984, 14.786567687988281), (-0.34911465644836426, -0.3351726233959198, 14.85285758972168), (-0.5428749322891235, -0.02404184825718403, 15.09388256072998), (-0.4277649223804474, -0.270429790019989, 14.950506210327148), (-0.4899881184101105, -0.1710248738527298, 15.044987678527832), (-0.40054845809936523, 0.012220221571624279, 15.319110870361328), (-0.4586136043071747, -0.15787790715694427, 15.996841430664062), (-0.707443356513977, -0.1874169409275055, 16.119081497192383), (-1.0053132772445679, -0.18088899552822113, 16.408369064331055), (-1.1965909004211426, -0.19458997249603271, 17.56029510498047), (-0.742486834526062, -0.36529040336608887, 18.167312622070312), (-0.3408208191394806, -0.08139698952436447, 15.528718948364258), (-0.541034460067749, 0.12349208444356918, 15.140289306640625), (-0.2578718960285187, 0.4275961220264435, 15.226625442504883), (-0.2000228613615036, 0.2552396357059479, 15.424308776855469), (-0.2655360698699951, 0.10357454419136047, 16.059492111206055), (-0.43329161405563354, 0.2762600779533386, 16.161651611328125), (-0.6109544038772583, 0.6516895890235901, 16.34543800354004), (-0.5623745918273926, 1.188751220703125, 17.169870376586914), (-0.1662689596414566, 0.09837841242551804, 15.605182647705078), (-0.1218341737985611, 0.8291347622871399, 14.728541374206543), (-0.31802037358283997, 0.8301141262054443, 14.75003719329834), (-0.3906095027923584, 0.3566007912158966, 15.201010704040527), (-0.28768160939216614, 0.2008710354566574, 15.40165901184082), (-0.3795124590396881, 0.05750652402639389, 16.040029525756836), (-0.8207757472991943, 0.49353253841400146, 16.386524200439453), (-1.126894235610962, 0.633834958076477, 13.657427787780762), (-1.7411929368972778, 0.4017193019390106, 13.253148078918457), (-0.8792043924331665, 0.8110883235931396, 13.629697799682617), (-0.6008158922195435, 0.17982515692710876, 16.17765998840332), (-0.24025209248065948, 0.06590472906827927, 15.599510192871094), (-1.5139365196228027, 0.653984546661377, 13.84410572052002), (-1.648924469947815, 0.4982713758945465, 14.032135009765625), (-1.7358553409576416, 0.2506672143936157, 14.093038558959961), (-1.707649827003479, -0.018472040072083473, 14.08597469329834), (-1.5692076683044434, -0.20229580998420715, 13.971651077270508), (-1.3607186079025269, 0.5936585068702698, 13.579094886779785), (-0.6761103868484497, 0.8478508591651917, 13.49465274810791), (-1.0313149690628052, -0.14894600212574005, 13.497791290283203), (-2.113415002822876, 0.13299860060214996, 12.953632354736328), (-0.9690232872962952, -0.31044143438339233, 13.468631744384766), (-0.9903707504272461, -0.3815692067146301, 13.099679946899414), (-1.6733124256134033, 0.08540090173482895, 13.164994239807129), (-1.2105106115341187, 0.1323091983795166, 13.45854377746582), (-0.7437742352485657, -0.513494074344635, 14.403244972229004), (-0.7252203822135925, -0.39456257224082947, 14.645770072937012), (-0.8551356196403503, -0.5511189699172974, 14.192634582519531), (-0.3609538674354553, -0.2555927336215973, 15.141060829162598), (-0.5667081475257874, -0.7824651598930359, 15.600651741027832), (-0.29198142886161804, -0.3177454471588135, 15.432809829711914), (-0.830660343170166, -0.6969379782676697, 13.015957832336426), (-0.38780826330184937, -0.9242182970046997, 13.048789978027344), (-1.0682402849197388, -0.3576217293739319, 12.641491889953613), (-1.1047337055206299, -0.33916765451431274, 12.156087875366211), (-0.24932123720645905, 0.7618212103843689, 13.287187576293945), (-2.1718671321868896, 0.38177230954170227, 13.007185935974121), (-0.7959610819816589, 0.8862624168395996, 17.515644073486328), (-0.6074764728546143, 0.6078449487686157, 18.09925079345703), (-0.7181203365325928, 0.15427908301353455, 18.189437866210938), (-3.749260425567627, -0.3570745289325714, 12.453490257263184), (-3.915811061859131, -0.20278994739055634, 12.689635276794434), (-3.9320895671844482, 0.11378736793994904, 12.721334457397461), (-3.5308077335357666, 0.07632778584957123, 12.047109603881836), (-3.5773770809173584, -0.2338077425956726, 12.151423454284668), (-3.871178388595581, 0.32787349820137024, 12.605965614318848), (-3.699220657348633, 0.4291984438896179, 12.329010963439941), (-3.577505111694336, 0.33301109075546265, 12.12407112121582), (-1.1592670679092407, -0.2088402807712555, 14.655352592468262), (-1.1772589683532715, 0.2848394215106964, 14.688204765319824), (-2.2161333560943604, -0.1597234308719635, 13.067916870117188), (-1.7750977277755737, -0.16483058035373688, 13.34193229675293), (-1.3537827730178833, -0.22886502742767334, 13.612395286560059), (-0.8461902141571045, -0.754523515701294, 13.44027042388916), (-0.3432149589061737, -0.9431493282318115, 13.40294075012207), (-1.0102461576461792, -0.5176522731781006, 13.82675838470459), (-1.4241583347320557, 0.566460132598877, 14.235838890075684), (-1.4522836208343506, 0.27139782905578613, 14.362427711486816), (-1.5492030382156372, -0.03619193658232689, 14.34141731262207), (-1.3496187925338745, -0.2965368926525116, 14.329023361206055), (-0.15954354405403137, 0.9138933420181274, 14.054720878601074), (-0.35276198387145996, 0.9027597904205322, 14.148242950439453), (-1.2370821237564087, 0.766792893409729, 14.093278884887695), (-1.028188705444336, -0.3949528932571411, 14.521974563598633), (-1.0719510316848755, -0.46469128131866455, 14.255582809448242), (-1.197266936302185, -0.4500153362751007, 13.900432586669922), (-0.9914703369140625, -0.2895444929599762, 14.655097961425781), (-1.0420007705688477, 0.5970153212547302, 14.669929504394531), (-1.1781985759735107, -0.020595770329236984, 14.754018783569336), (-2.565664291381836, 0.1925596296787262, 12.683884620666504), (-2.574876308441162, -0.1306265890598297, 12.81220817565918), (-0.642329752445221, -0.6859064698219299, 14.06837272644043), (-0.3204173445701599, -0.7746500372886658, 13.974020004272461), (-0.9457179307937622, 0.7913327813148499, 13.997197151184082), (-0.597255289554596, 0.8325592279434204, 14.215682983398438), (-1.0448342561721802, 0.7419307231903076, 14.310867309570312), (-0.8096022605895996, 0.7544323801994324, 14.550248146057129), (-0.4936072826385498, 0.7458934783935547, 14.81762409210205), (-4.539930820465088, 0.16551917791366577, 11.705904006958008), (-4.640643119812012, 0.2200639843940735, 11.872285842895508), (-4.728328704833984, 0.12924900650978088, 12.051212310791016), (-4.530487537384033, -0.2654944062232971, 11.710966110229492), (-4.48736572265625, -0.03890296071767807, 11.629173278808594), (-4.756687164306641, -0.07189977169036865, 12.12420654296875), (-4.718038082122803, -0.26126691699028015, 12.059654235839844), (-4.629251956939697, -0.34793275594711304, 11.892585754394531), (-0.2842862606048584, -0.06232484430074692, 15.859030723571777), (-0.2997343838214874, -0.24951283633708954, 15.810236930847168), (-0.17423836886882782, -0.4905298352241516, 15.680377006530762), (-0.08501492440700531, 0.041953761130571365, 15.911444664001465), (-0.09712786227464676, -0.5200812220573425, 15.647107124328613), (-0.2649938464164734, -0.3558122515678406, 15.752887725830078), (-0.3016482889652252, -0.15048635005950928, 15.837128639221191), (-0.16785985231399536, 0.030728444457054138, 15.898998260498047), (-0.22813621163368225, -0.44234180450439453, 15.709916114807129), (-0.24286715686321259, 0.005272773094475269, 15.887871742248535), (-2.6257498264312744, 0.4968477487564087, 12.935184478759766), (-2.717040538787842, 0.5340468883514404, 12.860304832458496), (-2.8321313858032227, 0.5449493527412415, 12.786784172058105), (-2.968703508377075, 0.529527485370636, 12.729615211486816), (-3.1650829315185547, 0.47335606813430786, 13.034706115722656), (-3.039288282394409, 0.4996902048587799, 13.103363990783691), (-2.8988966941833496, 0.48117339611053467, 13.152161598205566), (-2.7867608070373535, 0.4446575343608856, 13.183818817138672), (-2.8273138999938965, 0.40151333808898926, 12.517618179321289), (-2.716787576675415, 0.41541242599487305, 12.586050033569336), (-2.6025986671447754, 0.40660232305526733, 12.68748950958252), (-2.5207228660583496, 0.39371049404144287, 12.773021697998047), (-0.4767369329929352, -1.3436816930770874, 16.81233787536621), (-0.8699838519096375, -1.0153448581695557, 16.75322723388672), (-0.378902792930603, 1.0247708559036255, 16.601497650146484), (-1.1409879922866821, 0.30737003684043884, 16.904186248779297), (-1.130751132965088, -0.614080011844635, 16.84908103942871), (0.0, -1.5465126037597656, 16.859128952026367), (-1.2148685455322266, -0.16406993567943573, 16.915321350097656), (-0.6719319820404053, 0.9446744918823242, 16.716480255126953), (-0.9381240010261536, 0.722192108631134, 16.853891372680664), (0.0, -1.0151481628417969, 9.932159423828125), (0.0, -1.0437126159667969, 10.365578651428223), (0.0, -1.049666404724121, 10.853973388671875), (0.0, 0.8912320137023926, 9.449461936950684), (0.0, 0.4903078079223633, 9.391768455505371), (0.0, -1.0847711563110352, 11.449553489685059), (0.0, 0.9277594685554504, 9.767264366149902), (0.0, 0.8508086204528809, 10.147056579589844), (0.0, 0.9419231414794922, 9.564255714416504), (0.0, 0.6882424354553223, 10.900113105773926), (0.0, 0.5404796600341797, 11.255172729492188), (0.0, 0.48521900177001953, 11.78997802734375), (0.0, 0.7423758506774902, 10.55225944519043), (0.0, -1.0416507720947266, 9.634732246398926), (0.0, -0.9462890625, 9.415755271911621), (0.0, -0.5817337036132812, 9.318811416625977), (0.0, -0.019988536834716797, 9.402729034423828), (0.0, -1.0401725769042969, 12.043728828430176), (0.0, -0.7428245544433594, 15.586264610290527), (0.0, -1.1430644989013672, 15.463476181030273), (0.0, 0.12430047988891602, 16.079328536987305), (0.0, 0.33313703536987305, 16.154048919677734), (0.0, 0.738215446472168, 16.30876350402832), (0.0, -1.6719379425048828, 16.12055206298828), (0.0, -1.5075302124023438, 15.601245880126953), (0.0, 1.06862211227417, 16.61069107055664), (0.0, 1.2996759414672852, 17.010021209716797), (0.0, -1.2267026901245117, 17.59649658203125), (0.0, -0.8923254013061523, 18.146480560302734), (0.0, -0.5538716316223145, 14.510137557983398), (0.0, -0.6705594062805176, 14.267205238342285), (0.0, -1.0130720138549805, 12.514293670654297), (0.0, 0.2916879653930664, 15.447943687438965), (0.0, 0.13242340087890625, 15.61102294921875), (0.0, -0.3848838806152344, 15.024975776672363), (0.0, -0.4393773078918457, 15.370997428894043), (0.0, -0.4298882484436035, 14.769499778747559), (0.0, -0.44674158096313477, 18.403274536132812), (0.0, 0.46421003341674805, 15.270169258117676), (0.0, 0.8044648170471191, 14.723519325256348), (0.0, -0.9844865798950195, 13.050131797790527), (0.0, 1.3140277862548828, 17.422592163085938), (0.0, 1.0692076683044434, 17.823768615722656), (0.0, 0.6536574363708496, 18.28845977783203), (0.0, 0.10368776321411133, 18.448253631591797), (0.0, 0.8934812545776367, 14.05034351348877), (0.0, -0.7802233695983887, 13.962645530700684), (0.0, -0.9393119812011719, 13.390871047973633), (0.0, 0.7900810241699219, 13.280420303344727), (0.0, 0.6009039878845215, 12.460115432739258), (0.0, 0.05266237258911133, 15.918011665344238), (0.0, -0.540931224822998, 15.62749195098877)]


     
    # Define the faces by index numbers of its vertices. Each face is defined by a tuple of 3 or more integers.
    # N-gons would require a tuple of size N.
    faces = [(11, 25, 26, 12), (25, 10, 13, 26), (4, 23, 27, 15), (23, 7, 14, 27), (16, 28, 24, 8), (28, 17, 9, 24), (7, 33, 34, 14), (33, 11, 12, 34), (10, 32, 35, 13), (32, 4, 15, 35), (72, 31, 9, 67), (27, 53, 47, 15), (53, 54, 48, 47), (54, 41, 38, 48), (14, 45, 53, 27), (45, 46, 54, 53), (46, 37, 41, 54), (26, 55, 51, 12), (55, 56, 52, 51), (56, 42, 40, 52), (13, 49, 55, 26), (49, 50, 56, 55), (50, 39, 42, 56), (35, 57, 49, 13), (57, 58, 50, 49), (58, 43, 39, 50), (15, 47, 57, 35), (47, 48, 58, 57), (48, 38, 43, 58), (34, 59, 45, 14), (59, 60, 46, 45), (60, 44, 37, 46), (12, 51, 59, 34), (51, 52, 60, 59), (52, 40, 44, 60), (61, 23, 4), (23, 61, 7), (18, 68, 66, 10), (68, 16, 8, 66), (11, 67, 69, 19), (67, 9, 17, 69), (22, 70, 62, 5), (70, 20, 1, 62), (6, 64, 70, 22), (64, 2, 20, 70), (71, 32, 10, 66), (63, 4, 32, 71), (33, 72, 67, 11), (0, 63, 71, 30), (7, 65, 72, 33), (4, 63, 73, 61), (61, 73, 65, 7), (78, 28, 16, 74), (75, 17, 28, 78), (79, 29, 19, 77), (76, 18, 29, 79), (80, 68, 18, 76), (74, 16, 68, 80), (69, 81, 77, 19), (17, 75, 81, 69), (20, 86, 82, 1), (86, 78, 74, 82), (2, 83, 86, 20), (83, 75, 78, 86), (22, 87, 85, 6), (87, 79, 77, 85), (5, 84, 87, 22), (84, 76, 79, 87), (62, 88, 84, 5), (88, 80, 76, 84), (1, 82, 88, 62), (82, 74, 80, 88), (81, 89, 85, 77), (89, 64, 6, 85), (75, 83, 89, 81), (83, 2, 64, 89), (19, 29, 25, 11), (29, 18, 10, 25), (73, 21, 3, 65), (65, 3, 31, 72), (31, 3, 21, 36), (0, 30, 36, 21), (24, 36, 30, 8), (30, 71, 66, 8), (9, 31, 36, 24), (63, 0, 21, 73), (91, 117, 120, 97), (117, 90, 96, 120), (97, 120, 121, 98), (120, 96, 99, 121), (123, 103, 106, 125), (105, 124, 129, 111), (113, 130, 125, 106), (130, 1006, 1005, 125), (107, 126, 130, 113), (126, 1007, 1006, 130), (116, 131, 129, 112), (131, 115, 111, 129), (110, 128, 131, 116), (128, 109, 115, 131), (135, 97, 98, 136), (96, 134, 137, 99), (108, 140, 141, 114), (126, 107, 144, 146), (1007, 126, 146, 1010), (101, 122, 152, 149), (122, 100, 148, 152), (98, 121, 153, 151), (121, 99, 150, 153), (99, 137, 154, 150), (100, 136, 155, 148), (136, 98, 151, 155), (38, 41, 117, 91), (41, 37, 90, 117), (40, 42, 118, 93), (42, 39, 92, 118), (39, 43, 132, 92), (43, 38, 91, 132), (37, 44, 133, 90), (44, 40, 93, 133), (141, 106, 103), (140, 113, 106, 141), (149, 152, 161, 158), (152, 148, 157, 161), (151, 153, 162, 160), (153, 150, 159, 162), (150, 154, 163, 159), (148, 155, 164, 157), (155, 151, 160, 164), (166, 167, 122, 101), (94, 119, 167, 166), (167, 165, 100, 122), (119, 95, 165, 167), (136, 100, 165), (95, 135, 136, 165), (94, 166, 137, 134), (103, 168, 141), (103, 139, 168), (105, 168, 139), (111, 169, 105), (168, 105, 169), (129, 124, 104, 112), (172, 173, 110, 116), (1011, 1012, 173, 172), (172, 116, 112, 170), (156, 1009, 1008, 170), (172, 1013, 1011), (1008, 1013, 172, 170), (114, 169, 111, 115), (144, 107, 176, 177), (140, 176, 107, 113), (178, 142, 143, 179), (180, 145, 142, 178), (1014, 1015, 180, 127), (1015, 1016, 145, 180), (143, 177, 176, 179), (127, 180, 178, 181), (108, 181, 178, 179), (108, 179, 176, 140), (127, 182, 1017, 1014), (182, 173, 1012, 1017), (173, 182, 183, 110), (182, 127, 181, 183), (108, 109, 183, 181), (109, 128, 110, 183), (1005, 1018, 147, 125), (147, 184, 125), (184, 123, 125), (138, 186, 187, 171), (186, 156, 170, 187), (175, 188, 185, 189), (188, 174, 102, 185), (102, 123, 184, 185), (147, 189, 185, 184), (147, 1018, 1019, 189), (175, 189, 1019, 1020), (104, 187, 170, 112), (104, 171, 187), (90, 133, 96), (91, 97, 132), (109, 114, 115), (108, 114, 109), (141, 168, 169), (114, 141, 169), (161, 194, 191, 158), (194, 123, 102, 191), (157, 190, 194, 161), (190, 103, 123, 194), (162, 195, 193, 160), (195, 124, 105, 193), (159, 192, 195, 162), (192, 104, 124, 195), (164, 196, 190, 157), (196, 139, 103, 190), (160, 193, 196, 164), (193, 105, 139, 196), (171, 197, 138), (104, 192, 197, 171), (192, 159, 163, 197), (174, 198, 191, 102), (137, 199, 200, 154), (199, 101, 149, 200), (154, 200, 201, 163), (200, 149, 158, 201), (101, 199, 166), (199, 137, 166), (158, 191, 198, 201), (204, 118, 92, 205), (204, 205, 206, 203), (203, 206, 207, 202), (202, 207, 95, 119), (118, 204, 208, 93), (203, 209, 208, 204), (202, 210, 209, 203), (119, 94, 210, 202), (95, 207, 135), (94, 134, 210), (92, 132, 205), (93, 208, 133), (135, 211, 132, 97), (135, 207, 206, 211), (205, 132, 211, 206), (133, 208, 209, 212), (210, 134, 212, 209), (133, 212, 134, 96), (1020, 1021, 214, 175), (1021, 1009, 156, 214), (186, 215, 214, 156), (215, 188, 175, 214), (138, 213, 215, 186), (213, 174, 188, 215), (197, 216, 213, 138), (216, 198, 174, 213), (216, 163, 201), (198, 216, 201), (216, 197, 163), (142, 145, 340, 341), (1023, 235, 236, 1024), (235, 233, 237, 236), (234, 1025, 1026, 238), (238, 1026, 1027, 244), (237, 246, 247, 236), (246, 243, 245, 247), (236, 247, 1029, 1024), (247, 245, 1028, 1029), (494, 495, 249, 248), (496, 1030, 1031, 250), (495, 498, 252, 249), (248, 249, 252, 253), (1032, 248, 253, 1033), (254, 223, 225, 255), (255, 225, 1034, 1035), (264, 274, 275, 265), (274, 279, 280, 275), (275, 280, 281, 276), (277, 282, 283, 278), (278, 283, 279, 274), (269, 273, 296, 295), (273, 272, 297, 296), (272, 271, 298, 297), (271, 268, 299, 298), (266, 270, 301, 300), (270, 269, 295, 301), (268, 267, 302, 299), (267, 266, 300, 302), (302, 300, 306, 304), (299, 302, 304, 307), (301, 295, 311, 305), (300, 301, 305, 306), (298, 299, 307, 308), (297, 298, 308, 309), (296, 297, 309, 310), (295, 296, 310, 311), (303, 311, 310, 309), (303, 309, 308, 307), (303, 306, 305, 311), (303, 307, 304, 306), (318, 317, 266, 267), (288, 287, 317, 318), (319, 318, 267, 268), (289, 288, 318, 319), (321, 320, 269, 270), (291, 290, 320, 321), (317, 321, 270, 266), (287, 291, 321, 317), (322, 319, 268, 271), (292, 289, 319, 322), (323, 322, 271, 272), (293, 292, 322, 323), (324, 323, 272, 273), (294, 293, 323, 324), (320, 324, 273, 269), (290, 294, 324, 320), (406, 422, 260, 455), (333, 334, 262, 261), (334, 335, 263, 262), (337, 336, 264, 265), (494, 1001, 1028, 245), (1022, 338, 217, 1036), (338, 339, 218, 217), (146, 144, 339, 338), (342, 341, 219, 220), (348, 257, 259, 256), (219, 348, 256, 220), (409, 394, 422, 406), (349, 350, 334, 333), (350, 351, 335, 334), (351, 352, 337, 335), (352, 353, 336, 337), (243, 246, 240, 242), (360, 359, 232, 240), (415, 357, 359, 360), (246, 360, 240), (246, 415, 360), (228, 1037, 1038, 364), (226, 227, 363, 365), (1039, 226, 365, 1040), (362, 366, 358, 230), (366, 416, 414, 358), (1041, 367, 226, 1039), (1034, 225, 367, 1041), (367, 368, 227, 226), (225, 223, 368, 367), (224, 1043, 1037, 228), (369, 371, 355, 221), (230, 358, 371, 369), (371, 370, 412, 355), (358, 414, 370, 371), (374, 373, 231, 239), (240, 232, 373, 374), (375, 374, 239, 241), (242, 240, 374, 375), (499, 375, 241, 497), (498, 242, 375, 499), (376, 377, 253, 252), (377, 1042, 1033, 253), (378, 372, 229, 361), (362, 230, 372, 378), (372, 379, 222, 229), (230, 369, 379, 372), (369, 221, 356, 379), (379, 356, 258, 222), (383, 382, 234, 238), (384, 383, 238, 244), (500, 384, 244, 496), (386, 381, 228, 364), (381, 380, 224, 228), (387, 1044, 1043, 224), (388, 387, 224, 380), (396, 391, 382, 383), (392, 396, 383, 384), (501, 392, 384, 500), (397, 390, 381, 386), (390, 389, 380, 381), (388, 380, 389, 463), (239, 231, 391, 396), (241, 239, 396, 392), (497, 241, 392, 501), (361, 229, 390, 397), (229, 222, 389, 390), (463, 389, 222, 258), (410, 403, 394, 409), (398, 399, 350, 349), (343, 344, 399, 398), (399, 400, 351, 350), (344, 345, 400, 399), (400, 401, 352, 351), (345, 346, 401, 400), (401, 402, 353, 352), (346, 347, 402, 401), (398, 403, 393, 343), (349, 394, 403, 398), (447, 460, 395, 404), (421, 1053, 1050, 446), (340, 1054, 1053, 421), (404, 421, 446, 447), (404, 395, 257, 348), (407, 408, 256, 259), (436, 437, 409, 406), (405, 410, 438, 451), (313, 410, 405), (410, 409, 437, 438), (411, 412, 223, 254), (237, 233, 357, 415), (246, 237, 415), (414, 416, 363, 227), (412, 370, 368, 223), (370, 414, 227, 368), (1045, 418, 440, 1052), (1036, 217, 418, 1045), (417, 418, 217, 218), (439, 440, 418, 417), (408, 407, 439, 417), (419, 420, 342, 220), (218, 339, 420, 419), (420, 177, 143, 342), (339, 144, 177, 420), (408, 417, 218, 419), (408, 419, 220, 256), (404, 348, 219, 421), (333, 261, 260, 422), (394, 349, 333, 422), (423, 1047, 1048, 424), (385, 1046, 1047, 423), (250, 1031, 1046, 385), (425, 1049, 1042, 377), (424, 1048, 1049, 425), (424, 425, 251, 423), (377, 376, 251, 425), (279, 426, 427, 280), (426, 325, 326, 427), (280, 427, 428, 281), (427, 326, 327, 428), (282, 429, 430, 283), (429, 328, 329, 430), (283, 430, 426, 279), (430, 329, 325, 426), (281, 428, 431, 284), (428, 327, 330, 431), (284, 431, 432, 285), (431, 330, 331, 432), (285, 432, 433, 286), (432, 331, 332, 433), (286, 433, 429, 282), (433, 332, 328, 429), (325, 471, 470, 326), (469, 289, 292, 466), (326, 470, 469, 327), (466, 292, 293, 465), (328, 468, 467, 329), (471, 287, 288, 470), (329, 467, 471, 325), (327, 469, 466, 330), (465, 293, 294, 464), (330, 466, 465, 331), (464, 294, 290, 468), (331, 465, 464, 332), (468, 290, 291, 467), (332, 464, 468, 328), (467, 291, 287, 471), (1050, 1044, 387, 446), (388, 447, 446, 387), (447, 388, 463, 460), (336, 436, 456, 264), (436, 336, 353, 437), (438, 402, 347, 451), (437, 353, 402, 438), (440, 458, 1051, 1052), (439, 457, 458, 440), (407, 441, 439), (441, 413, 457, 439), (263, 275, 276), (263, 335, 337, 265), (263, 265, 275), (455, 277, 278), (436, 406, 455, 456), (458, 255, 1035, 1051), (457, 254, 255, 458), (254, 457, 413, 411), (278, 456, 455), (264, 456, 278, 274), (289, 469, 470, 288), (219, 341, 340, 421), (312, 410, 313), (312, 393, 403, 410), (1038, 1055, 475, 364), (1055, 1025, 234, 475), (363, 474, 476, 365), (474, 233, 235, 476), (365, 476, 1056, 1040), (476, 235, 1023, 1056), (359, 477, 473, 232), (477, 366, 362, 473), (357, 480, 477, 359), (480, 416, 366, 477), (373, 478, 472, 231), (478, 378, 361, 472), (232, 473, 478, 373), (473, 362, 378, 478), (382, 479, 475, 234), (479, 386, 364, 475), (391, 481, 479, 382), (481, 397, 386, 479), (231, 472, 481, 391), (472, 361, 397, 481), (416, 480, 474, 363), (480, 357, 233, 474), (448, 459, 461), (459, 462, 461), (460, 463, 462), (460, 462, 459), (314, 442, 448), (314, 448, 461), (314, 461, 453), (461, 462, 453), (343, 393, 448), (393, 459, 448), (258, 453, 462), (258, 462, 463), (393, 395, 459), (395, 460, 459), (449, 354, 434), (449, 434, 452), (314, 453, 435), (314, 435, 315), (454, 316, 435), (316, 315, 435), (434, 354, 454), (354, 316, 454), (445, 450, 451), (445, 451, 347), (450, 445, 354), (450, 354, 449), (444, 316, 445), (316, 354, 445), (346, 444, 347), (444, 445, 347), (444, 346, 345), (444, 345, 443), (316, 444, 443), (316, 443, 315), (443, 345, 344), (443, 344, 442), (315, 443, 442), (315, 442, 314), (442, 344, 343), (442, 343, 448), (451, 450, 441), (450, 413, 441), (405, 451, 441), (405, 441, 407), (355, 412, 452), (355, 452, 434), (453, 258, 356), (453, 356, 435), (221, 454, 356), (454, 435, 356), (355, 434, 221), (434, 454, 221), (411, 449, 412), (449, 452, 412), (411, 413, 450), (411, 450, 449), (405, 407, 259), (405, 259, 313), (395, 393, 257), (393, 312, 257), (259, 257, 313), (257, 312, 313), (485, 486, 284, 285), (485, 484, 487, 486), (484, 483, 488, 487), (483, 482, 489, 488), (482, 261, 262, 489), (285, 286, 490, 485), (484, 485, 490, 491), (483, 484, 491, 492), (482, 483, 492, 493), (261, 482, 493, 260), (262, 263, 489), (263, 488, 489), (263, 276, 487, 488), (276, 281, 284, 486), (276, 486, 487), (277, 490, 286, 282), (277, 491, 490), (277, 455, 492, 491), (455, 493, 492), (260, 493, 455), (1010, 146, 338, 1022), (143, 142, 341, 342), (145, 1016, 1054, 340), (251, 497, 501, 423), (423, 501, 500, 385), (385, 500, 496, 250), (252, 498, 499, 376), (376, 499, 497, 251), (248, 1032, 1001, 494), (243, 242, 498, 495), (244, 1027, 1030, 496), (245, 243, 495, 494), (513, 514, 528, 527), (527, 528, 515, 512), (506, 517, 529, 525), (525, 529, 516, 509), (518, 510, 526, 530), (530, 526, 511, 519), (509, 516, 536, 535), (535, 536, 514, 513), (512, 515, 537, 534), (534, 537, 517, 506), (574, 569, 511, 533), (529, 517, 549, 555), (555, 549, 550, 556), (556, 550, 540, 543), (516, 529, 555, 547), (547, 555, 556, 548), (548, 556, 543, 539), (528, 514, 553, 557), (557, 553, 554, 558), (558, 554, 542, 544), (515, 528, 557, 551), (551, 557, 558, 552), (552, 558, 544, 541), (537, 515, 551, 559), (559, 551, 552, 560), (560, 552, 541, 545), (517, 537, 559, 549), (549, 559, 560, 550), (550, 560, 545, 540), (536, 516, 547, 561), (561, 547, 548, 562), (562, 548, 539, 546), (514, 536, 561, 553), (553, 561, 562, 554), (554, 562, 546, 542), (563, 506, 525), (525, 509, 563), (520, 512, 568, 570), (570, 568, 510, 518), (513, 521, 571, 569), (569, 571, 519, 511), (524, 507, 564, 572), (572, 564, 503, 522), (508, 524, 572, 566), (566, 572, 522, 504), (573, 568, 512, 534), (565, 573, 534, 506), (535, 513, 569, 574), (502, 532, 573, 565), (509, 535, 574, 567), (506, 563, 575, 565), (563, 509, 567, 575), (580, 576, 518, 530), (577, 580, 530, 519), (581, 579, 521, 531), (578, 581, 531, 520), (582, 578, 520, 570), (576, 582, 570, 518), (571, 521, 579, 583), (519, 571, 583, 577), (522, 503, 584, 588), (588, 584, 576, 580), (504, 522, 588, 585), (585, 588, 580, 577), (524, 508, 587, 589), (589, 587, 579, 581), (507, 524, 589, 586), (586, 589, 581, 578), (564, 507, 586, 590), (590, 586, 578, 582), (503, 564, 590, 584), (584, 590, 582, 576), (583, 579, 587, 591), (591, 587, 508, 566), (577, 583, 591, 585), (585, 591, 566, 504), (521, 513, 527, 531), (531, 527, 512, 520), (575, 567, 505, 523), (567, 574, 533, 505), (533, 538, 523, 505), (502, 523, 538, 532), (526, 510, 532, 538), (532, 510, 568, 573), (511, 526, 538, 533), (565, 575, 523, 502), (593, 599, 622, 619), (619, 622, 598, 592), (599, 600, 623, 622), (622, 623, 601, 598), (625, 627, 608, 605), (607, 613, 631, 626), (615, 608, 627, 632), (632, 627, 1005, 1006), (609, 615, 632, 628), (628, 632, 1006, 1007), (618, 614, 631, 633), (633, 631, 613, 617), (612, 618, 633, 630), (630, 633, 617, 611), (637, 638, 600, 599), (598, 601, 639, 636), (610, 616, 643, 642), (628, 648, 646, 609), (1007, 1010, 648, 628), (603, 651, 654, 624), (624, 654, 650, 602), (600, 653, 655, 623), (623, 655, 652, 601), (601, 652, 656, 639), (602, 650, 657, 638), (638, 657, 653, 600), (540, 593, 619, 543), (543, 619, 592, 539), (542, 595, 620, 544), (544, 620, 594, 541), (541, 594, 634, 545), (545, 634, 593, 540), (539, 592, 635, 546), (546, 635, 595, 542), (643, 605, 608), (642, 643, 608, 615), (651, 660, 663, 654), (654, 663, 659, 650), (653, 662, 664, 655), (655, 664, 661, 652), (652, 661, 665, 656), (650, 659, 666, 657), (657, 666, 662, 653), (668, 603, 624, 669), (596, 668, 669, 621), (669, 624, 602, 667), (621, 669, 667, 597), (638, 667, 602), (597, 667, 638, 637), (596, 636, 639, 668), (605, 643, 670), (605, 670, 641), (607, 641, 670), (613, 607, 671), (670, 671, 607), (631, 614, 606, 626), (674, 618, 612, 675), (1011, 674, 675, 1012), (674, 672, 614, 618), (658, 672, 1008, 1009), (674, 1011, 1013), (1008, 672, 674, 1013), (616, 617, 613, 671), (646, 679, 678, 609), (642, 615, 609, 678), (680, 681, 645, 644), (682, 680, 644, 647), (1014, 629, 682, 1015), (1015, 682, 647, 1016), (645, 681, 678, 679), (629, 683, 680, 682), (610, 681, 680, 683), (610, 642, 678, 681), (629, 1014, 1017, 684), (684, 1017, 1012, 675), (675, 612, 685, 684), (684, 685, 683, 629), (610, 683, 685, 611), (611, 685, 612, 630), (1005, 627, 649, 1018), (649, 627, 686), (686, 627, 625), (640, 673, 689, 688), (688, 689, 672, 658), (677, 691, 687, 690), (690, 687, 604, 676), (604, 687, 686, 625), (649, 686, 687, 691), (649, 691, 1019, 1018), (677, 1020, 1019, 691), (606, 614, 672, 689), (606, 689, 673), (592, 598, 635), (593, 634, 599), (611, 617, 616), (610, 611, 616), (643, 671, 670), (616, 671, 643), (663, 660, 693, 696), (696, 693, 604, 625), (659, 663, 696, 692), (692, 696, 625, 605), (664, 662, 695, 697), (697, 695, 607, 626), (661, 664, 697, 694), (694, 697, 626, 606), (666, 659, 692, 698), (698, 692, 605, 641), (662, 666, 698, 695), (695, 698, 641, 607), (673, 640, 699), (606, 673, 699, 694), (694, 699, 665, 661), (676, 604, 693, 700), (639, 656, 702, 701), (701, 702, 651, 603), (656, 665, 703, 702), (702, 703, 660, 651), (603, 668, 701), (701, 668, 639), (660, 703, 700, 693), (706, 707, 594, 620), (706, 705, 708, 707), (705, 704, 709, 708), (704, 621, 597, 709), (620, 595, 710, 706), (705, 706, 710, 711), (704, 705, 711, 712), (621, 704, 712, 596), (597, 637, 709), (596, 712, 636), (594, 707, 634), (595, 635, 710), (637, 599, 634, 713), (637, 713, 708, 709), (707, 708, 713, 634), (635, 714, 711, 710), (712, 711, 714, 636), (635, 598, 636, 714), (1020, 677, 716, 1021), (1021, 716, 658, 1009), (688, 658, 716, 717), (717, 716, 677, 690), (640, 688, 717, 715), (715, 717, 690, 676), (699, 640, 715, 718), (718, 715, 676, 700), (718, 703, 665), (700, 703, 718), (718, 665, 699), (644, 843, 842, 647), (1023, 1024, 738, 737), (737, 738, 739, 735), (736, 740, 1026, 1025), (740, 746, 1027, 1026), (739, 738, 749, 748), (748, 749, 747, 745), (738, 1024, 1029, 749), (749, 1029, 1028, 747), (996, 750, 751, 997), (998, 752, 1031, 1030), (997, 751, 754, 1000), (750, 755, 754, 751), (1032, 1033, 755, 750), (756, 757, 727, 725), (757, 1035, 1034, 727), (766, 767, 777, 776), (776, 777, 782, 781), (777, 778, 783, 782), (779, 780, 785, 784), (780, 776, 781, 785), (771, 797, 798, 775), (775, 798, 799, 774), (774, 799, 800, 773), (773, 800, 801, 770), (768, 802, 803, 772), (772, 803, 797, 771), (770, 801, 804, 769), (769, 804, 802, 768), (804, 806, 808, 802), (801, 809, 806, 804), (803, 807, 813, 797), (802, 808, 807, 803), (800, 810, 809, 801), (799, 811, 810, 800), (798, 812, 811, 799), (797, 813, 812, 798), (805, 811, 812, 813), (805, 809, 810, 811), (805, 813, 807, 808), (805, 808, 806, 809), (820, 769, 768, 819), (790, 820, 819, 789), (821, 770, 769, 820), (791, 821, 820, 790), (823, 772, 771, 822), (793, 823, 822, 792), (819, 768, 772, 823), (789, 819, 823, 793), (824, 773, 770, 821), (794, 824, 821, 791), (825, 774, 773, 824), (795, 825, 824, 794), (826, 775, 774, 825), (796, 826, 825, 795), (822, 771, 775, 826), (792, 822, 826, 796), (908, 957, 762, 924), (835, 763, 764, 836), (836, 764, 765, 837), (839, 767, 766, 838), (996, 747, 1028, 1001), (1022, 1036, 719, 840), (840, 719, 720, 841), (648, 840, 841, 646), (844, 722, 721, 843), (850, 758, 761, 759), (721, 722, 758, 850), (911, 908, 924, 896), (851, 835, 836, 852), (852, 836, 837, 853), (853, 837, 839, 854), (854, 839, 838, 855), (745, 744, 742, 748), (862, 742, 734, 861), (917, 862, 861, 859), (748, 742, 862), (748, 862, 917), (730, 866, 1038, 1037), (728, 867, 865, 729), (1039, 1040, 867, 728), (864, 732, 860, 868), (868, 860, 916, 918), (1041, 1039, 728, 869), (1034, 1041, 869, 727), (869, 728, 729, 870), (727, 869, 870, 725), (726, 730, 1037, 1043), (871, 723, 857, 873), (732, 871, 873, 860), (873, 857, 914, 872), (860, 873, 872, 916), (876, 741, 733, 875), (742, 876, 875, 734), (877, 743, 741, 876), (744, 877, 876, 742), (1002, 999, 743, 877), (1000, 1002, 877, 744), (878, 754, 755, 879), (879, 755, 1033, 1042), (880, 863, 731, 874), (864, 880, 874, 732), (874, 731, 724, 881), (732, 874, 881, 871), (871, 881, 858, 723), (881, 724, 760, 858), (885, 740, 736, 884), (886, 746, 740, 885), (1003, 998, 746, 886), (888, 866, 730, 883), (883, 730, 726, 882), (889, 726, 1043, 1044), (890, 882, 726, 889), (898, 885, 884, 893), (894, 886, 885, 898), (1004, 1003, 886, 894), (899, 888, 883, 892), (892, 883, 882, 891), (890, 965, 891, 882), (741, 898, 893, 733), (743, 894, 898, 741), (999, 1004, 894, 743), (863, 899, 892, 731), (731, 892, 891, 724), (965, 760, 724, 891), (912, 911, 896, 905), (900, 851, 852, 901), (845, 900, 901, 846), (901, 852, 853, 902), (846, 901, 902, 847), (902, 853, 854, 903), (847, 902, 903, 848), (903, 854, 855, 904), (848, 903, 904, 849), (900, 845, 895, 905), (851, 900, 905, 896), (949, 906, 897, 962), (923, 948, 1050, 1053), (842, 923, 1053, 1054), (906, 949, 948, 923), (906, 850, 759, 897), (909, 761, 758, 910), (938, 908, 911, 939), (907, 953, 940, 912), (815, 907, 912), (912, 940, 939, 911), (913, 756, 725, 914), (739, 917, 859, 735), (748, 917, 739), (916, 729, 865, 918), (914, 725, 870, 872), (872, 870, 729, 916), (1045, 1052, 942, 920), (1036, 1045, 920, 719), (919, 720, 719, 920), (941, 919, 920, 942), (910, 919, 941, 909), (921, 722, 844, 922), (720, 921, 922, 841), (922, 844, 645, 679), (841, 922, 679, 646), (910, 921, 720, 919), (910, 758, 722, 921), (906, 923, 721, 850), (835, 924, 762, 763), (896, 924, 835, 851), (925, 926, 1048, 1047), (887, 925, 1047, 1046), (752, 887, 1046, 1031), (927, 879, 1042, 1049), (926, 927, 1049, 1048), (926, 925, 753, 927), (879, 927, 753, 878), (781, 782, 929, 928), (928, 929, 828, 827), (782, 783, 930, 929), (929, 930, 829, 828), (784, 785, 932, 931), (931, 932, 831, 830), (785, 781, 928, 932), (932, 928, 827, 831), (783, 786, 933, 930), (930, 933, 832, 829), (786, 787, 934, 933), (933, 934, 833, 832), (787, 788, 935, 934), (934, 935, 834, 833), (788, 784, 931, 935), (935, 931, 830, 834), (827, 828, 972, 973), (971, 968, 794, 791), (828, 829, 971, 972), (968, 967, 795, 794), (830, 831, 969, 970), (973, 972, 790, 789), (831, 827, 973, 969), (829, 832, 968, 971), (967, 966, 796, 795), (832, 833, 967, 968), (966, 970, 792, 796), (833, 834, 966, 967), (970, 969, 793, 792), (834, 830, 970, 966), (969, 973, 789, 793), (1050, 948, 889, 1044), (890, 889, 948, 949), (949, 962, 965, 890), (838, 766, 958, 938), (938, 939, 855, 838), (940, 953, 849, 904), (939, 940, 904, 855), (942, 1052, 1051, 960), (941, 942, 960, 959), (909, 941, 943), (943, 941, 959, 915), (765, 778, 777), (765, 767, 839, 837), (765, 777, 767), (957, 780, 779), (938, 958, 957, 908), (960, 1051, 1035, 757), (959, 960, 757, 756), (756, 913, 915, 959), (780, 957, 958), (766, 776, 780, 958), (791, 790, 972, 971), (721, 923, 842, 843), (814, 815, 912), (814, 912, 905, 895), (1038, 866, 977, 1055), (1055, 977, 736, 1025), (865, 867, 978, 976), (976, 978, 737, 735), (867, 1040, 1056, 978), (978, 1056, 1023, 737), (861, 734, 975, 979), (979, 975, 864, 868), (859, 861, 979, 982), (982, 979, 868, 918), (875, 733, 974, 980), (980, 974, 863, 880), (734, 875, 980, 975), (975, 980, 880, 864), (884, 736, 977, 981), (981, 977, 866, 888), (893, 884, 981, 983), (983, 981, 888, 899), (733, 893, 983, 974), (974, 983, 899, 863), (918, 865, 976, 982), (982, 976, 735, 859), (950, 963, 961), (961, 963, 964), (962, 964, 965), (962, 961, 964), (816, 950, 944), (816, 963, 950), (816, 955, 963), (963, 955, 964), (845, 950, 895), (895, 950, 961), (760, 964, 955), (760, 965, 964), (895, 961, 897), (897, 961, 962), (951, 936, 856), (951, 954, 936), (816, 937, 955), (816, 817, 937), (956, 937, 818), (818, 937, 817), (936, 956, 856), (856, 956, 818), (947, 953, 952), (947, 849, 953), (952, 856, 947), (952, 951, 856), (946, 947, 818), (818, 947, 856), (848, 849, 946), (946, 849, 947), (946, 847, 848), (946, 945, 847), (818, 945, 946), (818, 817, 945), (945, 846, 847), (945, 944, 846), (817, 944, 945), (817, 816, 944), (944, 845, 846), (944, 950, 845), (953, 943, 952), (952, 943, 915), (907, 943, 953), (907, 909, 943), (857, 954, 914), (857, 936, 954), (955, 858, 760), (955, 937, 858), (723, 858, 956), (956, 858, 937), (857, 723, 936), (936, 723, 956), (913, 914, 951), (951, 914, 954), (913, 952, 915), (913, 951, 952), (907, 761, 909), (907, 815, 761), (897, 759, 895), (895, 759, 814), (761, 815, 759), (759, 815, 814), (987, 787, 786, 988), (987, 988, 989, 986), (986, 989, 990, 985), (985, 990, 991, 984), (984, 991, 764, 763), (787, 987, 992, 788), (986, 993, 992, 987), (985, 994, 993, 986), (984, 995, 994, 985), (763, 762, 995, 984), (764, 991, 765), (765, 991, 990), (765, 990, 989, 778), (778, 988, 786, 783), (778, 989, 988), (779, 784, 788, 992), (779, 992, 993), (779, 993, 994, 957), (957, 994, 995), (762, 957, 995), (1010, 1022, 840, 648), (645, 844, 843, 644), (647, 842, 1054, 1016), (753, 925, 1004, 999), (925, 887, 1003, 1004), (887, 752, 998, 1003), (754, 878, 1002, 1000), (878, 753, 999, 1002), (750, 996, 1001, 1032), (745, 997, 1000, 744), (746, 998, 1030, 1027), (747, 996, 997, 745)]
     
    me = bpy.data.meshes.new("BlenRig_mdef_cage")   # create a new mesh  
     
    ob = bpy.data.objects.new("BlenRig_mdef_cage", me)          # create an object with that mesh
    ob.location[:] = (0.0, 0.0, 0.0)   # position object at 3d-cursor
    bpy.context.scene.objects.link(ob)                # Link object to scene
     
    # Fill the mesh with verts, edges, faces 
    me.from_pydata(coords,[],faces)   # edges or faces should be [], or you ask for problems
    me.update(calc_edges=True)    # Update mesh with new data

    ob.scale[:] = (0.1, 0.1, 0.1)
    ob.draw_type = 'WIRE'
    ob.show_all_edges = True
   

    # Add vertex groups

    vg = ob.vertex_groups.new("arm_def_L")
    vg.add([221],0.7138841152191162, 'REPLACE')
    vg.add([223],0.125, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.125, 'REPLACE')
    vg.add([258],0.4869636297225952, 'REPLACE')
    vg.add([259],0.125, 'REPLACE')
    vg.add([264],0.013326367363333702, 'REPLACE')
    vg.add([265],0.03163708746433258, 'REPLACE')
    vg.add([312],1.0, 'REPLACE')
    vg.add([313],1.0, 'REPLACE')
    vg.add([314],1.0, 'REPLACE')
    vg.add([315],0.9959912896156311, 'REPLACE')
    vg.add([316],1.0, 'REPLACE')
    vg.add([333],0.26490044593811035, 'REPLACE')
    vg.add([334],0.35729920864105225, 'REPLACE')
    vg.add([335],0.3240223824977875, 'REPLACE')
    vg.add([336],0.364097535610199, 'REPLACE')
    vg.add([337],0.41349706053733826, 'REPLACE')
    vg.add([343],0.9889397621154785, 'REPLACE')
    vg.add([344],0.8960533738136292, 'REPLACE')
    vg.add([345],0.7010517716407776, 'REPLACE')
    vg.add([346],0.8014441132545471, 'REPLACE')
    vg.add([347],0.9807229042053223, 'REPLACE')
    vg.add([348],0.0736117884516716, 'REPLACE')
    vg.add([349],0.543937087059021, 'REPLACE')
    vg.add([350],0.5981246829032898, 'REPLACE')
    vg.add([351],0.43063169717788696, 'REPLACE')
    vg.add([352],0.38766053318977356, 'REPLACE')
    vg.add([353],0.5485073328018188, 'REPLACE')
    vg.add([354],1.0, 'REPLACE')
    vg.add([355],0.5220248103141785, 'REPLACE')
    vg.add([356],0.4944247901439667, 'REPLACE')
    vg.add([388],0.08336415886878967, 'REPLACE')
    vg.add([393],1.0, 'REPLACE')
    vg.add([394],0.4955616295337677, 'REPLACE')
    vg.add([395],0.11507399380207062, 'REPLACE')
    vg.add([398],0.7852205038070679, 'REPLACE')
    vg.add([399],0.7405584454536438, 'REPLACE')
    vg.add([400],0.496463418006897, 'REPLACE')
    vg.add([401],0.49914631247520447, 'REPLACE')
    vg.add([402],0.8015859723091125, 'REPLACE')
    vg.add([403],0.8997085690498352, 'REPLACE')
    vg.add([404],0.08080999553203583, 'REPLACE')
    vg.add([405],1.0, 'REPLACE')
    vg.add([406],0.31898394227027893, 'REPLACE')
    vg.add([407],0.125, 'REPLACE')
    vg.add([408],0.0, 'REPLACE')
    vg.add([409],0.5107781291007996, 'REPLACE')
    vg.add([410],0.8999999761581421, 'REPLACE')
    vg.add([411],0.25, 'REPLACE')
    vg.add([412],0.3941980302333832, 'REPLACE')
    vg.add([413],0.3028261065483093, 'REPLACE')
    vg.add([422],0.250743567943573, 'REPLACE')
    vg.add([434],0.8563443422317505, 'REPLACE')
    vg.add([435],0.6625000238418579, 'REPLACE')
    vg.add([436],0.29505571722984314, 'REPLACE')
    vg.add([437],0.5635682344436646, 'REPLACE')
    vg.add([438],0.8457126617431641, 'REPLACE')
    vg.add([441],1.0, 'REPLACE')
    vg.add([442],0.9945617318153381, 'REPLACE')
    vg.add([443],0.8530157208442688, 'REPLACE')
    vg.add([444],0.956249475479126, 'REPLACE')
    vg.add([445],1.0, 'REPLACE')
    vg.add([447],0.0954471230506897, 'REPLACE')
    vg.add([448],1.0, 'REPLACE')
    vg.add([449],0.35985830426216125, 'REPLACE')
    vg.add([450],0.8943796157836914, 'REPLACE')
    vg.add([451],0.8669583797454834, 'REPLACE')
    vg.add([452],0.9357196092605591, 'REPLACE')
    vg.add([453],0.6625000238418579, 'REPLACE')
    vg.add([454],0.6625000238418579, 'REPLACE')
    vg.add([459],0.4323112666606903, 'REPLACE')
    vg.add([460],0.15024690330028534, 'REPLACE')
    vg.add([461],0.7360668778419495, 'REPLACE')
    vg.add([462],0.4466504752635956, 'REPLACE')
    vg.add([463],0.1250554919242859, 'REPLACE')
    vg = ob.vertex_groups.new("arm_def_R")
    vg.add([723],0.7138841152191162, 'REPLACE')
    vg.add([725],0.125, 'REPLACE')
    vg.add([756],0.0, 'REPLACE')
    vg.add([758],0.0, 'REPLACE')
    vg.add([759],0.125, 'REPLACE')
    vg.add([760],0.4869636297225952, 'REPLACE')
    vg.add([761],0.125, 'REPLACE')
    vg.add([766],0.013326367363333702, 'REPLACE')
    vg.add([767],0.03163708746433258, 'REPLACE')
    vg.add([814],1.0, 'REPLACE')
    vg.add([815],1.0, 'REPLACE')
    vg.add([816],1.0, 'REPLACE')
    vg.add([817],0.9959912896156311, 'REPLACE')
    vg.add([818],1.0, 'REPLACE')
    vg.add([835],0.26490044593811035, 'REPLACE')
    vg.add([836],0.35729920864105225, 'REPLACE')
    vg.add([837],0.3240223824977875, 'REPLACE')
    vg.add([838],0.364097535610199, 'REPLACE')
    vg.add([839],0.41349706053733826, 'REPLACE')
    vg.add([845],0.9889397621154785, 'REPLACE')
    vg.add([846],0.8960533738136292, 'REPLACE')
    vg.add([847],0.7010517716407776, 'REPLACE')
    vg.add([848],0.8014441132545471, 'REPLACE')
    vg.add([849],0.9807229042053223, 'REPLACE')
    vg.add([850],0.0736117884516716, 'REPLACE')
    vg.add([851],0.543937087059021, 'REPLACE')
    vg.add([852],0.5981246829032898, 'REPLACE')
    vg.add([853],0.43063169717788696, 'REPLACE')
    vg.add([854],0.38766053318977356, 'REPLACE')
    vg.add([855],0.5485073328018188, 'REPLACE')
    vg.add([856],1.0, 'REPLACE')
    vg.add([857],0.5220248103141785, 'REPLACE')
    vg.add([858],0.4944247901439667, 'REPLACE')
    vg.add([890],0.08336415886878967, 'REPLACE')
    vg.add([895],1.0, 'REPLACE')
    vg.add([896],0.4955616295337677, 'REPLACE')
    vg.add([897],0.11507399380207062, 'REPLACE')
    vg.add([900],0.7852205038070679, 'REPLACE')
    vg.add([901],0.7405584454536438, 'REPLACE')
    vg.add([902],0.496463418006897, 'REPLACE')
    vg.add([903],0.49914631247520447, 'REPLACE')
    vg.add([904],0.8015859723091125, 'REPLACE')
    vg.add([905],0.8997085690498352, 'REPLACE')
    vg.add([906],0.08080999553203583, 'REPLACE')
    vg.add([907],1.0, 'REPLACE')
    vg.add([908],0.31898394227027893, 'REPLACE')
    vg.add([909],0.125, 'REPLACE')
    vg.add([910],0.0, 'REPLACE')
    vg.add([911],0.5107781291007996, 'REPLACE')
    vg.add([912],0.8999999761581421, 'REPLACE')
    vg.add([913],0.25, 'REPLACE')
    vg.add([914],0.3941980302333832, 'REPLACE')
    vg.add([915],0.3028261065483093, 'REPLACE')
    vg.add([924],0.250743567943573, 'REPLACE')
    vg.add([936],0.8563443422317505, 'REPLACE')
    vg.add([937],0.6625000238418579, 'REPLACE')
    vg.add([938],0.29505571722984314, 'REPLACE')
    vg.add([939],0.5635682344436646, 'REPLACE')
    vg.add([940],0.8457126617431641, 'REPLACE')
    vg.add([943],1.0, 'REPLACE')
    vg.add([944],0.9945617318153381, 'REPLACE')
    vg.add([945],0.8530157208442688, 'REPLACE')
    vg.add([946],0.956249475479126, 'REPLACE')
    vg.add([947],1.0, 'REPLACE')
    vg.add([949],0.0954471230506897, 'REPLACE')
    vg.add([950],1.0, 'REPLACE')
    vg.add([951],0.35985830426216125, 'REPLACE')
    vg.add([952],0.8943796157836914, 'REPLACE')
    vg.add([953],0.8669583797454834, 'REPLACE')
    vg.add([954],0.9357196092605591, 'REPLACE')
    vg.add([955],0.6625000238418579, 'REPLACE')
    vg.add([956],0.6625000238418579, 'REPLACE')
    vg.add([961],0.4323112666606903, 'REPLACE')
    vg.add([962],0.15024690330028534, 'REPLACE')
    vg.add([963],0.7360668778419495, 'REPLACE')
    vg.add([964],0.4466504752635956, 'REPLACE')
    vg.add([965],0.1250554919242859, 'REPLACE')
    vg = ob.vertex_groups.new("arm_fix_L")
    vg.add([115],0.0, 'REPLACE')
    vg.add([124],0.0, 'REPLACE')
    vg.add([129],0.0, 'REPLACE')
    vg.add([131],0.0, 'REPLACE')
    vg.add([195],0.0, 'REPLACE')
    vg.add([263],0.20865482091903687, 'REPLACE')
    vg.add([264],0.5, 'REPLACE')
    vg.add([265],0.21815770864486694, 'REPLACE')
    vg.add([274],0.75, 'REPLACE')
    vg.add([275],0.75, 'REPLACE')
    vg.add([276],0.3453787565231323, 'REPLACE')
    vg.add([277],0.49473801255226135, 'REPLACE')
    vg.add([278],0.75, 'REPLACE')
    vg.add([279],0.33629682660102844, 'REPLACE')
    vg.add([280],0.4151972830295563, 'REPLACE')
    vg.add([281],0.11448011547327042, 'REPLACE')
    vg.add([282],0.29029589891433716, 'REPLACE')
    vg.add([283],0.4158620834350586, 'REPLACE')
    vg.add([334],0.0, 'REPLACE')
    vg.add([335],0.05238889157772064, 'REPLACE')
    vg.add([336],0.04913656786084175, 'REPLACE')
    vg.add([337],0.08745691180229187, 'REPLACE')
    vg.add([352],0.0, 'REPLACE')
    vg.add([353],0.0, 'REPLACE')
    vg.add([406],0.031255315989255905, 'REPLACE')
    vg.add([426],0.0, 'REPLACE')
    vg.add([427],0.0, 'REPLACE')
    vg.add([428],0.0, 'REPLACE')
    vg.add([430],0.0, 'REPLACE')
    vg.add([431],0.0, 'REPLACE')
    vg.add([432],0.0, 'REPLACE')
    vg.add([433],0.0, 'REPLACE')
    vg.add([436],0.05357341468334198, 'REPLACE')
    vg.add([455],0.19013823568820953, 'REPLACE')
    vg.add([456],0.20462608337402344, 'REPLACE')
    vg = ob.vertex_groups.new("arm_fix_R")
    vg.add([617],0.0, 'REPLACE')
    vg.add([626],0.0, 'REPLACE')
    vg.add([631],0.0, 'REPLACE')
    vg.add([633],0.0, 'REPLACE')
    vg.add([697],0.0, 'REPLACE')
    vg.add([765],0.20865482091903687, 'REPLACE')
    vg.add([766],0.5, 'REPLACE')
    vg.add([767],0.21815770864486694, 'REPLACE')
    vg.add([776],0.75, 'REPLACE')
    vg.add([777],0.75, 'REPLACE')
    vg.add([778],0.3453787565231323, 'REPLACE')
    vg.add([779],0.49473801255226135, 'REPLACE')
    vg.add([780],0.75, 'REPLACE')
    vg.add([781],0.33629682660102844, 'REPLACE')
    vg.add([782],0.4151972830295563, 'REPLACE')
    vg.add([783],0.11448011547327042, 'REPLACE')
    vg.add([784],0.29029589891433716, 'REPLACE')
    vg.add([785],0.4158620834350586, 'REPLACE')
    vg.add([836],0.0, 'REPLACE')
    vg.add([837],0.05238889157772064, 'REPLACE')
    vg.add([838],0.04913656786084175, 'REPLACE')
    vg.add([839],0.08745691180229187, 'REPLACE')
    vg.add([854],0.0, 'REPLACE')
    vg.add([855],0.0, 'REPLACE')
    vg.add([908],0.031255315989255905, 'REPLACE')
    vg.add([928],0.0, 'REPLACE')
    vg.add([929],0.0, 'REPLACE')
    vg.add([930],0.0, 'REPLACE')
    vg.add([932],0.0, 'REPLACE')
    vg.add([933],0.0, 'REPLACE')
    vg.add([934],0.0, 'REPLACE')
    vg.add([935],0.0, 'REPLACE')
    vg.add([938],0.05357341468334198, 'REPLACE')
    vg.add([957],0.19013823568820953, 'REPLACE')
    vg.add([958],0.20462608337402344, 'REPLACE')
    vg = ob.vertex_groups.new("arm_twist_def_L")
    vg.add([260],0.9881752133369446, 'REPLACE')
    vg.add([261],0.9964889883995056, 'REPLACE')
    vg.add([262],0.9975770115852356, 'REPLACE')
    vg.add([263],1.0, 'REPLACE')
    vg.add([264],1.0, 'REPLACE')
    vg.add([265],1.0, 'REPLACE')
    vg.add([274],0.75, 'REPLACE')
    vg.add([275],0.75, 'REPLACE')
    vg.add([276],1.0, 'REPLACE')
    vg.add([277],1.0, 'REPLACE')
    vg.add([278],0.75, 'REPLACE')
    vg.add([279],0.21095719933509827, 'REPLACE')
    vg.add([280],0.13553661108016968, 'REPLACE')
    vg.add([282],0.10000000149011612, 'REPLACE')
    vg.add([283],0.1780380755662918, 'REPLACE')
    vg.add([312],0.0, 'REPLACE')
    vg.add([313],0.0, 'REPLACE')
    vg.add([314],0.0, 'REPLACE')
    vg.add([315],0.0, 'REPLACE')
    vg.add([316],0.0, 'REPLACE')
    vg.add([333],0.8992148637771606, 'REPLACE')
    vg.add([334],0.8451185822486877, 'REPLACE')
    vg.add([335],0.8643268346786499, 'REPLACE')
    vg.add([336],0.887498676776886, 'REPLACE')
    vg.add([337],0.8507974743843079, 'REPLACE')
    vg.add([343],0.0, 'REPLACE')
    vg.add([344],0.0, 'REPLACE')
    vg.add([345],0.0, 'REPLACE')
    vg.add([346],0.0, 'REPLACE')
    vg.add([347],0.0, 'REPLACE')
    vg.add([349],0.7813159227371216, 'REPLACE')
    vg.add([350],0.565295934677124, 'REPLACE')
    vg.add([351],0.7791486978530884, 'REPLACE')
    vg.add([352],0.5237818360328674, 'REPLACE')
    vg.add([353],0.6435718536376953, 'REPLACE')
    vg.add([354],0.0, 'REPLACE')
    vg.add([394],0.7601168751716614, 'REPLACE')
    vg.add([398],0.125, 'REPLACE')
    vg.add([399],0.125, 'REPLACE')
    vg.add([400],0.125, 'REPLACE')
    vg.add([401],0.125, 'REPLACE')
    vg.add([402],0.125, 'REPLACE')
    vg.add([403],0.25, 'REPLACE')
    vg.add([405],0.0, 'REPLACE')
    vg.add([406],0.7900294661521912, 'REPLACE')
    vg.add([409],0.6908986568450928, 'REPLACE')
    vg.add([410],0.25, 'REPLACE')
    vg.add([422],0.8999900221824646, 'REPLACE')
    vg.add([436],0.7780669927597046, 'REPLACE')
    vg.add([437],0.5481563210487366, 'REPLACE')
    vg.add([438],0.125, 'REPLACE')
    vg.add([441],0.0, 'REPLACE')
    vg.add([442],0.0, 'REPLACE')
    vg.add([443],0.0, 'REPLACE')
    vg.add([444],0.0, 'REPLACE')
    vg.add([445],0.0, 'REPLACE')
    vg.add([451],0.0, 'REPLACE')
    vg.add([455],1.0, 'REPLACE')
    vg.add([456],0.9940711259841919, 'REPLACE')
    vg.add([482],1.0, 'REPLACE')
    vg.add([483],1.0, 'REPLACE')
    vg.add([484],0.5, 'REPLACE')
    vg.add([485],0.25, 'REPLACE')
    vg.add([486],0.25, 'REPLACE')
    vg.add([487],0.5, 'REPLACE')
    vg.add([488],0.9939423203468323, 'REPLACE')
    vg.add([489],1.0, 'REPLACE')
    vg.add([490],0.25, 'REPLACE')
    vg.add([491],0.5, 'REPLACE')
    vg.add([492],0.999998927116394, 'REPLACE')
    vg.add([493],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("arm_twist_def_R")
    vg.add([762],0.9881752133369446, 'REPLACE')
    vg.add([763],0.9964889883995056, 'REPLACE')
    vg.add([764],0.9975770115852356, 'REPLACE')
    vg.add([765],1.0, 'REPLACE')
    vg.add([766],1.0, 'REPLACE')
    vg.add([767],1.0, 'REPLACE')
    vg.add([776],0.75, 'REPLACE')
    vg.add([777],0.75, 'REPLACE')
    vg.add([778],1.0, 'REPLACE')
    vg.add([779],1.0, 'REPLACE')
    vg.add([780],0.75, 'REPLACE')
    vg.add([781],0.21095719933509827, 'REPLACE')
    vg.add([782],0.13553661108016968, 'REPLACE')
    vg.add([784],0.10000000149011612, 'REPLACE')
    vg.add([785],0.1780380755662918, 'REPLACE')
    vg.add([814],0.0, 'REPLACE')
    vg.add([815],0.0, 'REPLACE')
    vg.add([816],0.0, 'REPLACE')
    vg.add([817],0.0, 'REPLACE')
    vg.add([818],0.0, 'REPLACE')
    vg.add([835],0.8992148637771606, 'REPLACE')
    vg.add([836],0.8451185822486877, 'REPLACE')
    vg.add([837],0.8643268346786499, 'REPLACE')
    vg.add([838],0.887498676776886, 'REPLACE')
    vg.add([839],0.8507974743843079, 'REPLACE')
    vg.add([845],0.0, 'REPLACE')
    vg.add([846],0.0, 'REPLACE')
    vg.add([847],0.0, 'REPLACE')
    vg.add([848],0.0, 'REPLACE')
    vg.add([849],0.0, 'REPLACE')
    vg.add([851],0.7813159227371216, 'REPLACE')
    vg.add([852],0.565295934677124, 'REPLACE')
    vg.add([853],0.7791486978530884, 'REPLACE')
    vg.add([854],0.5237818360328674, 'REPLACE')
    vg.add([855],0.6435718536376953, 'REPLACE')
    vg.add([856],0.0, 'REPLACE')
    vg.add([896],0.7601168751716614, 'REPLACE')
    vg.add([900],0.125, 'REPLACE')
    vg.add([901],0.125, 'REPLACE')
    vg.add([902],0.125, 'REPLACE')
    vg.add([903],0.125, 'REPLACE')
    vg.add([904],0.125, 'REPLACE')
    vg.add([905],0.25, 'REPLACE')
    vg.add([907],0.0, 'REPLACE')
    vg.add([908],0.7900294661521912, 'REPLACE')
    vg.add([911],0.6908986568450928, 'REPLACE')
    vg.add([912],0.25, 'REPLACE')
    vg.add([924],0.8999900221824646, 'REPLACE')
    vg.add([938],0.7780669927597046, 'REPLACE')
    vg.add([939],0.5481563210487366, 'REPLACE')
    vg.add([940],0.125, 'REPLACE')
    vg.add([943],0.0, 'REPLACE')
    vg.add([944],0.0, 'REPLACE')
    vg.add([945],0.0, 'REPLACE')
    vg.add([946],0.0, 'REPLACE')
    vg.add([947],0.0, 'REPLACE')
    vg.add([953],0.0, 'REPLACE')
    vg.add([957],1.0, 'REPLACE')
    vg.add([958],0.9940711259841919, 'REPLACE')
    vg.add([984],1.0, 'REPLACE')
    vg.add([985],1.0, 'REPLACE')
    vg.add([986],0.5, 'REPLACE')
    vg.add([987],0.25, 'REPLACE')
    vg.add([988],0.25, 'REPLACE')
    vg.add([989],0.5, 'REPLACE')
    vg.add([990],0.9939423203468323, 'REPLACE')
    vg.add([991],1.0, 'REPLACE')
    vg.add([992],0.25, 'REPLACE')
    vg.add([993],0.5, 'REPLACE')
    vg.add([994],0.999998927116394, 'REPLACE')
    vg.add([995],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("back_fix_L")
    vg.add([219],0.25, 'REPLACE')
    vg.add([220],0.1495194137096405, 'REPLACE')
    vg.add([222],0.09390650689601898, 'REPLACE')
    vg.add([256],0.4339802861213684, 'REPLACE')
    vg.add([257],0.5, 'REPLACE')
    vg.add([258],0.06585630774497986, 'REPLACE')
    vg.add([259],0.3524281680583954, 'REPLACE')
    vg.add([312],0.2899332642555237, 'REPLACE')
    vg.add([313],0.06293733417987823, 'REPLACE')
    vg.add([314],0.1603691279888153, 'REPLACE')
    vg.add([343],0.4890076220035553, 'REPLACE')
    vg.add([348],0.5606431365013123, 'REPLACE')
    vg.add([380],0.07042987644672394, 'REPLACE')
    vg.add([388],0.1675909012556076, 'REPLACE')
    vg.add([389],0.08510276675224304, 'REPLACE')
    vg.add([393],0.8703254461288452, 'REPLACE')
    vg.add([395],0.6008279919624329, 'REPLACE')
    vg.add([404],0.5, 'REPLACE')
    vg.add([421],0.0625, 'REPLACE')
    vg.add([447],0.30111977458000183, 'REPLACE')
    vg.add([448],0.39294156432151794, 'REPLACE')
    vg.add([453],0.19152680039405823, 'REPLACE')
    vg.add([459],0.7255127429962158, 'REPLACE')
    vg.add([460],0.4970935583114624, 'REPLACE')
    vg.add([461],0.45646217465400696, 'REPLACE')
    vg.add([462],0.39160794019699097, 'REPLACE')
    vg.add([463],0.15837711095809937, 'REPLACE')
    vg = ob.vertex_groups.new("back_fix_R")
    vg.add([721],0.25, 'REPLACE')
    vg.add([722],0.1495194137096405, 'REPLACE')
    vg.add([724],0.09390650689601898, 'REPLACE')
    vg.add([758],0.4339802861213684, 'REPLACE')
    vg.add([759],0.5, 'REPLACE')
    vg.add([760],0.06585630774497986, 'REPLACE')
    vg.add([761],0.3524281680583954, 'REPLACE')
    vg.add([814],0.2899332642555237, 'REPLACE')
    vg.add([815],0.06293733417987823, 'REPLACE')
    vg.add([816],0.1603691279888153, 'REPLACE')
    vg.add([845],0.4890076220035553, 'REPLACE')
    vg.add([850],0.5606431365013123, 'REPLACE')
    vg.add([882],0.07042987644672394, 'REPLACE')
    vg.add([890],0.1675909012556076, 'REPLACE')
    vg.add([891],0.08510276675224304, 'REPLACE')
    vg.add([895],0.8703254461288452, 'REPLACE')
    vg.add([897],0.6008279919624329, 'REPLACE')
    vg.add([906],0.5, 'REPLACE')
    vg.add([923],0.0625, 'REPLACE')
    vg.add([949],0.30111977458000183, 'REPLACE')
    vg.add([950],0.39294156432151794, 'REPLACE')
    vg.add([955],0.19152680039405823, 'REPLACE')
    vg.add([961],0.7255127429962158, 'REPLACE')
    vg.add([962],0.4970935583114624, 'REPLACE')
    vg.add([963],0.45646217465400696, 'REPLACE')
    vg.add([964],0.39160794019699097, 'REPLACE')
    vg.add([965],0.15837711095809937, 'REPLACE')
    vg = ob.vertex_groups.new("buttock_def_L")
    vg.add([104],0.5366970300674438, 'REPLACE')
    vg.add([105],0.5001777410507202, 'REPLACE')
    vg.add([108],0.10000000149011612, 'REPLACE')
    vg.add([109],0.3182961046695709, 'REPLACE')
    vg.add([110],0.5, 'REPLACE')
    vg.add([111],0.5375819206237793, 'REPLACE')
    vg.add([112],0.8772997260093689, 'REPLACE')
    vg.add([114],0.25, 'REPLACE')
    vg.add([115],0.4063723683357239, 'REPLACE')
    vg.add([116],0.6000000238418579, 'REPLACE')
    vg.add([124],0.710250735282898, 'REPLACE')
    vg.add([127],0.10000000149011612, 'REPLACE')
    vg.add([128],0.5, 'REPLACE')
    vg.add([129],0.7815650701522827, 'REPLACE')
    vg.add([131],0.6000000238418579, 'REPLACE')
    vg.add([138],0.22713084518909454, 'REPLACE')
    vg.add([151],0.00602101581171155, 'REPLACE')
    vg.add([153],0.018226832151412964, 'REPLACE')
    vg.add([159],0.125, 'REPLACE')
    vg.add([160],0.0, 'REPLACE')
    vg.add([162],0.125, 'REPLACE')
    vg.add([163],0.125, 'REPLACE')
    vg.add([164],0.0010078786872327328, 'REPLACE')
    vg.add([169],0.10000000149011612, 'REPLACE')
    vg.add([170],0.5629438757896423, 'REPLACE')
    vg.add([171],0.5134240388870239, 'REPLACE')
    vg.add([172],0.6000000238418579, 'REPLACE')
    vg.add([173],0.5, 'REPLACE')
    vg.add([174],0.03637995198369026, 'REPLACE')
    vg.add([181],0.10000000149011612, 'REPLACE')
    vg.add([182],0.24390318989753723, 'REPLACE')
    vg.add([183],0.298267662525177, 'REPLACE')
    vg.add([186],0.22736221551895142, 'REPLACE')
    vg.add([187],0.4902835488319397, 'REPLACE')
    vg.add([192],0.25, 'REPLACE')
    vg.add([193],0.6008415818214417, 'REPLACE')
    vg.add([195],0.7352047562599182, 'REPLACE')
    vg.add([197],0.25, 'REPLACE')
    vg.add([213],0.13175539672374725, 'REPLACE')
    vg.add([215],0.11368110775947571, 'REPLACE')
    vg.add([216],0.03841665759682655, 'REPLACE')
    vg.add([1013],0.034513067454099655, 'REPLACE')
    vg = ob.vertex_groups.new("buttock_def_R")
    vg.add([606],0.5366970300674438, 'REPLACE')
    vg.add([607],0.5001777410507202, 'REPLACE')
    vg.add([610],0.10000000149011612, 'REPLACE')
    vg.add([611],0.3182961046695709, 'REPLACE')
    vg.add([612],0.5, 'REPLACE')
    vg.add([613],0.5375819206237793, 'REPLACE')
    vg.add([614],0.8772997260093689, 'REPLACE')
    vg.add([616],0.25, 'REPLACE')
    vg.add([617],0.4063723683357239, 'REPLACE')
    vg.add([618],0.6000000238418579, 'REPLACE')
    vg.add([626],0.710250735282898, 'REPLACE')
    vg.add([629],0.10000000149011612, 'REPLACE')
    vg.add([630],0.5, 'REPLACE')
    vg.add([631],0.7815650701522827, 'REPLACE')
    vg.add([633],0.6000000238418579, 'REPLACE')
    vg.add([640],0.22713084518909454, 'REPLACE')
    vg.add([653],0.00602101581171155, 'REPLACE')
    vg.add([655],0.018226832151412964, 'REPLACE')
    vg.add([661],0.125, 'REPLACE')
    vg.add([662],0.0, 'REPLACE')
    vg.add([664],0.125, 'REPLACE')
    vg.add([665],0.125, 'REPLACE')
    vg.add([666],0.0010078786872327328, 'REPLACE')
    vg.add([671],0.10000000149011612, 'REPLACE')
    vg.add([672],0.5629438757896423, 'REPLACE')
    vg.add([673],0.5134240388870239, 'REPLACE')
    vg.add([674],0.6000000238418579, 'REPLACE')
    vg.add([675],0.5, 'REPLACE')
    vg.add([676],0.03637995198369026, 'REPLACE')
    vg.add([683],0.10000000149011612, 'REPLACE')
    vg.add([684],0.24390318989753723, 'REPLACE')
    vg.add([685],0.298267662525177, 'REPLACE')
    vg.add([688],0.22736221551895142, 'REPLACE')
    vg.add([689],0.4902835488319397, 'REPLACE')
    vg.add([694],0.25, 'REPLACE')
    vg.add([695],0.6008415818214417, 'REPLACE')
    vg.add([697],0.7352047562599182, 'REPLACE')
    vg.add([699],0.25, 'REPLACE')
    vg.add([715],0.13175539672374725, 'REPLACE')
    vg.add([717],0.11368110775947571, 'REPLACE')
    vg.add([718],0.03841665759682655, 'REPLACE')
    vg.add([1013],0.034513067454099655, 'REPLACE')
    vg = ob.vertex_groups.new("chest_fix_L")
    vg.add([217],0.031822558492422104, 'REPLACE')
    vg.add([218],0.06021327152848244, 'REPLACE')
    vg.add([221],0.10452363640069962, 'REPLACE')
    vg.add([223],0.11726546287536621, 'REPLACE')
    vg.add([225],0.10041548311710358, 'REPLACE')
    vg.add([243],0.0, 'REPLACE')
    vg.add([254],0.2028072625398636, 'REPLACE')
    vg.add([255],0.14088164269924164, 'REPLACE')
    vg.add([313],0.10000000149011612, 'REPLACE')
    vg.add([316],0.15518352389335632, 'REPLACE')
    vg.add([347],0.07291563600301743, 'REPLACE')
    vg.add([354],0.2199707329273224, 'REPLACE')
    vg.add([355],0.24459515511989594, 'REPLACE')
    vg.add([370],0.07179845869541168, 'REPLACE')
    vg.add([371],0.03125, 'REPLACE')
    vg.add([405],0.05068199709057808, 'REPLACE')
    vg.add([407],0.20819354057312012, 'REPLACE')
    vg.add([408],0.13135036826133728, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([411],0.2903667390346527, 'REPLACE')
    vg.add([412],0.2894693911075592, 'REPLACE')
    vg.add([413],0.1911240816116333, 'REPLACE')
    vg.add([417],0.14775578677654266, 'REPLACE')
    vg.add([418],0.07337716966867447, 'REPLACE')
    vg.add([434],0.20154905319213867, 'REPLACE')
    vg.add([438],0.10926568508148193, 'REPLACE')
    vg.add([439],0.29160016775131226, 'REPLACE')
    vg.add([440],0.15311065316200256, 'REPLACE')
    vg.add([441],0.4378904402256012, 'REPLACE')
    vg.add([444],0.18448755145072937, 'REPLACE')
    vg.add([445],0.10391494631767273, 'REPLACE')
    vg.add([449],0.06401549279689789, 'REPLACE')
    vg.add([450],0.2144717276096344, 'REPLACE')
    vg.add([451],0.2368983030319214, 'REPLACE')
    vg.add([452],0.3563021421432495, 'REPLACE')
    vg.add([454],0.052449680864810944, 'REPLACE')
    vg.add([457],0.23343545198440552, 'REPLACE')
    vg.add([458],0.16484618186950684, 'REPLACE')
    vg = ob.vertex_groups.new("chest_fix_R")
    vg.add([719],0.031822558492422104, 'REPLACE')
    vg.add([720],0.06021327152848244, 'REPLACE')
    vg.add([723],0.10452363640069962, 'REPLACE')
    vg.add([725],0.11726546287536621, 'REPLACE')
    vg.add([727],0.10041548311710358, 'REPLACE')
    vg.add([745],0.0, 'REPLACE')
    vg.add([756],0.2028072625398636, 'REPLACE')
    vg.add([757],0.14088164269924164, 'REPLACE')
    vg.add([815],0.10000000149011612, 'REPLACE')
    vg.add([818],0.15518352389335632, 'REPLACE')
    vg.add([849],0.07291563600301743, 'REPLACE')
    vg.add([856],0.2199707329273224, 'REPLACE')
    vg.add([857],0.24459515511989594, 'REPLACE')
    vg.add([872],0.07179845869541168, 'REPLACE')
    vg.add([873],0.03125, 'REPLACE')
    vg.add([907],0.05068199709057808, 'REPLACE')
    vg.add([909],0.20819354057312012, 'REPLACE')
    vg.add([910],0.13135036826133728, 'REPLACE')
    vg.add([912],0.0, 'REPLACE')
    vg.add([913],0.2903667390346527, 'REPLACE')
    vg.add([914],0.2894693911075592, 'REPLACE')
    vg.add([915],0.1911240816116333, 'REPLACE')
    vg.add([919],0.14775578677654266, 'REPLACE')
    vg.add([920],0.07337716966867447, 'REPLACE')
    vg.add([936],0.20154905319213867, 'REPLACE')
    vg.add([940],0.10926568508148193, 'REPLACE')
    vg.add([941],0.29160016775131226, 'REPLACE')
    vg.add([942],0.15311065316200256, 'REPLACE')
    vg.add([943],0.4378904402256012, 'REPLACE')
    vg.add([946],0.18448755145072937, 'REPLACE')
    vg.add([947],0.10391494631767273, 'REPLACE')
    vg.add([951],0.06401549279689789, 'REPLACE')
    vg.add([952],0.2144717276096344, 'REPLACE')
    vg.add([953],0.2368983030319214, 'REPLACE')
    vg.add([954],0.3563021421432495, 'REPLACE')
    vg.add([956],0.052449680864810944, 'REPLACE')
    vg.add([959],0.23343545198440552, 'REPLACE')
    vg.add([960],0.16484618186950684, 'REPLACE')
    vg = ob.vertex_groups.new("clavi_def_L")
    vg.add([219],0.11831724643707275, 'REPLACE')
    vg.add([220],0.07673152536153793, 'REPLACE')
    vg.add([221],0.7818756103515625, 'REPLACE')
    vg.add([222],0.25, 'REPLACE')
    vg.add([223],0.4639454483985901, 'REPLACE')
    vg.add([224],0.125, 'REPLACE')
    vg.add([226],0.10000000149011612, 'REPLACE')
    vg.add([227],0.10000000149011612, 'REPLACE')
    vg.add([228],0.10000000149011612, 'REPLACE')
    vg.add([229],0.10000000149011612, 'REPLACE')
    vg.add([230],0.10000000149011612, 'REPLACE')
    vg.add([254],0.25, 'REPLACE')
    vg.add([256],0.125, 'REPLACE')
    vg.add([257],0.125, 'REPLACE')
    vg.add([258],1.0, 'REPLACE')
    vg.add([259],0.125, 'REPLACE')
    vg.add([312],0.125, 'REPLACE')
    vg.add([313],0.125, 'REPLACE')
    vg.add([314],0.21374405920505524, 'REPLACE')
    vg.add([315],0.10978724807500839, 'REPLACE')
    vg.add([316],0.06772428750991821, 'REPLACE')
    vg.add([340],0.05686274543404579, 'REPLACE')
    vg.add([348],0.125, 'REPLACE')
    vg.add([354],0.5056127309799194, 'REPLACE')
    vg.add([355],1.0, 'REPLACE')
    vg.add([356],0.5510380864143372, 'REPLACE')
    vg.add([358],0.10000000149011612, 'REPLACE')
    vg.add([367],0.14721396565437317, 'REPLACE')
    vg.add([368],0.22842733561992645, 'REPLACE')
    vg.add([369],0.25, 'REPLACE')
    vg.add([370],0.25, 'REPLACE')
    vg.add([371],0.25, 'REPLACE')
    vg.add([372],0.10000000149011612, 'REPLACE')
    vg.add([379],0.25, 'REPLACE')
    vg.add([380],0.25, 'REPLACE')
    vg.add([381],0.10000000149011612, 'REPLACE')
    vg.add([387],0.5, 'REPLACE')
    vg.add([388],0.9697672128677368, 'REPLACE')
    vg.add([389],0.25, 'REPLACE')
    vg.add([390],0.10000000149011612, 'REPLACE')
    vg.add([393],0.3258867859840393, 'REPLACE')
    vg.add([395],0.38953810930252075, 'REPLACE')
    vg.add([404],0.4850434362888336, 'REPLACE')
    vg.add([405],0.125, 'REPLACE')
    vg.add([407],0.15062840282917023, 'REPLACE')
    vg.add([411],0.25, 'REPLACE')
    vg.add([412],0.9927568435668945, 'REPLACE')
    vg.add([413],0.25, 'REPLACE')
    vg.add([414],0.10000000149011612, 'REPLACE')
    vg.add([421],0.1757768988609314, 'REPLACE')
    vg.add([434],0.8307334780693054, 'REPLACE')
    vg.add([435],0.3015343248844147, 'REPLACE')
    vg.add([441],0.07983878254890442, 'REPLACE')
    vg.add([445],0.4966127872467041, 'REPLACE')
    vg.add([446],0.5, 'REPLACE')
    vg.add([447],0.6877305507659912, 'REPLACE')
    vg.add([448],0.12470162659883499, 'REPLACE')
    vg.add([449],0.45396602153778076, 'REPLACE')
    vg.add([450],0.25, 'REPLACE')
    vg.add([451],0.25, 'REPLACE')
    vg.add([452],0.8762852549552917, 'REPLACE')
    vg.add([453],0.6875, 'REPLACE')
    vg.add([454],0.2951805591583252, 'REPLACE')
    vg.add([459],0.5120225548744202, 'REPLACE')
    vg.add([460],0.7602077722549438, 'REPLACE')
    vg.add([461],0.25, 'REPLACE')
    vg.add([462],0.633829653263092, 'REPLACE')
    vg.add([463],0.7391532063484192, 'REPLACE')
    vg = ob.vertex_groups.new("clavi_def_R")
    vg.add([721],0.11831724643707275, 'REPLACE')
    vg.add([722],0.07673152536153793, 'REPLACE')
    vg.add([723],0.7818756103515625, 'REPLACE')
    vg.add([724],0.25, 'REPLACE')
    vg.add([725],0.4639454483985901, 'REPLACE')
    vg.add([726],0.125, 'REPLACE')
    vg.add([728],0.10000000149011612, 'REPLACE')
    vg.add([729],0.10000000149011612, 'REPLACE')
    vg.add([730],0.10000000149011612, 'REPLACE')
    vg.add([731],0.10000000149011612, 'REPLACE')
    vg.add([732],0.10000000149011612, 'REPLACE')
    vg.add([756],0.25, 'REPLACE')
    vg.add([758],0.125, 'REPLACE')
    vg.add([759],0.125, 'REPLACE')
    vg.add([760],1.0, 'REPLACE')
    vg.add([761],0.125, 'REPLACE')
    vg.add([814],0.125, 'REPLACE')
    vg.add([815],0.125, 'REPLACE')
    vg.add([816],0.21374405920505524, 'REPLACE')
    vg.add([817],0.10978724807500839, 'REPLACE')
    vg.add([818],0.06772428750991821, 'REPLACE')
    vg.add([842],0.05686274543404579, 'REPLACE')
    vg.add([850],0.125, 'REPLACE')
    vg.add([856],0.5056127309799194, 'REPLACE')
    vg.add([857],1.0, 'REPLACE')
    vg.add([858],0.5510380864143372, 'REPLACE')
    vg.add([860],0.10000000149011612, 'REPLACE')
    vg.add([869],0.14721396565437317, 'REPLACE')
    vg.add([870],0.22842733561992645, 'REPLACE')
    vg.add([871],0.25, 'REPLACE')
    vg.add([872],0.25, 'REPLACE')
    vg.add([873],0.25, 'REPLACE')
    vg.add([874],0.10000000149011612, 'REPLACE')
    vg.add([881],0.25, 'REPLACE')
    vg.add([882],0.25, 'REPLACE')
    vg.add([883],0.10000000149011612, 'REPLACE')
    vg.add([889],0.5, 'REPLACE')
    vg.add([890],0.9697672128677368, 'REPLACE')
    vg.add([891],0.25, 'REPLACE')
    vg.add([892],0.10000000149011612, 'REPLACE')
    vg.add([895],0.3258867859840393, 'REPLACE')
    vg.add([897],0.38953810930252075, 'REPLACE')
    vg.add([906],0.4850434362888336, 'REPLACE')
    vg.add([907],0.125, 'REPLACE')
    vg.add([909],0.15062840282917023, 'REPLACE')
    vg.add([913],0.25, 'REPLACE')
    vg.add([914],0.9927568435668945, 'REPLACE')
    vg.add([915],0.25, 'REPLACE')
    vg.add([916],0.10000000149011612, 'REPLACE')
    vg.add([923],0.1757768988609314, 'REPLACE')
    vg.add([936],0.8307334780693054, 'REPLACE')
    vg.add([937],0.3015343248844147, 'REPLACE')
    vg.add([943],0.07983878254890442, 'REPLACE')
    vg.add([947],0.4966127872467041, 'REPLACE')
    vg.add([948],0.5, 'REPLACE')
    vg.add([949],0.6877305507659912, 'REPLACE')
    vg.add([950],0.12470162659883499, 'REPLACE')
    vg.add([951],0.45396602153778076, 'REPLACE')
    vg.add([952],0.25, 'REPLACE')
    vg.add([953],0.25, 'REPLACE')
    vg.add([954],0.8762852549552917, 'REPLACE')
    vg.add([955],0.6875, 'REPLACE')
    vg.add([956],0.2951805591583252, 'REPLACE')
    vg.add([961],0.5120225548744202, 'REPLACE')
    vg.add([962],0.7602077722549438, 'REPLACE')
    vg.add([963],0.25, 'REPLACE')
    vg.add([964],0.633829653263092, 'REPLACE')
    vg.add([965],0.7391532063484192, 'REPLACE')
    vg = ob.vertex_groups.new("elbow_fix_L")
    vg.add([276],0.07607897371053696, 'REPLACE')
    vg.add([284],0.125, 'REPLACE')
    vg.add([285],0.125, 'REPLACE')
    vg.add([286],0.125, 'REPLACE')
    vg.add([325],0.0, 'REPLACE')
    vg.add([426],0.0, 'REPLACE')
    vg.add([427],0.0, 'REPLACE')
    vg.add([428],0.0, 'REPLACE')
    vg.add([429],0.0, 'REPLACE')
    vg.add([430],0.0, 'REPLACE')
    vg.add([431],0.0, 'REPLACE')
    vg.add([432],0.0, 'REPLACE')
    vg.add([433],0.0, 'REPLACE')
    vg.add([482],0.06810416281223297, 'REPLACE')
    vg.add([483],0.7878448963165283, 'REPLACE')
    vg.add([484],0.969931960105896, 'REPLACE')
    vg.add([485],0.25, 'REPLACE')
    vg.add([486],0.25, 'REPLACE')
    vg.add([487],0.9407846927642822, 'REPLACE')
    vg.add([488],0.9152816534042358, 'REPLACE')
    vg.add([489],0.08104349672794342, 'REPLACE')
    vg.add([490],0.25, 'REPLACE')
    vg.add([491],0.9998356699943542, 'REPLACE')
    vg.add([492],0.8766515254974365, 'REPLACE')
    vg.add([493],0.05697045475244522, 'REPLACE')
    vg = ob.vertex_groups.new("elbow_fix_R")
    vg.add([778],0.07607897371053696, 'REPLACE')
    vg.add([786],0.125, 'REPLACE')
    vg.add([787],0.125, 'REPLACE')
    vg.add([788],0.125, 'REPLACE')
    vg.add([827],0.0, 'REPLACE')
    vg.add([928],0.0, 'REPLACE')
    vg.add([929],0.0, 'REPLACE')
    vg.add([930],0.0, 'REPLACE')
    vg.add([931],0.0, 'REPLACE')
    vg.add([932],0.0, 'REPLACE')
    vg.add([933],0.0, 'REPLACE')
    vg.add([934],0.0, 'REPLACE')
    vg.add([935],0.0, 'REPLACE')
    vg.add([984],0.06810416281223297, 'REPLACE')
    vg.add([985],0.7878448963165283, 'REPLACE')
    vg.add([986],0.969931960105896, 'REPLACE')
    vg.add([987],0.25, 'REPLACE')
    vg.add([988],0.25, 'REPLACE')
    vg.add([989],0.9407846927642822, 'REPLACE')
    vg.add([990],0.9152816534042358, 'REPLACE')
    vg.add([991],0.08104349672794342, 'REPLACE')
    vg.add([992],0.25, 'REPLACE')
    vg.add([993],0.9998356699943542, 'REPLACE')
    vg.add([994],0.8766515254974365, 'REPLACE')
    vg.add([995],0.05697045475244522, 'REPLACE')
    vg = ob.vertex_groups.new("foot_def_L")
    vg.add([0],1.0, 'REPLACE')
    vg.add([3],1.0, 'REPLACE')
    vg.add([4],0.5, 'REPLACE')
    vg.add([7],0.5, 'REPLACE')
    vg.add([8],1.0, 'REPLACE')
    vg.add([9],1.0, 'REPLACE')
    vg.add([10],1.0, 'REPLACE')
    vg.add([11],1.0, 'REPLACE')
    vg.add([12],0.25, 'REPLACE')
    vg.add([13],0.25, 'REPLACE')
    vg.add([14],0.1696980595588684, 'REPLACE')
    vg.add([15],0.25, 'REPLACE')
    vg.add([16],1.0, 'REPLACE')
    vg.add([17],1.0, 'REPLACE')
    vg.add([18],1.0, 'REPLACE')
    vg.add([19],1.0, 'REPLACE')
    vg.add([21],1.0, 'REPLACE')
    vg.add([23],0.5, 'REPLACE')
    vg.add([24],1.0, 'REPLACE')
    vg.add([25],1.0, 'REPLACE')
    vg.add([26],0.6439944505691528, 'REPLACE')
    vg.add([27],0.24999955296516418, 'REPLACE')
    vg.add([28],1.0, 'REPLACE')
    vg.add([29],1.0, 'REPLACE')
    vg.add([30],1.0, 'REPLACE')
    vg.add([31],1.0, 'REPLACE')
    vg.add([32],0.75, 'REPLACE')
    vg.add([33],0.75, 'REPLACE')
    vg.add([34],0.10000000149011612, 'REPLACE')
    vg.add([35],0.10000000149011612, 'REPLACE')
    vg.add([36],1.0, 'REPLACE')
    vg.add([61],0.75, 'REPLACE')
    vg.add([63],1.0, 'REPLACE')
    vg.add([65],1.0, 'REPLACE')
    vg.add([66],1.0, 'REPLACE')
    vg.add([67],1.0, 'REPLACE')
    vg.add([68],1.0, 'REPLACE')
    vg.add([69],1.0, 'REPLACE')
    vg.add([71],1.0, 'REPLACE')
    vg.add([72],1.0, 'REPLACE')
    vg.add([73],1.0, 'REPLACE')
    vg.add([74],0.25, 'REPLACE')
    vg.add([75],0.25, 'REPLACE')
    vg.add([76],0.25, 'REPLACE')
    vg.add([77],0.25, 'REPLACE')
    vg.add([78],0.25, 'REPLACE')
    vg.add([79],0.25, 'REPLACE')
    vg.add([80],0.25, 'REPLACE')
    vg.add([81],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("foot_def_R")
    vg.add([502],1.0, 'REPLACE')
    vg.add([505],1.0, 'REPLACE')
    vg.add([506],0.5, 'REPLACE')
    vg.add([509],0.5, 'REPLACE')
    vg.add([510],1.0, 'REPLACE')
    vg.add([511],1.0, 'REPLACE')
    vg.add([512],1.0, 'REPLACE')
    vg.add([513],1.0, 'REPLACE')
    vg.add([514],0.25, 'REPLACE')
    vg.add([515],0.25, 'REPLACE')
    vg.add([516],0.1696980595588684, 'REPLACE')
    vg.add([517],0.25, 'REPLACE')
    vg.add([518],1.0, 'REPLACE')
    vg.add([519],1.0, 'REPLACE')
    vg.add([520],1.0, 'REPLACE')
    vg.add([521],1.0, 'REPLACE')
    vg.add([523],1.0, 'REPLACE')
    vg.add([525],0.5, 'REPLACE')
    vg.add([526],1.0, 'REPLACE')
    vg.add([527],1.0, 'REPLACE')
    vg.add([528],0.6439944505691528, 'REPLACE')
    vg.add([529],0.24999955296516418, 'REPLACE')
    vg.add([530],1.0, 'REPLACE')
    vg.add([531],1.0, 'REPLACE')
    vg.add([532],1.0, 'REPLACE')
    vg.add([533],1.0, 'REPLACE')
    vg.add([534],0.75, 'REPLACE')
    vg.add([535],0.75, 'REPLACE')
    vg.add([536],0.10000000149011612, 'REPLACE')
    vg.add([537],0.10000000149011612, 'REPLACE')
    vg.add([538],1.0, 'REPLACE')
    vg.add([563],0.75, 'REPLACE')
    vg.add([565],1.0, 'REPLACE')
    vg.add([567],1.0, 'REPLACE')
    vg.add([568],1.0, 'REPLACE')
    vg.add([569],1.0, 'REPLACE')
    vg.add([570],1.0, 'REPLACE')
    vg.add([571],1.0, 'REPLACE')
    vg.add([573],1.0, 'REPLACE')
    vg.add([574],1.0, 'REPLACE')
    vg.add([575],1.0, 'REPLACE')
    vg.add([576],0.25, 'REPLACE')
    vg.add([577],0.25, 'REPLACE')
    vg.add([578],0.25, 'REPLACE')
    vg.add([579],0.25, 'REPLACE')
    vg.add([580],0.25, 'REPLACE')
    vg.add([581],0.25, 'REPLACE')
    vg.add([582],0.25, 'REPLACE')
    vg.add([583],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_def_L")
    vg.add([260],0.10417930036783218, 'REPLACE')
    vg.add([261],0.0848897323012352, 'REPLACE')
    vg.add([262],0.04573469236493111, 'REPLACE')
    vg.add([263],0.24879620969295502, 'REPLACE')
    vg.add([264],0.25, 'REPLACE')
    vg.add([265],0.25, 'REPLACE')
    vg.add([274],1.0, 'REPLACE')
    vg.add([275],1.0, 'REPLACE')
    vg.add([276],0.7164883017539978, 'REPLACE')
    vg.add([277],0.9981606006622314, 'REPLACE')
    vg.add([278],1.0, 'REPLACE')
    vg.add([279],1.0, 'REPLACE')
    vg.add([280],1.0, 'REPLACE')
    vg.add([281],1.0, 'REPLACE')
    vg.add([282],1.0, 'REPLACE')
    vg.add([283],1.0, 'REPLACE')
    vg.add([284],1.0, 'REPLACE')
    vg.add([285],1.0, 'REPLACE')
    vg.add([286],1.0, 'REPLACE')
    vg.add([287],0.0, 'REPLACE')
    vg.add([290],0.0, 'REPLACE')
    vg.add([291],0.0, 'REPLACE')
    vg.add([292],0.0, 'REPLACE')
    vg.add([293],0.0, 'REPLACE')
    vg.add([294],0.0, 'REPLACE')
    vg.add([317],0.0, 'REPLACE')
    vg.add([318],0.0, 'REPLACE')
    vg.add([319],0.0, 'REPLACE')
    vg.add([320],0.0, 'REPLACE')
    vg.add([321],0.0, 'REPLACE')
    vg.add([322],0.0, 'REPLACE')
    vg.add([323],0.0, 'REPLACE')
    vg.add([325],0.25, 'REPLACE')
    vg.add([326],0.25, 'REPLACE')
    vg.add([327],0.25, 'REPLACE')
    vg.add([328],0.25, 'REPLACE')
    vg.add([329],0.25, 'REPLACE')
    vg.add([330],0.25, 'REPLACE')
    vg.add([331],0.25, 'REPLACE')
    vg.add([332],0.25, 'REPLACE')
    vg.add([333],0.0, 'REPLACE')
    vg.add([334],0.0, 'REPLACE')
    vg.add([335],0.02714621275663376, 'REPLACE')
    vg.add([336],0.015603848733007908, 'REPLACE')
    vg.add([337],0.014200668781995773, 'REPLACE')
    vg.add([351],0.0, 'REPLACE')
    vg.add([352],0.0, 'REPLACE')
    vg.add([353],0.0, 'REPLACE')
    vg.add([400],0.0, 'REPLACE')
    vg.add([406],0.023592419922351837, 'REPLACE')
    vg.add([422],0.0, 'REPLACE')
    vg.add([426],1.0, 'REPLACE')
    vg.add([427],1.0, 'REPLACE')
    vg.add([428],1.0, 'REPLACE')
    vg.add([429],1.0, 'REPLACE')
    vg.add([430],1.0, 'REPLACE')
    vg.add([431],1.0, 'REPLACE')
    vg.add([432],1.0, 'REPLACE')
    vg.add([433],1.0, 'REPLACE')
    vg.add([436],0.015038514509797096, 'REPLACE')
    vg.add([456],0.25, 'REPLACE')
    vg.add([464],0.0, 'REPLACE')
    vg.add([465],0.0, 'REPLACE')
    vg.add([466],0.0, 'REPLACE')
    vg.add([467],0.0, 'REPLACE')
    vg.add([468],0.0, 'REPLACE')
    vg.add([469],0.0, 'REPLACE')
    vg.add([470],0.0, 'REPLACE')
    vg.add([471],0.0, 'REPLACE')
    vg.add([482],0.17157158255577087, 'REPLACE')
    vg.add([483],0.5000039339065552, 'REPLACE')
    vg.add([484],0.5, 'REPLACE')
    vg.add([485],1.0, 'REPLACE')
    vg.add([486],1.0, 'REPLACE')
    vg.add([487],0.5, 'REPLACE')
    vg.add([488],0.5, 'REPLACE')
    vg.add([489],0.17983180284500122, 'REPLACE')
    vg.add([490],1.0, 'REPLACE')
    vg.add([491],0.5023157596588135, 'REPLACE')
    vg.add([492],0.49617210030555725, 'REPLACE')
    vg.add([493],0.19790522754192352, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_def_R")
    vg.add([762],0.10417930036783218, 'REPLACE')
    vg.add([763],0.0848897323012352, 'REPLACE')
    vg.add([764],0.04573469236493111, 'REPLACE')
    vg.add([765],0.24879620969295502, 'REPLACE')
    vg.add([766],0.25, 'REPLACE')
    vg.add([767],0.25, 'REPLACE')
    vg.add([776],1.0, 'REPLACE')
    vg.add([777],1.0, 'REPLACE')
    vg.add([778],0.7164883017539978, 'REPLACE')
    vg.add([779],0.9981606006622314, 'REPLACE')
    vg.add([780],1.0, 'REPLACE')
    vg.add([781],1.0, 'REPLACE')
    vg.add([782],1.0, 'REPLACE')
    vg.add([783],1.0, 'REPLACE')
    vg.add([784],1.0, 'REPLACE')
    vg.add([785],1.0, 'REPLACE')
    vg.add([786],1.0, 'REPLACE')
    vg.add([787],1.0, 'REPLACE')
    vg.add([788],1.0, 'REPLACE')
    vg.add([789],0.0, 'REPLACE')
    vg.add([792],0.0, 'REPLACE')
    vg.add([793],0.0, 'REPLACE')
    vg.add([794],0.0, 'REPLACE')
    vg.add([795],0.0, 'REPLACE')
    vg.add([796],0.0, 'REPLACE')
    vg.add([819],0.0, 'REPLACE')
    vg.add([820],0.0, 'REPLACE')
    vg.add([821],0.0, 'REPLACE')
    vg.add([822],0.0, 'REPLACE')
    vg.add([823],0.0, 'REPLACE')
    vg.add([824],0.0, 'REPLACE')
    vg.add([825],0.0, 'REPLACE')
    vg.add([827],0.25, 'REPLACE')
    vg.add([828],0.25, 'REPLACE')
    vg.add([829],0.25, 'REPLACE')
    vg.add([830],0.25, 'REPLACE')
    vg.add([831],0.25, 'REPLACE')
    vg.add([832],0.25, 'REPLACE')
    vg.add([833],0.25, 'REPLACE')
    vg.add([834],0.25, 'REPLACE')
    vg.add([835],0.0, 'REPLACE')
    vg.add([836],0.0, 'REPLACE')
    vg.add([837],0.02714621275663376, 'REPLACE')
    vg.add([838],0.015603848733007908, 'REPLACE')
    vg.add([839],0.014200668781995773, 'REPLACE')
    vg.add([853],0.0, 'REPLACE')
    vg.add([854],0.0, 'REPLACE')
    vg.add([855],0.0, 'REPLACE')
    vg.add([902],0.0, 'REPLACE')
    vg.add([908],0.023592419922351837, 'REPLACE')
    vg.add([924],0.0, 'REPLACE')
    vg.add([928],1.0, 'REPLACE')
    vg.add([929],1.0, 'REPLACE')
    vg.add([930],1.0, 'REPLACE')
    vg.add([931],1.0, 'REPLACE')
    vg.add([932],1.0, 'REPLACE')
    vg.add([933],1.0, 'REPLACE')
    vg.add([934],1.0, 'REPLACE')
    vg.add([935],1.0, 'REPLACE')
    vg.add([938],0.015038514509797096, 'REPLACE')
    vg.add([958],0.25, 'REPLACE')
    vg.add([966],0.0, 'REPLACE')
    vg.add([967],0.0, 'REPLACE')
    vg.add([968],0.0, 'REPLACE')
    vg.add([969],0.0, 'REPLACE')
    vg.add([970],0.0, 'REPLACE')
    vg.add([971],0.0, 'REPLACE')
    vg.add([972],0.0, 'REPLACE')
    vg.add([973],0.0, 'REPLACE')
    vg.add([984],0.17157158255577087, 'REPLACE')
    vg.add([985],0.5000039339065552, 'REPLACE')
    vg.add([986],0.5, 'REPLACE')
    vg.add([987],1.0, 'REPLACE')
    vg.add([988],1.0, 'REPLACE')
    vg.add([989],0.5, 'REPLACE')
    vg.add([990],0.5, 'REPLACE')
    vg.add([991],0.17983180284500122, 'REPLACE')
    vg.add([992],1.0, 'REPLACE')
    vg.add([993],0.5023157596588135, 'REPLACE')
    vg.add([994],0.49617210030555725, 'REPLACE')
    vg.add([995],0.19790522754192352, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_twist_def_L")
    vg.add([266],0.75, 'REPLACE')
    vg.add([267],0.75, 'REPLACE')
    vg.add([268],0.75, 'REPLACE')
    vg.add([269],0.5, 'REPLACE')
    vg.add([270],0.5, 'REPLACE')
    vg.add([271],0.75, 'REPLACE')
    vg.add([272],0.5, 'REPLACE')
    vg.add([273],0.5, 'REPLACE')
    vg.add([277],0.0, 'REPLACE')
    vg.add([279],0.125, 'REPLACE')
    vg.add([280],0.125, 'REPLACE')
    vg.add([281],0.125, 'REPLACE')
    vg.add([282],0.125, 'REPLACE')
    vg.add([283],0.125, 'REPLACE')
    vg.add([284],0.125, 'REPLACE')
    vg.add([285],0.125, 'REPLACE')
    vg.add([286],0.125, 'REPLACE')
    vg.add([287],1.0, 'REPLACE')
    vg.add([288],1.0, 'REPLACE')
    vg.add([289],1.0, 'REPLACE')
    vg.add([290],1.0, 'REPLACE')
    vg.add([291],1.0, 'REPLACE')
    vg.add([292],1.0, 'REPLACE')
    vg.add([293],1.0, 'REPLACE')
    vg.add([294],1.0, 'REPLACE')
    vg.add([317],0.75, 'REPLACE')
    vg.add([318],0.75, 'REPLACE')
    vg.add([319],0.75, 'REPLACE')
    vg.add([320],0.75, 'REPLACE')
    vg.add([321],0.75, 'REPLACE')
    vg.add([322],0.75, 'REPLACE')
    vg.add([323],0.75, 'REPLACE')
    vg.add([324],0.75, 'REPLACE')
    vg.add([325],1.0, 'REPLACE')
    vg.add([326],1.0, 'REPLACE')
    vg.add([327],1.0, 'REPLACE')
    vg.add([328],1.0, 'REPLACE')
    vg.add([329],1.0, 'REPLACE')
    vg.add([330],1.0, 'REPLACE')
    vg.add([331],1.0, 'REPLACE')
    vg.add([332],1.0, 'REPLACE')
    vg.add([426],0.25, 'REPLACE')
    vg.add([427],0.25, 'REPLACE')
    vg.add([428],0.25, 'REPLACE')
    vg.add([429],0.25, 'REPLACE')
    vg.add([430],0.25, 'REPLACE')
    vg.add([431],0.25, 'REPLACE')
    vg.add([432],0.25, 'REPLACE')
    vg.add([433],0.25, 'REPLACE')
    vg.add([464],1.0, 'REPLACE')
    vg.add([465],1.0, 'REPLACE')
    vg.add([466],1.0, 'REPLACE')
    vg.add([467],1.0, 'REPLACE')
    vg.add([468],1.0, 'REPLACE')
    vg.add([469],1.0, 'REPLACE')
    vg.add([470],1.0, 'REPLACE')
    vg.add([471],1.0, 'REPLACE')
    vg.add([483],0.0, 'REPLACE')
    vg.add([484],0.0, 'REPLACE')
    vg.add([485],0.0, 'REPLACE')
    vg.add([486],0.0, 'REPLACE')
    vg.add([487],0.0, 'REPLACE')
    vg.add([490],0.0, 'REPLACE')
    vg.add([491],0.0, 'REPLACE')
    vg.add([492],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("forearm_twist_def_R")
    vg.add([768],0.75, 'REPLACE')
    vg.add([769],0.75, 'REPLACE')
    vg.add([770],0.75, 'REPLACE')
    vg.add([771],0.5, 'REPLACE')
    vg.add([772],0.5, 'REPLACE')
    vg.add([773],0.75, 'REPLACE')
    vg.add([774],0.5, 'REPLACE')
    vg.add([775],0.5, 'REPLACE')
    vg.add([779],0.0, 'REPLACE')
    vg.add([781],0.125, 'REPLACE')
    vg.add([782],0.125, 'REPLACE')
    vg.add([783],0.125, 'REPLACE')
    vg.add([784],0.125, 'REPLACE')
    vg.add([785],0.125, 'REPLACE')
    vg.add([786],0.125, 'REPLACE')
    vg.add([787],0.125, 'REPLACE')
    vg.add([788],0.125, 'REPLACE')
    vg.add([789],1.0, 'REPLACE')
    vg.add([790],1.0, 'REPLACE')
    vg.add([791],1.0, 'REPLACE')
    vg.add([792],1.0, 'REPLACE')
    vg.add([793],1.0, 'REPLACE')
    vg.add([794],1.0, 'REPLACE')
    vg.add([795],1.0, 'REPLACE')
    vg.add([796],1.0, 'REPLACE')
    vg.add([819],0.75, 'REPLACE')
    vg.add([820],0.75, 'REPLACE')
    vg.add([821],0.75, 'REPLACE')
    vg.add([822],0.75, 'REPLACE')
    vg.add([823],0.75, 'REPLACE')
    vg.add([824],0.75, 'REPLACE')
    vg.add([825],0.75, 'REPLACE')
    vg.add([826],0.75, 'REPLACE')
    vg.add([827],1.0, 'REPLACE')
    vg.add([828],1.0, 'REPLACE')
    vg.add([829],1.0, 'REPLACE')
    vg.add([830],1.0, 'REPLACE')
    vg.add([831],1.0, 'REPLACE')
    vg.add([832],1.0, 'REPLACE')
    vg.add([833],1.0, 'REPLACE')
    vg.add([834],1.0, 'REPLACE')
    vg.add([928],0.25, 'REPLACE')
    vg.add([929],0.25, 'REPLACE')
    vg.add([930],0.25, 'REPLACE')
    vg.add([931],0.25, 'REPLACE')
    vg.add([932],0.25, 'REPLACE')
    vg.add([933],0.25, 'REPLACE')
    vg.add([934],0.25, 'REPLACE')
    vg.add([935],0.25, 'REPLACE')
    vg.add([966],1.0, 'REPLACE')
    vg.add([967],1.0, 'REPLACE')
    vg.add([968],1.0, 'REPLACE')
    vg.add([969],1.0, 'REPLACE')
    vg.add([970],1.0, 'REPLACE')
    vg.add([971],1.0, 'REPLACE')
    vg.add([972],1.0, 'REPLACE')
    vg.add([973],1.0, 'REPLACE')
    vg.add([985],0.0, 'REPLACE')
    vg.add([986],0.0, 'REPLACE')
    vg.add([987],0.0, 'REPLACE')
    vg.add([988],0.0, 'REPLACE')
    vg.add([989],0.0, 'REPLACE')
    vg.add([992],0.0, 'REPLACE')
    vg.add([993],0.0, 'REPLACE')
    vg.add([994],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("hand_def_L")
    vg.add([266],1.0, 'REPLACE')
    vg.add([267],1.0, 'REPLACE')
    vg.add([268],1.0, 'REPLACE')
    vg.add([269],1.0, 'REPLACE')
    vg.add([270],1.0, 'REPLACE')
    vg.add([271],1.0, 'REPLACE')
    vg.add([272],1.0, 'REPLACE')
    vg.add([273],1.0, 'REPLACE')
    vg.add([287],0.08749999850988388, 'REPLACE')
    vg.add([288],0.0625, 'REPLACE')
    vg.add([290],0.125, 'REPLACE')
    vg.add([291],0.0625, 'REPLACE')
    vg.add([293],0.125, 'REPLACE')
    vg.add([294],0.125, 'REPLACE')
    vg.add([295],1.0, 'REPLACE')
    vg.add([296],1.0, 'REPLACE')
    vg.add([297],1.0, 'REPLACE')
    vg.add([298],1.0, 'REPLACE')
    vg.add([299],1.0, 'REPLACE')
    vg.add([300],1.0, 'REPLACE')
    vg.add([301],1.0, 'REPLACE')
    vg.add([302],1.0, 'REPLACE')
    vg.add([303],1.0, 'REPLACE')
    vg.add([304],1.0, 'REPLACE')
    vg.add([305],1.0, 'REPLACE')
    vg.add([306],1.0, 'REPLACE')
    vg.add([307],1.0, 'REPLACE')
    vg.add([308],1.0, 'REPLACE')
    vg.add([309],1.0, 'REPLACE')
    vg.add([310],1.0, 'REPLACE')
    vg.add([311],1.0, 'REPLACE')
    vg.add([317],0.5, 'REPLACE')
    vg.add([318],0.5438203811645508, 'REPLACE')
    vg.add([319],0.48215001821517944, 'REPLACE')
    vg.add([320],0.5, 'REPLACE')
    vg.add([321],0.5, 'REPLACE')
    vg.add([322],0.6347058415412903, 'REPLACE')
    vg.add([323],0.5, 'REPLACE')
    vg.add([324],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("hand_def_R")
    vg.add([768],1.0, 'REPLACE')
    vg.add([769],1.0, 'REPLACE')
    vg.add([770],1.0, 'REPLACE')
    vg.add([771],1.0, 'REPLACE')
    vg.add([772],1.0, 'REPLACE')
    vg.add([773],1.0, 'REPLACE')
    vg.add([774],1.0, 'REPLACE')
    vg.add([775],1.0, 'REPLACE')
    vg.add([789],0.08749999850988388, 'REPLACE')
    vg.add([790],0.0625, 'REPLACE')
    vg.add([792],0.125, 'REPLACE')
    vg.add([793],0.0625, 'REPLACE')
    vg.add([795],0.125, 'REPLACE')
    vg.add([796],0.125, 'REPLACE')
    vg.add([797],1.0, 'REPLACE')
    vg.add([798],1.0, 'REPLACE')
    vg.add([799],1.0, 'REPLACE')
    vg.add([800],1.0, 'REPLACE')
    vg.add([801],1.0, 'REPLACE')
    vg.add([802],1.0, 'REPLACE')
    vg.add([803],1.0, 'REPLACE')
    vg.add([804],1.0, 'REPLACE')
    vg.add([805],1.0, 'REPLACE')
    vg.add([806],1.0, 'REPLACE')
    vg.add([807],1.0, 'REPLACE')
    vg.add([808],1.0, 'REPLACE')
    vg.add([809],1.0, 'REPLACE')
    vg.add([810],1.0, 'REPLACE')
    vg.add([811],1.0, 'REPLACE')
    vg.add([812],1.0, 'REPLACE')
    vg.add([813],1.0, 'REPLACE')
    vg.add([819],0.5, 'REPLACE')
    vg.add([820],0.5438203811645508, 'REPLACE')
    vg.add([821],0.48215001821517944, 'REPLACE')
    vg.add([822],0.5, 'REPLACE')
    vg.add([823],0.5, 'REPLACE')
    vg.add([824],0.6347058415412903, 'REPLACE')
    vg.add([825],0.5, 'REPLACE')
    vg.add([826],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("head_def_1")
    vg.add([231],1.0, 'REPLACE')
    vg.add([232],0.75, 'REPLACE')
    vg.add([233],0.75, 'REPLACE')
    vg.add([234],1.0, 'REPLACE')
    vg.add([235],0.75, 'REPLACE')
    vg.add([236],0.5, 'REPLACE')
    vg.add([237],0.5, 'REPLACE')
    vg.add([238],1.0, 'REPLACE')
    vg.add([239],1.0, 'REPLACE')
    vg.add([240],0.5, 'REPLACE')
    vg.add([241],1.0, 'REPLACE')
    vg.add([242],1.0, 'REPLACE')
    vg.add([243],1.0, 'REPLACE')
    vg.add([244],1.0, 'REPLACE')
    vg.add([245],1.0, 'REPLACE')
    vg.add([246],0.5, 'REPLACE')
    vg.add([247],0.5, 'REPLACE')
    vg.add([248],0.0, 'REPLACE')
    vg.add([249],0.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([251],0.0, 'REPLACE')
    vg.add([252],0.0, 'REPLACE')
    vg.add([253],0.0, 'REPLACE')
    vg.add([357],0.75, 'REPLACE')
    vg.add([359],0.75, 'REPLACE')
    vg.add([360],0.5, 'REPLACE')
    vg.add([373],1.0, 'REPLACE')
    vg.add([374],1.0, 'REPLACE')
    vg.add([375],1.0, 'REPLACE')
    vg.add([376],0.0, 'REPLACE')
    vg.add([377],0.0, 'REPLACE')
    vg.add([382],1.0, 'REPLACE')
    vg.add([383],1.0, 'REPLACE')
    vg.add([384],1.0, 'REPLACE')
    vg.add([385],0.0, 'REPLACE')
    vg.add([391],1.0, 'REPLACE')
    vg.add([392],1.0, 'REPLACE')
    vg.add([396],1.0, 'REPLACE')
    vg.add([415],0.5, 'REPLACE')
    vg.add([423],0.0, 'REPLACE')
    vg.add([424],0.0, 'REPLACE')
    vg.add([425],0.0, 'REPLACE')
    vg.add([472],0.125, 'REPLACE')
    vg.add([473],0.125, 'REPLACE')
    vg.add([474],0.125, 'REPLACE')
    vg.add([475],0.125, 'REPLACE')
    vg.add([476],0.125, 'REPLACE')
    vg.add([477],0.125, 'REPLACE')
    vg.add([478],0.125, 'REPLACE')
    vg.add([479],0.125, 'REPLACE')
    vg.add([480],0.125, 'REPLACE')
    vg.add([481],0.125, 'REPLACE')
    vg.add([494],0.0, 'REPLACE')
    vg.add([495],0.0, 'REPLACE')
    vg.add([496],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([499],0.0, 'REPLACE')
    vg.add([500],0.0, 'REPLACE')
    vg.add([501],0.0, 'REPLACE')
    vg.add([733],1.0, 'REPLACE')
    vg.add([734],0.75, 'REPLACE')
    vg.add([735],0.75, 'REPLACE')
    vg.add([736],1.0, 'REPLACE')
    vg.add([737],0.75, 'REPLACE')
    vg.add([738],0.5, 'REPLACE')
    vg.add([739],0.5, 'REPLACE')
    vg.add([740],1.0, 'REPLACE')
    vg.add([741],1.0, 'REPLACE')
    vg.add([742],0.5, 'REPLACE')
    vg.add([743],1.0, 'REPLACE')
    vg.add([744],1.0, 'REPLACE')
    vg.add([745],1.0, 'REPLACE')
    vg.add([746],1.0, 'REPLACE')
    vg.add([747],1.0, 'REPLACE')
    vg.add([748],0.5, 'REPLACE')
    vg.add([749],0.5, 'REPLACE')
    vg.add([750],0.0, 'REPLACE')
    vg.add([751],0.0, 'REPLACE')
    vg.add([752],0.0, 'REPLACE')
    vg.add([753],0.0, 'REPLACE')
    vg.add([754],0.0, 'REPLACE')
    vg.add([755],0.0, 'REPLACE')
    vg.add([859],0.75, 'REPLACE')
    vg.add([861],0.75, 'REPLACE')
    vg.add([862],0.5, 'REPLACE')
    vg.add([875],1.0, 'REPLACE')
    vg.add([876],1.0, 'REPLACE')
    vg.add([877],1.0, 'REPLACE')
    vg.add([878],0.0, 'REPLACE')
    vg.add([879],0.0, 'REPLACE')
    vg.add([884],1.0, 'REPLACE')
    vg.add([885],1.0, 'REPLACE')
    vg.add([886],1.0, 'REPLACE')
    vg.add([887],0.0, 'REPLACE')
    vg.add([893],1.0, 'REPLACE')
    vg.add([894],1.0, 'REPLACE')
    vg.add([898],1.0, 'REPLACE')
    vg.add([917],0.5, 'REPLACE')
    vg.add([925],0.0, 'REPLACE')
    vg.add([926],0.0, 'REPLACE')
    vg.add([927],0.0, 'REPLACE')
    vg.add([974],0.125, 'REPLACE')
    vg.add([975],0.125, 'REPLACE')
    vg.add([976],0.125, 'REPLACE')
    vg.add([977],0.125, 'REPLACE')
    vg.add([978],0.125, 'REPLACE')
    vg.add([979],0.125, 'REPLACE')
    vg.add([980],0.125, 'REPLACE')
    vg.add([981],0.125, 'REPLACE')
    vg.add([982],0.125, 'REPLACE')
    vg.add([983],0.125, 'REPLACE')
    vg.add([996],0.0, 'REPLACE')
    vg.add([997],0.0, 'REPLACE')
    vg.add([998],0.0, 'REPLACE')
    vg.add([999],0.0, 'REPLACE')
    vg.add([1000],0.0, 'REPLACE')
    vg.add([1001],0.0, 'REPLACE')
    vg.add([1002],0.0, 'REPLACE')
    vg.add([1003],0.0, 'REPLACE')
    vg.add([1004],0.0, 'REPLACE')
    vg.add([1023],0.75, 'REPLACE')
    vg.add([1024],0.5, 'REPLACE')
    vg.add([1025],1.0, 'REPLACE')
    vg.add([1026],1.0, 'REPLACE')
    vg.add([1027],1.0, 'REPLACE')
    vg.add([1028],1.0, 'REPLACE')
    vg.add([1029],0.5, 'REPLACE')
    vg.add([1030],0.0, 'REPLACE')
    vg.add([1031],0.0, 'REPLACE')
    vg.add([1032],0.0, 'REPLACE')
    vg.add([1033],0.0, 'REPLACE')
    vg.add([1042],0.0, 'REPLACE')
    vg.add([1046],0.0, 'REPLACE')
    vg.add([1047],0.0, 'REPLACE')
    vg.add([1048],0.0, 'REPLACE')
    vg.add([1049],0.0, 'REPLACE')
    vg.add([1055],0.125, 'REPLACE')
    vg.add([1056],0.125, 'REPLACE')
    vg = ob.vertex_groups.new("head_def_2")
    vg.add([241],1.0, 'REPLACE')
    vg.add([242],1.0, 'REPLACE')
    vg.add([243],1.0, 'REPLACE')
    vg.add([244],1.0, 'REPLACE')
    vg.add([245],1.0, 'REPLACE')
    vg.add([375],1.0, 'REPLACE')
    vg.add([384],1.0, 'REPLACE')
    vg.add([392],1.0, 'REPLACE')
    vg.add([494],1.0, 'REPLACE')
    vg.add([495],1.0, 'REPLACE')
    vg.add([496],1.0, 'REPLACE')
    vg.add([497],1.0, 'REPLACE')
    vg.add([498],1.0, 'REPLACE')
    vg.add([499],1.0, 'REPLACE')
    vg.add([500],1.0, 'REPLACE')
    vg.add([501],1.0, 'REPLACE')
    vg.add([743],1.0, 'REPLACE')
    vg.add([744],1.0, 'REPLACE')
    vg.add([745],1.0, 'REPLACE')
    vg.add([746],1.0, 'REPLACE')
    vg.add([747],1.0, 'REPLACE')
    vg.add([877],1.0, 'REPLACE')
    vg.add([886],1.0, 'REPLACE')
    vg.add([894],1.0, 'REPLACE')
    vg.add([996],1.0, 'REPLACE')
    vg.add([997],1.0, 'REPLACE')
    vg.add([998],1.0, 'REPLACE')
    vg.add([999],1.0, 'REPLACE')
    vg.add([1000],1.0, 'REPLACE')
    vg.add([1001],1.0, 'REPLACE')
    vg.add([1002],1.0, 'REPLACE')
    vg.add([1003],1.0, 'REPLACE')
    vg.add([1004],1.0, 'REPLACE')
    vg.add([1027],1.0, 'REPLACE')
    vg.add([1028],1.0, 'REPLACE')
    vg.add([1030],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("head_def_3")
    vg.add([231],0.0, 'REPLACE')
    vg.add([232],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([238],0.0, 'REPLACE')
    vg.add([239],0.0, 'REPLACE')
    vg.add([240],0.0, 'REPLACE')
    vg.add([241],0.0, 'REPLACE')
    vg.add([244],0.0, 'REPLACE')
    vg.add([248],1.0, 'REPLACE')
    vg.add([249],1.0, 'REPLACE')
    vg.add([250],1.0, 'REPLACE')
    vg.add([251],1.0, 'REPLACE')
    vg.add([252],1.0, 'REPLACE')
    vg.add([253],1.0, 'REPLACE')
    vg.add([373],0.0, 'REPLACE')
    vg.add([374],0.0, 'REPLACE')
    vg.add([375],0.0, 'REPLACE')
    vg.add([376],1.0, 'REPLACE')
    vg.add([377],1.0, 'REPLACE')
    vg.add([382],0.0, 'REPLACE')
    vg.add([383],0.0, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([385],1.0, 'REPLACE')
    vg.add([391],0.0, 'REPLACE')
    vg.add([392],0.0, 'REPLACE')
    vg.add([396],0.0, 'REPLACE')
    vg.add([423],1.0, 'REPLACE')
    vg.add([424],1.0, 'REPLACE')
    vg.add([425],1.0, 'REPLACE')
    vg.add([494],1.0, 'REPLACE')
    vg.add([495],1.0, 'REPLACE')
    vg.add([496],1.0, 'REPLACE')
    vg.add([497],1.0, 'REPLACE')
    vg.add([498],1.0, 'REPLACE')
    vg.add([499],1.0, 'REPLACE')
    vg.add([500],1.0, 'REPLACE')
    vg.add([501],1.0, 'REPLACE')
    vg.add([733],0.0, 'REPLACE')
    vg.add([734],0.0, 'REPLACE')
    vg.add([736],0.0, 'REPLACE')
    vg.add([740],0.0, 'REPLACE')
    vg.add([741],0.0, 'REPLACE')
    vg.add([742],0.0, 'REPLACE')
    vg.add([743],0.0, 'REPLACE')
    vg.add([746],0.0, 'REPLACE')
    vg.add([750],1.0, 'REPLACE')
    vg.add([751],1.0, 'REPLACE')
    vg.add([752],1.0, 'REPLACE')
    vg.add([753],1.0, 'REPLACE')
    vg.add([754],1.0, 'REPLACE')
    vg.add([755],1.0, 'REPLACE')
    vg.add([875],0.0, 'REPLACE')
    vg.add([876],0.0, 'REPLACE')
    vg.add([877],0.0, 'REPLACE')
    vg.add([878],1.0, 'REPLACE')
    vg.add([879],1.0, 'REPLACE')
    vg.add([884],0.0, 'REPLACE')
    vg.add([885],0.0, 'REPLACE')
    vg.add([886],0.0, 'REPLACE')
    vg.add([887],1.0, 'REPLACE')
    vg.add([893],0.0, 'REPLACE')
    vg.add([894],0.0, 'REPLACE')
    vg.add([898],0.0, 'REPLACE')
    vg.add([925],1.0, 'REPLACE')
    vg.add([926],1.0, 'REPLACE')
    vg.add([927],1.0, 'REPLACE')
    vg.add([996],1.0, 'REPLACE')
    vg.add([997],1.0, 'REPLACE')
    vg.add([998],1.0, 'REPLACE')
    vg.add([999],1.0, 'REPLACE')
    vg.add([1000],1.0, 'REPLACE')
    vg.add([1001],1.0, 'REPLACE')
    vg.add([1002],1.0, 'REPLACE')
    vg.add([1003],1.0, 'REPLACE')
    vg.add([1004],1.0, 'REPLACE')
    vg.add([1025],0.0, 'REPLACE')
    vg.add([1026],0.0, 'REPLACE')
    vg.add([1027],0.0, 'REPLACE')
    vg.add([1030],1.0, 'REPLACE')
    vg.add([1031],1.0, 'REPLACE')
    vg.add([1032],1.0, 'REPLACE')
    vg.add([1033],1.0, 'REPLACE')
    vg.add([1042],1.0, 'REPLACE')
    vg.add([1046],1.0, 'REPLACE')
    vg.add([1047],1.0, 'REPLACE')
    vg.add([1048],1.0, 'REPLACE')
    vg.add([1049],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("hip_fix_L")
    vg.add([103],0.2517586350440979, 'REPLACE')
    vg.add([105],0.7930271029472351, 'REPLACE')
    vg.add([106],0.25, 'REPLACE')
    vg.add([114],0.22131910920143127, 'REPLACE')
    vg.add([139],0.5, 'REPLACE')
    vg.add([141],0.5, 'REPLACE')
    vg.add([168],0.634338915348053, 'REPLACE')
    vg.add([169],0.5, 'REPLACE')
    vg.add([190],0.25479596853256226, 'REPLACE')
    vg.add([193],0.7548441290855408, 'REPLACE')
    vg.add([196],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("hip_fix_R")
    vg.add([605],0.2517586350440979, 'REPLACE')
    vg.add([607],0.7930271029472351, 'REPLACE')
    vg.add([608],0.25, 'REPLACE')
    vg.add([616],0.22131910920143127, 'REPLACE')
    vg.add([641],0.5, 'REPLACE')
    vg.add([643],0.5, 'REPLACE')
    vg.add([670],0.634338915348053, 'REPLACE')
    vg.add([671],0.5, 'REPLACE')
    vg.add([692],0.25479596853256226, 'REPLACE')
    vg.add([695],0.7548441290855408, 'REPLACE')
    vg.add([698],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("knee_fix_L")
    vg.add([94],0.125, 'REPLACE')
    vg.add([95],0.125, 'REPLACE')
    vg.add([100],0.0, 'REPLACE')
    vg.add([101],0.0, 'REPLACE')
    vg.add([118],0.030970068648457527, 'REPLACE')
    vg.add([119],0.125, 'REPLACE')
    vg.add([122],0.0, 'REPLACE')
    vg.add([132],0.14705881476402283, 'REPLACE')
    vg.add([133],0.17128026485443115, 'REPLACE')
    vg.add([134],0.0, 'REPLACE')
    vg.add([137],0.0, 'REPLACE')
    vg.add([154],0.0625, 'REPLACE')
    vg.add([163],0.03125, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([166],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([199],0.0, 'REPLACE')
    vg.add([200],0.03125, 'REPLACE')
    vg.add([202],0.25, 'REPLACE')
    vg.add([203],0.5, 'REPLACE')
    vg.add([204],0.125, 'REPLACE')
    vg.add([205],0.125, 'REPLACE')
    vg.add([206],0.5, 'REPLACE')
    vg.add([207],0.25, 'REPLACE')
    vg.add([208],0.125, 'REPLACE')
    vg.add([209],0.5, 'REPLACE')
    vg.add([210],0.25, 'REPLACE')
    vg.add([211],0.2179507315158844, 'REPLACE')
    vg.add([212],0.1720293164253235, 'REPLACE')
    vg = ob.vertex_groups.new("knee_fix_R")
    vg.add([596],0.125, 'REPLACE')
    vg.add([597],0.125, 'REPLACE')
    vg.add([602],0.0, 'REPLACE')
    vg.add([603],0.0, 'REPLACE')
    vg.add([620],0.030970068648457527, 'REPLACE')
    vg.add([621],0.125, 'REPLACE')
    vg.add([624],0.0, 'REPLACE')
    vg.add([634],0.14705881476402283, 'REPLACE')
    vg.add([635],0.17128026485443115, 'REPLACE')
    vg.add([636],0.0, 'REPLACE')
    vg.add([639],0.0, 'REPLACE')
    vg.add([656],0.0625, 'REPLACE')
    vg.add([665],0.03125, 'REPLACE')
    vg.add([667],0.0, 'REPLACE')
    vg.add([668],0.0, 'REPLACE')
    vg.add([669],0.0, 'REPLACE')
    vg.add([701],0.0, 'REPLACE')
    vg.add([702],0.03125, 'REPLACE')
    vg.add([704],0.25, 'REPLACE')
    vg.add([705],0.5, 'REPLACE')
    vg.add([706],0.125, 'REPLACE')
    vg.add([707],0.125, 'REPLACE')
    vg.add([708],0.5, 'REPLACE')
    vg.add([709],0.25, 'REPLACE')
    vg.add([710],0.125, 'REPLACE')
    vg.add([711],0.5, 'REPLACE')
    vg.add([712],0.25, 'REPLACE')
    vg.add([713],0.2179507315158844, 'REPLACE')
    vg.add([714],0.1720293164253235, 'REPLACE')
    vg = ob.vertex_groups.new("lattice_body")
    vg.add([100],0.0, 'REPLACE')
    vg.add([102],0.00590446125715971, 'REPLACE')
    vg.add([103],0.04452734440565109, 'REPLACE')
    vg.add([104],0.7244764566421509, 'REPLACE')
    vg.add([105],0.6853390336036682, 'REPLACE')
    vg.add([106],0.0, 'REPLACE')
    vg.add([107],0.0, 'REPLACE')
    vg.add([108],0.3860209882259369, 'REPLACE')
    vg.add([109],0.5888264775276184, 'REPLACE')
    vg.add([110],0.8606511354446411, 'REPLACE')
    vg.add([111],0.7358227372169495, 'REPLACE')
    vg.add([112],0.9217325448989868, 'REPLACE')
    vg.add([113],0.0, 'REPLACE')
    vg.add([114],0.6447739601135254, 'REPLACE')
    vg.add([115],0.6564986705780029, 'REPLACE')
    vg.add([116],0.9092148542404175, 'REPLACE')
    vg.add([123],0.03250063583254814, 'REPLACE')
    vg.add([124],0.7544552087783813, 'REPLACE')
    vg.add([125],0.0, 'REPLACE')
    vg.add([126],0.0, 'REPLACE')
    vg.add([127],0.6707723736763, 'REPLACE')
    vg.add([128],0.7345001101493835, 'REPLACE')
    vg.add([129],0.8290111422538757, 'REPLACE')
    vg.add([130],0.0, 'REPLACE')
    vg.add([131],0.8608279228210449, 'REPLACE')
    vg.add([138],0.6906878352165222, 'REPLACE')
    vg.add([139],0.4488464295864105, 'REPLACE')
    vg.add([140],0.0, 'REPLACE')
    vg.add([141],0.0, 'REPLACE')
    vg.add([142],0.125, 'REPLACE')
    vg.add([143],0.125, 'REPLACE')
    vg.add([144],0.125, 'REPLACE')
    vg.add([145],0.125, 'REPLACE')
    vg.add([146],0.125, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([148],0.0, 'REPLACE')
    vg.add([149],0.0, 'REPLACE')
    vg.add([151],0.08830437064170837, 'REPLACE')
    vg.add([152],0.0, 'REPLACE')
    vg.add([155],0.0, 'REPLACE')
    vg.add([156],0.6953911185264587, 'REPLACE')
    vg.add([157],0.005047684069722891, 'REPLACE')
    vg.add([158],0.00036426805309019983, 'REPLACE')
    vg.add([160],0.08830437064170837, 'REPLACE')
    vg.add([161],0.002397442003712058, 'REPLACE')
    vg.add([163],7.042782090138644e-05, 'REPLACE')
    vg.add([164],0.0011008502915501595, 'REPLACE')
    vg.add([168],0.5621654391288757, 'REPLACE')
    vg.add([169],0.5846162438392639, 'REPLACE')
    vg.add([170],0.8649922013282776, 'REPLACE')
    vg.add([171],0.6991016268730164, 'REPLACE')
    vg.add([172],0.854082465171814, 'REPLACE')
    vg.add([173],0.9497610330581665, 'REPLACE')
    vg.add([174],0.005560360848903656, 'REPLACE')
    vg.add([175],0.0032899423968046904, 'REPLACE')
    vg.add([176],0.0, 'REPLACE')
    vg.add([177],0.125, 'REPLACE')
    vg.add([178],0.49383974075317383, 'REPLACE')
    vg.add([179],0.2526257336139679, 'REPLACE')
    vg.add([180],0.607427179813385, 'REPLACE')
    vg.add([181],0.5848677754402161, 'REPLACE')
    vg.add([182],0.8553338646888733, 'REPLACE')
    vg.add([183],0.6332459449768066, 'REPLACE')
    vg.add([184],0.0, 'REPLACE')
    vg.add([185],0.005982766859233379, 'REPLACE')
    vg.add([186],0.6945636868476868, 'REPLACE')
    vg.add([187],0.6924467086791992, 'REPLACE')
    vg.add([188],0.009923746809363365, 'REPLACE')
    vg.add([189],0.005535143427550793, 'REPLACE')
    vg.add([190],0.0261283777654171, 'REPLACE')
    vg.add([191],0.004525559023022652, 'REPLACE')
    vg.add([192],0.5935645699501038, 'REPLACE')
    vg.add([193],0.6993365287780762, 'REPLACE')
    vg.add([194],0.02401943877339363, 'REPLACE')
    vg.add([195],0.6362787485122681, 'REPLACE')
    vg.add([196],0.01567268557846546, 'REPLACE')
    vg.add([197],0.011136708781123161, 'REPLACE')
    vg.add([198],0.002489350037649274, 'REPLACE')
    vg.add([201],0.00015178621106315404, 'REPLACE')
    vg.add([213],0.005293693393468857, 'REPLACE')
    vg.add([214],0.014152783900499344, 'REPLACE')
    vg.add([215],0.008821708150207996, 'REPLACE')
    vg.add([216],0.0035012022126466036, 'REPLACE')
    vg.add([217],0.6670784950256348, 'REPLACE')
    vg.add([218],0.504970908164978, 'REPLACE')
    vg.add([219],0.050370972603559494, 'REPLACE')
    vg.add([220],0.09018402546644211, 'REPLACE')
    vg.add([221],0.0007780279265716672, 'REPLACE')
    vg.add([223],0.4906846582889557, 'REPLACE')
    vg.add([225],1.0, 'REPLACE')
    vg.add([226],0.049646906554698944, 'REPLACE')
    vg.add([227],0.0067450543865561485, 'REPLACE')
    vg.add([254],0.7258909940719604, 'REPLACE')
    vg.add([255],1.0, 'REPLACE')
    vg.add([256],0.004578230902552605, 'REPLACE')
    vg.add([259],0.0011521012056618929, 'REPLACE')
    vg.add([260],0.001363580347970128, 'REPLACE')
    vg.add([263],0.0, 'REPLACE')
    vg.add([264],0.0, 'REPLACE')
    vg.add([265],0.0, 'REPLACE')
    vg.add([274],0.0, 'REPLACE')
    vg.add([275],0.0, 'REPLACE')
    vg.add([276],0.0, 'REPLACE')
    vg.add([277],0.0, 'REPLACE')
    vg.add([278],0.0, 'REPLACE')
    vg.add([279],0.0, 'REPLACE')
    vg.add([281],0.0, 'REPLACE')
    vg.add([282],0.0, 'REPLACE')
    vg.add([283],0.0, 'REPLACE')
    vg.add([284],0.0, 'REPLACE')
    vg.add([286],0.0, 'REPLACE')
    vg.add([328],0.0, 'REPLACE')
    vg.add([329],0.0, 'REPLACE')
    vg.add([332],0.0002558291598688811, 'REPLACE')
    vg.add([335],0.0, 'REPLACE')
    vg.add([336],0.0, 'REPLACE')
    vg.add([337],0.0, 'REPLACE')
    vg.add([338],0.25, 'REPLACE')
    vg.add([339],0.25, 'REPLACE')
    vg.add([340],0.018695354461669922, 'REPLACE')
    vg.add([341],0.12436255067586899, 'REPLACE')
    vg.add([342],0.1711396872997284, 'REPLACE')
    vg.add([347],0.00040391128277406096, 'REPLACE')
    vg.add([348],0.00020859655342064798, 'REPLACE')
    vg.add([351],0.0, 'REPLACE')
    vg.add([352],0.0, 'REPLACE')
    vg.add([353],0.0, 'REPLACE')
    vg.add([354],0.0014287014491856098, 'REPLACE')
    vg.add([355],0.00037510471884161234, 'REPLACE')
    vg.add([365],0.00045351404696702957, 'REPLACE')
    vg.add([367],0.3500065505504608, 'REPLACE')
    vg.add([368],0.08399969339370728, 'REPLACE')
    vg.add([370],0.006993269547820091, 'REPLACE')
    vg.add([371],0.0007891241693869233, 'REPLACE')
    vg.add([394],0.004543588496744633, 'REPLACE')
    vg.add([402],0.0023211033549159765, 'REPLACE')
    vg.add([405],0.01758205145597458, 'REPLACE')
    vg.add([406],0.0, 'REPLACE')
    vg.add([407],0.08731111884117126, 'REPLACE')
    vg.add([408],0.8181297779083252, 'REPLACE')
    vg.add([409],0.0, 'REPLACE')
    vg.add([411],0.3875315189361572, 'REPLACE')
    vg.add([412],0.047096531838178635, 'REPLACE')
    vg.add([413],0.32853347063064575, 'REPLACE')
    vg.add([414],0.0007925153477117419, 'REPLACE')
    vg.add([417],0.940525472164154, 'REPLACE')
    vg.add([418],0.9461123943328857, 'REPLACE')
    vg.add([419],0.5069395899772644, 'REPLACE')
    vg.add([420],0.25, 'REPLACE')
    vg.add([421],0.01582730934023857, 'REPLACE')
    vg.add([422],0.004393771290779114, 'REPLACE')
    vg.add([429],0.0, 'REPLACE')
    vg.add([430],0.0, 'REPLACE')
    vg.add([433],0.01233888603746891, 'REPLACE')
    vg.add([436],0.0, 'REPLACE')
    vg.add([437],0.0, 'REPLACE')
    vg.add([438],0.03148753196001053, 'REPLACE')
    vg.add([439],0.5783082246780396, 'REPLACE')
    vg.add([440],0.8404785990715027, 'REPLACE')
    vg.add([441],0.14574536681175232, 'REPLACE')
    vg.add([445],0.0010144509142264724, 'REPLACE')
    vg.add([449],0.006033852696418762, 'REPLACE')
    vg.add([450],0.015942944213747978, 'REPLACE')
    vg.add([451],0.01951073855161667, 'REPLACE')
    vg.add([452],0.00046463750186376274, 'REPLACE')
    vg.add([455],0.0, 'REPLACE')
    vg.add([456],0.0, 'REPLACE')
    vg.add([457],0.8853026628494263, 'REPLACE')
    vg.add([458],1.0, 'REPLACE')
    vg.add([467],0.0, 'REPLACE')
    vg.add([468],0.0, 'REPLACE')
    vg.add([486],0.0, 'REPLACE')
    vg.add([490],0.0, 'REPLACE')
    vg.add([491],0.0, 'REPLACE')
    vg.add([492],0.0, 'REPLACE')
    vg.add([493],0.0, 'REPLACE')
    vg.add([602],0.0, 'REPLACE')
    vg.add([604],0.00590446125715971, 'REPLACE')
    vg.add([605],0.04452734440565109, 'REPLACE')
    vg.add([606],0.7244764566421509, 'REPLACE')
    vg.add([607],0.6853390336036682, 'REPLACE')
    vg.add([608],0.0, 'REPLACE')
    vg.add([609],0.0, 'REPLACE')
    vg.add([610],0.3860209882259369, 'REPLACE')
    vg.add([611],0.5888264775276184, 'REPLACE')
    vg.add([612],0.8606511354446411, 'REPLACE')
    vg.add([613],0.7358227372169495, 'REPLACE')
    vg.add([614],0.9217325448989868, 'REPLACE')
    vg.add([615],0.0, 'REPLACE')
    vg.add([616],0.6447739601135254, 'REPLACE')
    vg.add([617],0.6564986705780029, 'REPLACE')
    vg.add([618],0.9092148542404175, 'REPLACE')
    vg.add([625],0.03250063583254814, 'REPLACE')
    vg.add([626],0.7544552087783813, 'REPLACE')
    vg.add([627],0.0, 'REPLACE')
    vg.add([628],0.0, 'REPLACE')
    vg.add([629],0.6707723736763, 'REPLACE')
    vg.add([630],0.7345001101493835, 'REPLACE')
    vg.add([631],0.8290111422538757, 'REPLACE')
    vg.add([632],0.0, 'REPLACE')
    vg.add([633],0.8608279228210449, 'REPLACE')
    vg.add([640],0.6906878352165222, 'REPLACE')
    vg.add([641],0.4488464295864105, 'REPLACE')
    vg.add([642],0.0, 'REPLACE')
    vg.add([643],0.0, 'REPLACE')
    vg.add([644],0.125, 'REPLACE')
    vg.add([645],0.125, 'REPLACE')
    vg.add([646],0.125, 'REPLACE')
    vg.add([647],0.125, 'REPLACE')
    vg.add([648],0.125, 'REPLACE')
    vg.add([649],0.0, 'REPLACE')
    vg.add([650],0.0, 'REPLACE')
    vg.add([651],0.0, 'REPLACE')
    vg.add([653],0.08830437064170837, 'REPLACE')
    vg.add([654],0.0, 'REPLACE')
    vg.add([657],0.0, 'REPLACE')
    vg.add([658],0.6953911185264587, 'REPLACE')
    vg.add([659],0.005047684069722891, 'REPLACE')
    vg.add([660],0.00036426805309019983, 'REPLACE')
    vg.add([662],0.08830437064170837, 'REPLACE')
    vg.add([663],0.002397442003712058, 'REPLACE')
    vg.add([665],7.042782090138644e-05, 'REPLACE')
    vg.add([666],0.0011008502915501595, 'REPLACE')
    vg.add([670],0.5621654391288757, 'REPLACE')
    vg.add([671],0.5846162438392639, 'REPLACE')
    vg.add([672],0.8649922013282776, 'REPLACE')
    vg.add([673],0.6991016268730164, 'REPLACE')
    vg.add([674],0.854082465171814, 'REPLACE')
    vg.add([675],0.9497610330581665, 'REPLACE')
    vg.add([676],0.005560360848903656, 'REPLACE')
    vg.add([677],0.0032899423968046904, 'REPLACE')
    vg.add([678],0.0, 'REPLACE')
    vg.add([679],0.125, 'REPLACE')
    vg.add([680],0.49383974075317383, 'REPLACE')
    vg.add([681],0.2526257336139679, 'REPLACE')
    vg.add([682],0.607427179813385, 'REPLACE')
    vg.add([683],0.5848677754402161, 'REPLACE')
    vg.add([684],0.8553338646888733, 'REPLACE')
    vg.add([685],0.6332459449768066, 'REPLACE')
    vg.add([686],0.0, 'REPLACE')
    vg.add([687],0.005982766859233379, 'REPLACE')
    vg.add([688],0.6945636868476868, 'REPLACE')
    vg.add([689],0.6924467086791992, 'REPLACE')
    vg.add([690],0.009923746809363365, 'REPLACE')
    vg.add([691],0.005535143427550793, 'REPLACE')
    vg.add([692],0.0261283777654171, 'REPLACE')
    vg.add([693],0.004525559023022652, 'REPLACE')
    vg.add([694],0.5935645699501038, 'REPLACE')
    vg.add([695],0.6993365287780762, 'REPLACE')
    vg.add([696],0.02401943877339363, 'REPLACE')
    vg.add([697],0.6362787485122681, 'REPLACE')
    vg.add([698],0.01567268557846546, 'REPLACE')
    vg.add([699],0.011136708781123161, 'REPLACE')
    vg.add([700],0.002489350037649274, 'REPLACE')
    vg.add([703],0.00015178621106315404, 'REPLACE')
    vg.add([715],0.005293693393468857, 'REPLACE')
    vg.add([716],0.014152783900499344, 'REPLACE')
    vg.add([717],0.008821708150207996, 'REPLACE')
    vg.add([718],0.0035012022126466036, 'REPLACE')
    vg.add([719],0.6670784950256348, 'REPLACE')
    vg.add([720],0.504970908164978, 'REPLACE')
    vg.add([721],0.050370972603559494, 'REPLACE')
    vg.add([722],0.09018402546644211, 'REPLACE')
    vg.add([723],0.0007780279265716672, 'REPLACE')
    vg.add([725],0.4906846582889557, 'REPLACE')
    vg.add([727],1.0, 'REPLACE')
    vg.add([728],0.049646906554698944, 'REPLACE')
    vg.add([729],0.0067450543865561485, 'REPLACE')
    vg.add([756],0.7258909940719604, 'REPLACE')
    vg.add([757],1.0, 'REPLACE')
    vg.add([758],0.004578230902552605, 'REPLACE')
    vg.add([761],0.0011521012056618929, 'REPLACE')
    vg.add([762],0.001363580347970128, 'REPLACE')
    vg.add([765],0.0, 'REPLACE')
    vg.add([766],0.0, 'REPLACE')
    vg.add([767],0.0, 'REPLACE')
    vg.add([776],0.0, 'REPLACE')
    vg.add([777],0.0, 'REPLACE')
    vg.add([778],0.0, 'REPLACE')
    vg.add([779],0.0, 'REPLACE')
    vg.add([780],0.0, 'REPLACE')
    vg.add([781],0.0, 'REPLACE')
    vg.add([783],0.0, 'REPLACE')
    vg.add([784],0.0, 'REPLACE')
    vg.add([785],0.0, 'REPLACE')
    vg.add([786],0.0, 'REPLACE')
    vg.add([788],0.0, 'REPLACE')
    vg.add([830],0.0, 'REPLACE')
    vg.add([831],0.0, 'REPLACE')
    vg.add([834],0.0002558291598688811, 'REPLACE')
    vg.add([837],0.0, 'REPLACE')
    vg.add([838],0.0, 'REPLACE')
    vg.add([839],0.0, 'REPLACE')
    vg.add([840],0.25, 'REPLACE')
    vg.add([841],0.25, 'REPLACE')
    vg.add([842],0.018695354461669922, 'REPLACE')
    vg.add([843],0.12436255067586899, 'REPLACE')
    vg.add([844],0.1711396872997284, 'REPLACE')
    vg.add([849],0.00040391128277406096, 'REPLACE')
    vg.add([850],0.00020859655342064798, 'REPLACE')
    vg.add([853],0.0, 'REPLACE')
    vg.add([854],0.0, 'REPLACE')
    vg.add([855],0.0, 'REPLACE')
    vg.add([856],0.0014287014491856098, 'REPLACE')
    vg.add([857],0.00037510471884161234, 'REPLACE')
    vg.add([867],0.00045351404696702957, 'REPLACE')
    vg.add([869],0.3500065505504608, 'REPLACE')
    vg.add([870],0.08399969339370728, 'REPLACE')
    vg.add([872],0.006993269547820091, 'REPLACE')
    vg.add([873],0.0007891241693869233, 'REPLACE')
    vg.add([896],0.004543588496744633, 'REPLACE')
    vg.add([904],0.0023211033549159765, 'REPLACE')
    vg.add([907],0.01758205145597458, 'REPLACE')
    vg.add([908],0.0, 'REPLACE')
    vg.add([909],0.08731111884117126, 'REPLACE')
    vg.add([910],0.8181297779083252, 'REPLACE')
    vg.add([911],0.0, 'REPLACE')
    vg.add([913],0.3875315189361572, 'REPLACE')
    vg.add([914],0.047096531838178635, 'REPLACE')
    vg.add([915],0.32853347063064575, 'REPLACE')
    vg.add([916],0.0007925153477117419, 'REPLACE')
    vg.add([919],0.940525472164154, 'REPLACE')
    vg.add([920],0.9461123943328857, 'REPLACE')
    vg.add([921],0.5069395899772644, 'REPLACE')
    vg.add([922],0.25, 'REPLACE')
    vg.add([923],0.01582730934023857, 'REPLACE')
    vg.add([924],0.004393771290779114, 'REPLACE')
    vg.add([931],0.0, 'REPLACE')
    vg.add([932],0.0, 'REPLACE')
    vg.add([935],0.01233888603746891, 'REPLACE')
    vg.add([938],0.0, 'REPLACE')
    vg.add([939],0.0, 'REPLACE')
    vg.add([940],0.03148753196001053, 'REPLACE')
    vg.add([941],0.5783082246780396, 'REPLACE')
    vg.add([942],0.8404785990715027, 'REPLACE')
    vg.add([943],0.14574536681175232, 'REPLACE')
    vg.add([947],0.0010144509142264724, 'REPLACE')
    vg.add([951],0.006033852696418762, 'REPLACE')
    vg.add([952],0.015942944213747978, 'REPLACE')
    vg.add([953],0.01951073855161667, 'REPLACE')
    vg.add([954],0.00046463750186376274, 'REPLACE')
    vg.add([957],0.0, 'REPLACE')
    vg.add([958],0.0, 'REPLACE')
    vg.add([959],0.8853026628494263, 'REPLACE')
    vg.add([960],1.0, 'REPLACE')
    vg.add([969],0.0, 'REPLACE')
    vg.add([970],0.0, 'REPLACE')
    vg.add([988],0.0, 'REPLACE')
    vg.add([992],0.0, 'REPLACE')
    vg.add([993],0.0, 'REPLACE')
    vg.add([994],0.0, 'REPLACE')
    vg.add([995],0.0, 'REPLACE')
    vg.add([1005],0.0, 'REPLACE')
    vg.add([1006],0.0, 'REPLACE')
    vg.add([1007],0.0, 'REPLACE')
    vg.add([1008],0.8720629811286926, 'REPLACE')
    vg.add([1009],0.6900291442871094, 'REPLACE')
    vg.add([1010],0.125, 'REPLACE')
    vg.add([1011],0.8956473469734192, 'REPLACE')
    vg.add([1012],0.9452072381973267, 'REPLACE')
    vg.add([1013],0.9308123588562012, 'REPLACE')
    vg.add([1014],0.6067253947257996, 'REPLACE')
    vg.add([1015],0.505375862121582, 'REPLACE')
    vg.add([1016],0.125, 'REPLACE')
    vg.add([1017],0.8204004764556885, 'REPLACE')
    vg.add([1018],0.0, 'REPLACE')
    vg.add([1019],0.00351973669603467, 'REPLACE')
    vg.add([1020],0.0015726902056485415, 'REPLACE')
    vg.add([1021],0.007288879714906216, 'REPLACE')
    vg.add([1022],0.25, 'REPLACE')
    vg.add([1034],0.94420325756073, 'REPLACE')
    vg.add([1035],0.9340744018554688, 'REPLACE')
    vg.add([1036],0.5835567712783813, 'REPLACE')
    vg.add([1039],0.03855287283658981, 'REPLACE')
    vg.add([1041],0.2509493827819824, 'REPLACE')
    vg.add([1045],0.8401229381561279, 'REPLACE')
    vg.add([1051],0.9675661325454712, 'REPLACE')
    vg.add([1052],0.9723882675170898, 'REPLACE')
    vg.add([1054],0.007968222722411156, 'REPLACE')
    vg = ob.vertex_groups.new("maxi")
    vg.add([236],1.0, 'REPLACE')
    vg.add([237],1.0, 'REPLACE')
    vg.add([240],0.5, 'REPLACE')
    vg.add([242],0.5, 'REPLACE')
    vg.add([243],1.0, 'REPLACE')
    vg.add([245],1.0, 'REPLACE')
    vg.add([246],1.0, 'REPLACE')
    vg.add([247],1.0, 'REPLACE')
    vg.add([360],1.0, 'REPLACE')
    vg.add([415],1.0, 'REPLACE')
    vg.add([494],0.5, 'REPLACE')
    vg.add([495],0.5, 'REPLACE')
    vg.add([498],0.25, 'REPLACE')
    vg.add([738],1.0, 'REPLACE')
    vg.add([739],1.0, 'REPLACE')
    vg.add([742],0.5, 'REPLACE')
    vg.add([744],0.5, 'REPLACE')
    vg.add([745],1.0, 'REPLACE')
    vg.add([747],1.0, 'REPLACE')
    vg.add([748],1.0, 'REPLACE')
    vg.add([749],1.0, 'REPLACE')
    vg.add([862],1.0, 'REPLACE')
    vg.add([917],1.0, 'REPLACE')
    vg.add([996],0.5, 'REPLACE')
    vg.add([997],0.5, 'REPLACE')
    vg.add([1000],0.25, 'REPLACE')
    vg.add([1001],0.5, 'REPLACE')
    vg.add([1024],1.0, 'REPLACE')
    vg.add([1028],1.0, 'REPLACE')
    vg.add([1029],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("neck_1_def")
    vg.add([222],0.10000000149011612, 'REPLACE')
    vg.add([224],0.10000000149011612, 'REPLACE')
    vg.add([226],1.0, 'REPLACE')
    vg.add([227],1.0, 'REPLACE')
    vg.add([228],1.0, 'REPLACE')
    vg.add([229],1.0, 'REPLACE')
    vg.add([230],1.0, 'REPLACE')
    vg.add([358],1.0, 'REPLACE')
    vg.add([361],0.5, 'REPLACE')
    vg.add([362],0.5, 'REPLACE')
    vg.add([363],0.5, 'REPLACE')
    vg.add([364],0.5, 'REPLACE')
    vg.add([365],0.5, 'REPLACE')
    vg.add([366],0.5, 'REPLACE')
    vg.add([367],0.10000000149011612, 'REPLACE')
    vg.add([368],0.10000000149011612, 'REPLACE')
    vg.add([369],0.10000000149011612, 'REPLACE')
    vg.add([370],0.10000000149011612, 'REPLACE')
    vg.add([371],0.10000000149011612, 'REPLACE')
    vg.add([372],1.0, 'REPLACE')
    vg.add([378],0.5, 'REPLACE')
    vg.add([379],0.10000000149011612, 'REPLACE')
    vg.add([380],0.10000000149011612, 'REPLACE')
    vg.add([381],1.0, 'REPLACE')
    vg.add([386],0.5, 'REPLACE')
    vg.add([389],0.10000000149011612, 'REPLACE')
    vg.add([390],1.0, 'REPLACE')
    vg.add([397],0.5, 'REPLACE')
    vg.add([414],1.0, 'REPLACE')
    vg.add([416],0.5, 'REPLACE')
    vg.add([724],0.10000000149011612, 'REPLACE')
    vg.add([726],0.10000000149011612, 'REPLACE')
    vg.add([728],1.0, 'REPLACE')
    vg.add([729],1.0, 'REPLACE')
    vg.add([730],1.0, 'REPLACE')
    vg.add([731],1.0, 'REPLACE')
    vg.add([732],1.0, 'REPLACE')
    vg.add([860],1.0, 'REPLACE')
    vg.add([863],0.5, 'REPLACE')
    vg.add([864],0.5, 'REPLACE')
    vg.add([865],0.5, 'REPLACE')
    vg.add([866],0.5, 'REPLACE')
    vg.add([867],0.5, 'REPLACE')
    vg.add([868],0.5, 'REPLACE')
    vg.add([869],0.10000000149011612, 'REPLACE')
    vg.add([870],0.10000000149011612, 'REPLACE')
    vg.add([871],0.10000000149011612, 'REPLACE')
    vg.add([872],0.10000000149011612, 'REPLACE')
    vg.add([873],0.10000000149011612, 'REPLACE')
    vg.add([874],1.0, 'REPLACE')
    vg.add([880],0.5, 'REPLACE')
    vg.add([881],0.10000000149011612, 'REPLACE')
    vg.add([882],0.10000000149011612, 'REPLACE')
    vg.add([883],1.0, 'REPLACE')
    vg.add([888],0.5, 'REPLACE')
    vg.add([891],0.10000000149011612, 'REPLACE')
    vg.add([892],1.0, 'REPLACE')
    vg.add([899],0.5, 'REPLACE')
    vg.add([916],1.0, 'REPLACE')
    vg.add([918],0.5, 'REPLACE')
    vg.add([1037],1.0, 'REPLACE')
    vg.add([1038],0.5, 'REPLACE')
    vg.add([1039],1.0, 'REPLACE')
    vg.add([1040],0.5, 'REPLACE')
    vg.add([1041],0.10000000149011612, 'REPLACE')
    vg.add([1043],0.10000000149011612, 'REPLACE')
    vg = ob.vertex_groups.new("neck_2_def")
    vg.add([231],0.0, 'REPLACE')
    vg.add([232],0.0, 'REPLACE')
    vg.add([233],0.0, 'REPLACE')
    vg.add([234],0.0, 'REPLACE')
    vg.add([235],0.0, 'REPLACE')
    vg.add([357],0.0, 'REPLACE')
    vg.add([359],0.0, 'REPLACE')
    vg.add([361],1.0, 'REPLACE')
    vg.add([362],1.0, 'REPLACE')
    vg.add([363],1.0, 'REPLACE')
    vg.add([364],1.0, 'REPLACE')
    vg.add([365],1.0, 'REPLACE')
    vg.add([366],1.0, 'REPLACE')
    vg.add([373],0.0, 'REPLACE')
    vg.add([378],1.0, 'REPLACE')
    vg.add([382],0.0, 'REPLACE')
    vg.add([386],1.0, 'REPLACE')
    vg.add([387],0.03125, 'REPLACE')
    vg.add([391],0.0, 'REPLACE')
    vg.add([397],1.0, 'REPLACE')
    vg.add([416],1.0, 'REPLACE')
    vg.add([472],0.5, 'REPLACE')
    vg.add([473],0.5, 'REPLACE')
    vg.add([474],0.5, 'REPLACE')
    vg.add([475],0.5, 'REPLACE')
    vg.add([476],0.5, 'REPLACE')
    vg.add([477],0.5, 'REPLACE')
    vg.add([478],0.5, 'REPLACE')
    vg.add([479],0.5, 'REPLACE')
    vg.add([480],0.5, 'REPLACE')
    vg.add([481],0.5, 'REPLACE')
    vg.add([733],0.0, 'REPLACE')
    vg.add([734],0.0, 'REPLACE')
    vg.add([735],0.0, 'REPLACE')
    vg.add([736],0.0, 'REPLACE')
    vg.add([737],0.0, 'REPLACE')
    vg.add([859],0.0, 'REPLACE')
    vg.add([861],0.0, 'REPLACE')
    vg.add([863],1.0, 'REPLACE')
    vg.add([864],1.0, 'REPLACE')
    vg.add([865],1.0, 'REPLACE')
    vg.add([866],1.0, 'REPLACE')
    vg.add([867],1.0, 'REPLACE')
    vg.add([868],1.0, 'REPLACE')
    vg.add([875],0.0, 'REPLACE')
    vg.add([880],1.0, 'REPLACE')
    vg.add([884],0.0, 'REPLACE')
    vg.add([888],1.0, 'REPLACE')
    vg.add([889],0.03125, 'REPLACE')
    vg.add([893],0.0, 'REPLACE')
    vg.add([899],1.0, 'REPLACE')
    vg.add([918],1.0, 'REPLACE')
    vg.add([974],0.5, 'REPLACE')
    vg.add([975],0.5, 'REPLACE')
    vg.add([976],0.5, 'REPLACE')
    vg.add([977],0.5, 'REPLACE')
    vg.add([978],0.5, 'REPLACE')
    vg.add([979],0.5, 'REPLACE')
    vg.add([980],0.5, 'REPLACE')
    vg.add([981],0.5, 'REPLACE')
    vg.add([982],0.5, 'REPLACE')
    vg.add([983],0.5, 'REPLACE')
    vg.add([1023],0.0, 'REPLACE')
    vg.add([1025],0.0, 'REPLACE')
    vg.add([1038],1.0, 'REPLACE')
    vg.add([1040],1.0, 'REPLACE')
    vg.add([1044],0.03125, 'REPLACE')
    vg.add([1055],0.5, 'REPLACE')
    vg.add([1056],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("neck_3_def")
    vg.add([231],0.5, 'REPLACE')
    vg.add([232],0.5, 'REPLACE')
    vg.add([233],0.5, 'REPLACE')
    vg.add([234],0.5, 'REPLACE')
    vg.add([235],0.5, 'REPLACE')
    vg.add([236],0.125, 'REPLACE')
    vg.add([237],0.125, 'REPLACE')
    vg.add([238],0.125, 'REPLACE')
    vg.add([239],0.125, 'REPLACE')
    vg.add([240],0.125, 'REPLACE')
    vg.add([241],0.0, 'REPLACE')
    vg.add([242],0.0, 'REPLACE')
    vg.add([244],0.0, 'REPLACE')
    vg.add([246],0.0, 'REPLACE')
    vg.add([247],0.0, 'REPLACE')
    vg.add([250],0.0, 'REPLACE')
    vg.add([357],0.5, 'REPLACE')
    vg.add([359],0.5, 'REPLACE')
    vg.add([360],0.125, 'REPLACE')
    vg.add([373],0.5, 'REPLACE')
    vg.add([374],0.125, 'REPLACE')
    vg.add([375],0.0, 'REPLACE')
    vg.add([382],0.5, 'REPLACE')
    vg.add([383],0.125, 'REPLACE')
    vg.add([384],0.0, 'REPLACE')
    vg.add([387],0.03125, 'REPLACE')
    vg.add([391],0.5, 'REPLACE')
    vg.add([392],0.0, 'REPLACE')
    vg.add([396],0.125, 'REPLACE')
    vg.add([415],0.125, 'REPLACE')
    vg.add([423],0.0, 'REPLACE')
    vg.add([472],0.5, 'REPLACE')
    vg.add([473],0.5, 'REPLACE')
    vg.add([474],0.5, 'REPLACE')
    vg.add([475],0.5, 'REPLACE')
    vg.add([476],0.5, 'REPLACE')
    vg.add([477],0.5, 'REPLACE')
    vg.add([478],0.5, 'REPLACE')
    vg.add([479],0.5, 'REPLACE')
    vg.add([480],0.5, 'REPLACE')
    vg.add([481],0.5, 'REPLACE')
    vg.add([496],0.0, 'REPLACE')
    vg.add([497],0.0, 'REPLACE')
    vg.add([498],0.0, 'REPLACE')
    vg.add([499],0.0, 'REPLACE')
    vg.add([500],0.0, 'REPLACE')
    vg.add([501],0.0, 'REPLACE')
    vg.add([733],0.5, 'REPLACE')
    vg.add([734],0.5, 'REPLACE')
    vg.add([735],0.5, 'REPLACE')
    vg.add([736],0.5, 'REPLACE')
    vg.add([737],0.5, 'REPLACE')
    vg.add([738],0.125, 'REPLACE')
    vg.add([739],0.125, 'REPLACE')
    vg.add([740],0.125, 'REPLACE')
    vg.add([741],0.125, 'REPLACE')
    vg.add([742],0.125, 'REPLACE')
    vg.add([743],0.0, 'REPLACE')
    vg.add([744],0.0, 'REPLACE')
    vg.add([746],0.0, 'REPLACE')
    vg.add([748],0.0, 'REPLACE')
    vg.add([749],0.0, 'REPLACE')
    vg.add([752],0.0, 'REPLACE')
    vg.add([859],0.5, 'REPLACE')
    vg.add([861],0.5, 'REPLACE')
    vg.add([862],0.125, 'REPLACE')
    vg.add([875],0.5, 'REPLACE')
    vg.add([876],0.125, 'REPLACE')
    vg.add([877],0.0, 'REPLACE')
    vg.add([884],0.5, 'REPLACE')
    vg.add([885],0.125, 'REPLACE')
    vg.add([886],0.0, 'REPLACE')
    vg.add([889],0.03125, 'REPLACE')
    vg.add([893],0.5, 'REPLACE')
    vg.add([894],0.0, 'REPLACE')
    vg.add([898],0.125, 'REPLACE')
    vg.add([917],0.125, 'REPLACE')
    vg.add([925],0.0, 'REPLACE')
    vg.add([974],0.5, 'REPLACE')
    vg.add([975],0.5, 'REPLACE')
    vg.add([976],0.5, 'REPLACE')
    vg.add([977],0.5, 'REPLACE')
    vg.add([978],0.5, 'REPLACE')
    vg.add([979],0.5, 'REPLACE')
    vg.add([980],0.5, 'REPLACE')
    vg.add([981],0.5, 'REPLACE')
    vg.add([982],0.5, 'REPLACE')
    vg.add([983],0.5, 'REPLACE')
    vg.add([998],0.0, 'REPLACE')
    vg.add([999],0.0, 'REPLACE')
    vg.add([1000],0.0, 'REPLACE')
    vg.add([1002],0.0, 'REPLACE')
    vg.add([1003],0.0, 'REPLACE')
    vg.add([1004],0.0, 'REPLACE')
    vg.add([1023],0.125, 'REPLACE')
    vg.add([1024],0.125, 'REPLACE')
    vg.add([1025],0.5, 'REPLACE')
    vg.add([1026],0.125, 'REPLACE')
    vg.add([1027],0.0, 'REPLACE')
    vg.add([1029],0.0, 'REPLACE')
    vg.add([1030],0.0, 'REPLACE')
    vg.add([1031],0.0, 'REPLACE')
    vg.add([1044],0.03125, 'REPLACE')
    vg.add([1046],0.0, 'REPLACE')
    vg.add([1055],0.5, 'REPLACE')
    vg.add([1056],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("pelvis_def")
    vg.add([95],0.0, 'REPLACE')
    vg.add([100],0.0, 'REPLACE')
    vg.add([101],0.0, 'REPLACE')
    vg.add([102],0.17850175499916077, 'REPLACE')
    vg.add([103],0.5, 'REPLACE')
    vg.add([104],0.5, 'REPLACE')
    vg.add([105],0.9999104738235474, 'REPLACE')
    vg.add([106],1.0, 'REPLACE')
    vg.add([107],0.75, 'REPLACE')
    vg.add([108],1.0, 'REPLACE')
    vg.add([109],1.0, 'REPLACE')
    vg.add([110],1.0, 'REPLACE')
    vg.add([111],1.0, 'REPLACE')
    vg.add([112],0.5376735329627991, 'REPLACE')
    vg.add([113],1.0, 'REPLACE')
    vg.add([114],1.0, 'REPLACE')
    vg.add([115],1.0, 'REPLACE')
    vg.add([116],1.0, 'REPLACE')
    vg.add([119],0.0, 'REPLACE')
    vg.add([122],0.0, 'REPLACE')
    vg.add([123],0.5, 'REPLACE')
    vg.add([124],0.4133165180683136, 'REPLACE')
    vg.add([125],0.9577429294586182, 'REPLACE')
    vg.add([126],0.75, 'REPLACE')
    vg.add([127],1.0, 'REPLACE')
    vg.add([128],1.0, 'REPLACE')
    vg.add([129],0.9993005394935608, 'REPLACE')
    vg.add([130],1.0, 'REPLACE')
    vg.add([131],1.0, 'REPLACE')
    vg.add([138],0.2662760615348816, 'REPLACE')
    vg.add([139],0.7916440367698669, 'REPLACE')
    vg.add([140],1.0, 'REPLACE')
    vg.add([141],1.0, 'REPLACE')
    vg.add([142],0.25, 'REPLACE')
    vg.add([143],0.25, 'REPLACE')
    vg.add([144],0.25, 'REPLACE')
    vg.add([145],0.25, 'REPLACE')
    vg.add([146],0.24459199607372284, 'REPLACE')
    vg.add([147],0.9541698098182678, 'REPLACE')
    vg.add([156],1.0, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([168],0.6441494226455688, 'REPLACE')
    vg.add([169],0.9284519553184509, 'REPLACE')
    vg.add([170],1.0, 'REPLACE')
    vg.add([171],0.5, 'REPLACE')
    vg.add([172],1.0, 'REPLACE')
    vg.add([173],1.0, 'REPLACE')
    vg.add([174],0.3148021697998047, 'REPLACE')
    vg.add([175],1.0, 'REPLACE')
    vg.add([176],0.75, 'REPLACE')
    vg.add([177],0.25, 'REPLACE')
    vg.add([178],0.75, 'REPLACE')
    vg.add([179],0.75, 'REPLACE')
    vg.add([180],0.75, 'REPLACE')
    vg.add([181],1.0, 'REPLACE')
    vg.add([182],1.0, 'REPLACE')
    vg.add([183],1.0, 'REPLACE')
    vg.add([184],0.5, 'REPLACE')
    vg.add([185],1.0, 'REPLACE')
    vg.add([186],0.7673159837722778, 'REPLACE')
    vg.add([187],0.75, 'REPLACE')
    vg.add([188],1.0, 'REPLACE')
    vg.add([189],0.9770848751068115, 'REPLACE')
    vg.add([190],0.5, 'REPLACE')
    vg.add([191],0.1000029668211937, 'REPLACE')
    vg.add([192],0.25, 'REPLACE')
    vg.add([193],0.25, 'REPLACE')
    vg.add([194],0.25, 'REPLACE')
    vg.add([195],0.25, 'REPLACE')
    vg.add([196],0.25, 'REPLACE')
    vg.add([197],0.10738161206245422, 'REPLACE')
    vg.add([198],0.10974621772766113, 'REPLACE')
    vg.add([213],0.29053911566734314, 'REPLACE')
    vg.add([214],1.0, 'REPLACE')
    vg.add([215],0.8836579918861389, 'REPLACE')
    vg.add([216],0.10856391489505768, 'REPLACE')
    vg.add([597],0.0, 'REPLACE')
    vg.add([602],0.0, 'REPLACE')
    vg.add([603],0.0, 'REPLACE')
    vg.add([604],0.17850175499916077, 'REPLACE')
    vg.add([605],0.5, 'REPLACE')
    vg.add([606],0.5, 'REPLACE')
    vg.add([607],0.9999104738235474, 'REPLACE')
    vg.add([608],1.0, 'REPLACE')
    vg.add([609],0.75, 'REPLACE')
    vg.add([610],1.0, 'REPLACE')
    vg.add([611],1.0, 'REPLACE')
    vg.add([612],1.0, 'REPLACE')
    vg.add([613],1.0, 'REPLACE')
    vg.add([614],0.5376735329627991, 'REPLACE')
    vg.add([615],1.0, 'REPLACE')
    vg.add([616],1.0, 'REPLACE')
    vg.add([617],1.0, 'REPLACE')
    vg.add([618],1.0, 'REPLACE')
    vg.add([621],0.0, 'REPLACE')
    vg.add([624],0.0, 'REPLACE')
    vg.add([625],0.5, 'REPLACE')
    vg.add([626],0.4133165180683136, 'REPLACE')
    vg.add([627],0.9577429294586182, 'REPLACE')
    vg.add([628],0.75, 'REPLACE')
    vg.add([629],1.0, 'REPLACE')
    vg.add([630],1.0, 'REPLACE')
    vg.add([631],0.9993005394935608, 'REPLACE')
    vg.add([632],1.0, 'REPLACE')
    vg.add([633],1.0, 'REPLACE')
    vg.add([640],0.2662760615348816, 'REPLACE')
    vg.add([641],0.7916440367698669, 'REPLACE')
    vg.add([642],1.0, 'REPLACE')
    vg.add([643],1.0, 'REPLACE')
    vg.add([644],0.25, 'REPLACE')
    vg.add([645],0.25, 'REPLACE')
    vg.add([646],0.25, 'REPLACE')
    vg.add([647],0.25, 'REPLACE')
    vg.add([648],0.24459199607372284, 'REPLACE')
    vg.add([649],0.9541698098182678, 'REPLACE')
    vg.add([658],1.0, 'REPLACE')
    vg.add([667],0.0, 'REPLACE')
    vg.add([669],0.0, 'REPLACE')
    vg.add([670],0.6441494226455688, 'REPLACE')
    vg.add([671],0.9284519553184509, 'REPLACE')
    vg.add([672],1.0, 'REPLACE')
    vg.add([673],0.5, 'REPLACE')
    vg.add([674],1.0, 'REPLACE')
    vg.add([675],1.0, 'REPLACE')
    vg.add([676],0.3148021697998047, 'REPLACE')
    vg.add([677],1.0, 'REPLACE')
    vg.add([678],0.75, 'REPLACE')
    vg.add([679],0.25, 'REPLACE')
    vg.add([680],0.75, 'REPLACE')
    vg.add([681],0.75, 'REPLACE')
    vg.add([682],0.75, 'REPLACE')
    vg.add([683],1.0, 'REPLACE')
    vg.add([684],1.0, 'REPLACE')
    vg.add([685],1.0, 'REPLACE')
    vg.add([686],0.5, 'REPLACE')
    vg.add([687],1.0, 'REPLACE')
    vg.add([688],0.7673159837722778, 'REPLACE')
    vg.add([689],0.75, 'REPLACE')
    vg.add([690],1.0, 'REPLACE')
    vg.add([691],0.9770848751068115, 'REPLACE')
    vg.add([692],0.5, 'REPLACE')
    vg.add([693],0.1000029668211937, 'REPLACE')
    vg.add([694],0.25, 'REPLACE')
    vg.add([695],0.25, 'REPLACE')
    vg.add([696],0.25, 'REPLACE')
    vg.add([697],0.25, 'REPLACE')
    vg.add([698],0.25, 'REPLACE')
    vg.add([699],0.10738161206245422, 'REPLACE')
    vg.add([700],0.10974621772766113, 'REPLACE')
    vg.add([715],0.29053911566734314, 'REPLACE')
    vg.add([716],1.0, 'REPLACE')
    vg.add([717],0.8836579918861389, 'REPLACE')
    vg.add([718],0.10856391489505768, 'REPLACE')
    vg.add([1005],1.0, 'REPLACE')
    vg.add([1006],1.0, 'REPLACE')
    vg.add([1007],0.75, 'REPLACE')
    vg.add([1008],1.0, 'REPLACE')
    vg.add([1009],1.0, 'REPLACE')
    vg.add([1010],0.19778409600257874, 'REPLACE')
    vg.add([1011],1.0, 'REPLACE')
    vg.add([1012],1.0, 'REPLACE')
    vg.add([1013],1.0, 'REPLACE')
    vg.add([1014],1.0, 'REPLACE')
    vg.add([1015],0.75, 'REPLACE')
    vg.add([1016],0.25, 'REPLACE')
    vg.add([1017],1.0, 'REPLACE')
    vg.add([1018],0.9885424375534058, 'REPLACE')
    vg.add([1019],0.9885424375534058, 'REPLACE')
    vg.add([1020],1.0, 'REPLACE')
    vg.add([1021],1.0, 'REPLACE')
    vg.add([1022],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("pelvis_def_L")
    vg.add([102],0.25, 'REPLACE')
    vg.add([103],0.5, 'REPLACE')
    vg.add([104],0.34144437313079834, 'REPLACE')
    vg.add([105],0.17283818125724792, 'REPLACE')
    vg.add([106],0.9999998807907104, 'REPLACE')
    vg.add([109],0.25, 'REPLACE')
    vg.add([110],0.25, 'REPLACE')
    vg.add([111],0.898625910282135, 'REPLACE')
    vg.add([112],0.846923291683197, 'REPLACE')
    vg.add([113],0.5, 'REPLACE')
    vg.add([114],0.6275080442428589, 'REPLACE')
    vg.add([115],0.5824419260025024, 'REPLACE')
    vg.add([116],0.6741691827774048, 'REPLACE')
    vg.add([123],0.5, 'REPLACE')
    vg.add([124],0.12130993604660034, 'REPLACE')
    vg.add([125],1.0, 'REPLACE')
    vg.add([128],0.25, 'REPLACE')
    vg.add([129],0.9219889640808105, 'REPLACE')
    vg.add([130],0.5, 'REPLACE')
    vg.add([131],0.5846263766288757, 'REPLACE')
    vg.add([138],0.125, 'REPLACE')
    vg.add([139],0.25, 'REPLACE')
    vg.add([141],0.9911401271820068, 'REPLACE')
    vg.add([147],1.0, 'REPLACE')
    vg.add([156],0.875, 'REPLACE')
    vg.add([168],0.9987901449203491, 'REPLACE')
    vg.add([169],0.881934404373169, 'REPLACE')
    vg.add([170],0.20219305157661438, 'REPLACE')
    vg.add([171],0.125, 'REPLACE')
    vg.add([172],0.5, 'REPLACE')
    vg.add([173],0.25, 'REPLACE')
    vg.add([174],0.125, 'REPLACE')
    vg.add([175],0.8125, 'REPLACE')
    vg.add([182],0.0625, 'REPLACE')
    vg.add([183],0.10000000149011612, 'REPLACE')
    vg.add([184],0.25, 'REPLACE')
    vg.add([185],0.375, 'REPLACE')
    vg.add([186],0.4375, 'REPLACE')
    vg.add([187],0.25, 'REPLACE')
    vg.add([188],0.40625, 'REPLACE')
    vg.add([189],0.875, 'REPLACE')
    vg.add([190],0.0, 'REPLACE')
    vg.add([191],0.0, 'REPLACE')
    vg.add([194],0.0, 'REPLACE')
    vg.add([196],0.125, 'REPLACE')
    vg.add([197],0.125, 'REPLACE')
    vg.add([198],0.125, 'REPLACE')
    vg.add([213],0.125, 'REPLACE')
    vg.add([214],0.84375, 'REPLACE')
    vg.add([215],0.421875, 'REPLACE')
    vg.add([216],0.125, 'REPLACE')
    vg.add([618],0.125, 'REPLACE')
    vg.add([674],0.3125, 'REPLACE')
    vg.add([675],0.125, 'REPLACE')
    vg.add([684],0.0625, 'REPLACE')
    vg.add([1005],1.0, 'REPLACE')
    vg.add([1006],0.5, 'REPLACE')
    vg.add([1008],1.0, 'REPLACE')
    vg.add([1009],1.0, 'REPLACE')
    vg.add([1011],0.5, 'REPLACE')
    vg.add([1012],0.25, 'REPLACE')
    vg.add([1013],0.75, 'REPLACE')
    vg.add([1017],0.125, 'REPLACE')
    vg.add([1018],0.875, 'REPLACE')
    vg.add([1019],0.875, 'REPLACE')
    vg.add([1020],1.0, 'REPLACE')
    vg.add([1021],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("pelvis_def_R")
    vg.add([116],0.125, 'REPLACE')
    vg.add([172],0.3125, 'REPLACE')
    vg.add([173],0.125, 'REPLACE')
    vg.add([182],0.0625, 'REPLACE')
    vg.add([604],0.25, 'REPLACE')
    vg.add([605],0.5, 'REPLACE')
    vg.add([606],0.34144437313079834, 'REPLACE')
    vg.add([607],0.17283818125724792, 'REPLACE')
    vg.add([608],0.9999998807907104, 'REPLACE')
    vg.add([611],0.25, 'REPLACE')
    vg.add([612],0.25, 'REPLACE')
    vg.add([613],0.898625910282135, 'REPLACE')
    vg.add([614],0.846923291683197, 'REPLACE')
    vg.add([615],0.5, 'REPLACE')
    vg.add([616],0.6275080442428589, 'REPLACE')
    vg.add([617],0.5824419260025024, 'REPLACE')
    vg.add([618],0.6741691827774048, 'REPLACE')
    vg.add([625],0.5, 'REPLACE')
    vg.add([626],0.12130993604660034, 'REPLACE')
    vg.add([627],1.0, 'REPLACE')
    vg.add([630],0.25, 'REPLACE')
    vg.add([631],0.9219889640808105, 'REPLACE')
    vg.add([632],0.5, 'REPLACE')
    vg.add([633],0.5846263766288757, 'REPLACE')
    vg.add([640],0.125, 'REPLACE')
    vg.add([641],0.25, 'REPLACE')
    vg.add([643],0.9911401271820068, 'REPLACE')
    vg.add([649],1.0, 'REPLACE')
    vg.add([658],0.875, 'REPLACE')
    vg.add([670],0.9987901449203491, 'REPLACE')
    vg.add([671],0.881934404373169, 'REPLACE')
    vg.add([672],0.20219305157661438, 'REPLACE')
    vg.add([673],0.125, 'REPLACE')
    vg.add([674],0.5, 'REPLACE')
    vg.add([675],0.25, 'REPLACE')
    vg.add([676],0.125, 'REPLACE')
    vg.add([677],0.8125, 'REPLACE')
    vg.add([684],0.0625, 'REPLACE')
    vg.add([685],0.10000000149011612, 'REPLACE')
    vg.add([686],0.25, 'REPLACE')
    vg.add([687],0.375, 'REPLACE')
    vg.add([688],0.4375, 'REPLACE')
    vg.add([689],0.25, 'REPLACE')
    vg.add([690],0.40625, 'REPLACE')
    vg.add([691],0.875, 'REPLACE')
    vg.add([692],0.0, 'REPLACE')
    vg.add([693],0.0, 'REPLACE')
    vg.add([696],0.0, 'REPLACE')
    vg.add([698],0.125, 'REPLACE')
    vg.add([699],0.125, 'REPLACE')
    vg.add([700],0.125, 'REPLACE')
    vg.add([715],0.125, 'REPLACE')
    vg.add([716],0.84375, 'REPLACE')
    vg.add([717],0.421875, 'REPLACE')
    vg.add([718],0.125, 'REPLACE')
    vg.add([1005],1.0, 'REPLACE')
    vg.add([1006],0.5, 'REPLACE')
    vg.add([1008],1.0, 'REPLACE')
    vg.add([1009],1.0, 'REPLACE')
    vg.add([1011],0.5, 'REPLACE')
    vg.add([1012],0.25, 'REPLACE')
    vg.add([1013],0.75, 'REPLACE')
    vg.add([1017],0.125, 'REPLACE')
    vg.add([1018],0.875, 'REPLACE')
    vg.add([1019],0.875, 'REPLACE')
    vg.add([1020],1.0, 'REPLACE')
    vg.add([1021],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("shin_def_L")
    vg.add([37],1.0, 'REPLACE')
    vg.add([38],1.0, 'REPLACE')
    vg.add([39],1.0, 'REPLACE')
    vg.add([40],1.0, 'REPLACE')
    vg.add([41],1.0, 'REPLACE')
    vg.add([42],1.0, 'REPLACE')
    vg.add([43],1.0, 'REPLACE')
    vg.add([44],1.0, 'REPLACE')
    vg.add([46],0.25, 'REPLACE')
    vg.add([48],0.25, 'REPLACE')
    vg.add([50],0.25, 'REPLACE')
    vg.add([52],0.25, 'REPLACE')
    vg.add([54],0.25, 'REPLACE')
    vg.add([56],0.25, 'REPLACE')
    vg.add([58],0.25, 'REPLACE')
    vg.add([60],0.25, 'REPLACE')
    vg.add([90],1.0, 'REPLACE')
    vg.add([91],1.0, 'REPLACE')
    vg.add([92],0.8466851711273193, 'REPLACE')
    vg.add([93],0.8479727506637573, 'REPLACE')
    vg.add([94],0.125, 'REPLACE')
    vg.add([95],0.125, 'REPLACE')
    vg.add([96],0.125, 'REPLACE')
    vg.add([97],0.125, 'REPLACE')
    vg.add([100],0.0, 'REPLACE')
    vg.add([101],0.05000000074505806, 'REPLACE')
    vg.add([117],1.0, 'REPLACE')
    vg.add([118],0.8576141595840454, 'REPLACE')
    vg.add([119],0.125, 'REPLACE')
    vg.add([120],0.25, 'REPLACE')
    vg.add([121],0.05867903679609299, 'REPLACE')
    vg.add([122],0.0, 'REPLACE')
    vg.add([130],0.0, 'REPLACE')
    vg.add([132],1.0, 'REPLACE')
    vg.add([133],1.0, 'REPLACE')
    vg.add([134],0.25, 'REPLACE')
    vg.add([135],0.25, 'REPLACE')
    vg.add([149],0.0, 'REPLACE')
    vg.add([152],0.0, 'REPLACE')
    vg.add([165],0.0, 'REPLACE')
    vg.add([167],0.0, 'REPLACE')
    vg.add([202],0.25, 'REPLACE')
    vg.add([203],0.9931060075759888, 'REPLACE')
    vg.add([204],0.9412059187889099, 'REPLACE')
    vg.add([205],0.9973671436309814, 'REPLACE')
    vg.add([206],0.9999998211860657, 'REPLACE')
    vg.add([207],0.25, 'REPLACE')
    vg.add([208],0.991959810256958, 'REPLACE')
    vg.add([209],0.9665902256965637, 'REPLACE')
    vg.add([210],0.25, 'REPLACE')
    vg.add([211],0.9999992251396179, 'REPLACE')
    vg.add([212],0.9991992712020874, 'REPLACE')
    vg.add([627],0.0, 'REPLACE')
    vg.add([1005],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("shin_def_R")
    vg.add([125],0.0, 'REPLACE')
    vg.add([539],1.0, 'REPLACE')
    vg.add([540],1.0, 'REPLACE')
    vg.add([541],1.0, 'REPLACE')
    vg.add([542],1.0, 'REPLACE')
    vg.add([543],1.0, 'REPLACE')
    vg.add([544],1.0, 'REPLACE')
    vg.add([545],1.0, 'REPLACE')
    vg.add([546],1.0, 'REPLACE')
    vg.add([548],0.25, 'REPLACE')
    vg.add([550],0.25, 'REPLACE')
    vg.add([552],0.25, 'REPLACE')
    vg.add([554],0.25, 'REPLACE')
    vg.add([556],0.25, 'REPLACE')
    vg.add([558],0.25, 'REPLACE')
    vg.add([560],0.25, 'REPLACE')
    vg.add([562],0.25, 'REPLACE')
    vg.add([592],1.0, 'REPLACE')
    vg.add([593],1.0, 'REPLACE')
    vg.add([594],0.8466851711273193, 'REPLACE')
    vg.add([595],0.8479727506637573, 'REPLACE')
    vg.add([596],0.125, 'REPLACE')
    vg.add([597],0.125, 'REPLACE')
    vg.add([598],0.125, 'REPLACE')
    vg.add([599],0.125, 'REPLACE')
    vg.add([602],0.0, 'REPLACE')
    vg.add([603],0.05000000074505806, 'REPLACE')
    vg.add([619],1.0, 'REPLACE')
    vg.add([620],0.8576141595840454, 'REPLACE')
    vg.add([621],0.125, 'REPLACE')
    vg.add([622],0.25, 'REPLACE')
    vg.add([623],0.05867903679609299, 'REPLACE')
    vg.add([624],0.0, 'REPLACE')
    vg.add([632],0.0, 'REPLACE')
    vg.add([634],1.0, 'REPLACE')
    vg.add([635],1.0, 'REPLACE')
    vg.add([636],0.25, 'REPLACE')
    vg.add([637],0.25, 'REPLACE')
    vg.add([651],0.0, 'REPLACE')
    vg.add([654],0.0, 'REPLACE')
    vg.add([667],0.0, 'REPLACE')
    vg.add([669],0.0, 'REPLACE')
    vg.add([704],0.25, 'REPLACE')
    vg.add([705],0.9931060075759888, 'REPLACE')
    vg.add([706],0.9412059187889099, 'REPLACE')
    vg.add([707],0.9973671436309814, 'REPLACE')
    vg.add([708],0.9999998211860657, 'REPLACE')
    vg.add([709],0.25, 'REPLACE')
    vg.add([710],0.991959810256958, 'REPLACE')
    vg.add([711],0.9665902256965637, 'REPLACE')
    vg.add([712],0.25, 'REPLACE')
    vg.add([713],0.9999992251396179, 'REPLACE')
    vg.add([714],0.9991992712020874, 'REPLACE')
    vg.add([1005],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("shin_fix_L")
    vg.add([90],0.10000000149011612, 'REPLACE')
    vg.add([91],0.10000000149011612, 'REPLACE')
    vg.add([96],0.25, 'REPLACE')
    vg.add([97],0.25, 'REPLACE')
    vg.add([117],0.10000000149011612, 'REPLACE')
    vg.add([120],0.25, 'REPLACE')
    vg.add([132],0.25, 'REPLACE')
    vg.add([133],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("shin_fix_R")
    vg.add([592],0.10000000149011612, 'REPLACE')
    vg.add([593],0.10000000149011612, 'REPLACE')
    vg.add([598],0.25, 'REPLACE')
    vg.add([599],0.25, 'REPLACE')
    vg.add([619],0.10000000149011612, 'REPLACE')
    vg.add([622],0.25, 'REPLACE')
    vg.add([634],0.25, 'REPLACE')
    vg.add([635],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("shin_twist_def_L")
    vg.add([4],0.10000000149011612, 'REPLACE')
    vg.add([7],0.10000000149011612, 'REPLACE')
    vg.add([10],0.125, 'REPLACE')
    vg.add([11],0.125, 'REPLACE')
    vg.add([12],1.0, 'REPLACE')
    vg.add([13],1.0, 'REPLACE')
    vg.add([14],1.0, 'REPLACE')
    vg.add([15],1.0, 'REPLACE')
    vg.add([23],0.10000000149011612, 'REPLACE')
    vg.add([25],0.125, 'REPLACE')
    vg.add([26],1.0, 'REPLACE')
    vg.add([27],1.0, 'REPLACE')
    vg.add([32],0.5, 'REPLACE')
    vg.add([33],0.5, 'REPLACE')
    vg.add([34],1.0, 'REPLACE')
    vg.add([35],1.0, 'REPLACE')
    vg.add([37],0.25, 'REPLACE')
    vg.add([38],0.25, 'REPLACE')
    vg.add([39],0.25, 'REPLACE')
    vg.add([40],0.25, 'REPLACE')
    vg.add([41],0.25, 'REPLACE')
    vg.add([42],0.25, 'REPLACE')
    vg.add([43],0.25, 'REPLACE')
    vg.add([44],0.25, 'REPLACE')
    vg.add([45],1.0, 'REPLACE')
    vg.add([46],1.0, 'REPLACE')
    vg.add([47],1.0, 'REPLACE')
    vg.add([48],1.0, 'REPLACE')
    vg.add([49],1.0, 'REPLACE')
    vg.add([50],1.0, 'REPLACE')
    vg.add([51],1.0, 'REPLACE')
    vg.add([52],1.0, 'REPLACE')
    vg.add([53],1.0, 'REPLACE')
    vg.add([54],1.0, 'REPLACE')
    vg.add([55],1.0, 'REPLACE')
    vg.add([56],1.0, 'REPLACE')
    vg.add([57],1.0, 'REPLACE')
    vg.add([58],1.0, 'REPLACE')
    vg.add([59],1.0, 'REPLACE')
    vg.add([60],1.0, 'REPLACE')
    vg.add([61],0.10000000149011612, 'REPLACE')
    vg = ob.vertex_groups.new("shin_twist_def_R")
    vg.add([506],0.10000000149011612, 'REPLACE')
    vg.add([509],0.10000000149011612, 'REPLACE')
    vg.add([512],0.125, 'REPLACE')
    vg.add([513],0.125, 'REPLACE')
    vg.add([514],1.0, 'REPLACE')
    vg.add([515],1.0, 'REPLACE')
    vg.add([516],1.0, 'REPLACE')
    vg.add([517],1.0, 'REPLACE')
    vg.add([525],0.10000000149011612, 'REPLACE')
    vg.add([527],0.125, 'REPLACE')
    vg.add([528],1.0, 'REPLACE')
    vg.add([529],1.0, 'REPLACE')
    vg.add([534],0.5, 'REPLACE')
    vg.add([535],0.5, 'REPLACE')
    vg.add([536],1.0, 'REPLACE')
    vg.add([537],1.0, 'REPLACE')
    vg.add([539],0.25, 'REPLACE')
    vg.add([540],0.25, 'REPLACE')
    vg.add([541],0.25, 'REPLACE')
    vg.add([542],0.25, 'REPLACE')
    vg.add([543],0.25, 'REPLACE')
    vg.add([544],0.25, 'REPLACE')
    vg.add([545],0.25, 'REPLACE')
    vg.add([546],0.25, 'REPLACE')
    vg.add([547],1.0, 'REPLACE')
    vg.add([548],1.0, 'REPLACE')
    vg.add([549],1.0, 'REPLACE')
    vg.add([550],1.0, 'REPLACE')
    vg.add([551],1.0, 'REPLACE')
    vg.add([552],1.0, 'REPLACE')
    vg.add([553],1.0, 'REPLACE')
    vg.add([554],1.0, 'REPLACE')
    vg.add([555],1.0, 'REPLACE')
    vg.add([556],1.0, 'REPLACE')
    vg.add([557],1.0, 'REPLACE')
    vg.add([558],1.0, 'REPLACE')
    vg.add([559],1.0, 'REPLACE')
    vg.add([560],1.0, 'REPLACE')
    vg.add([561],1.0, 'REPLACE')
    vg.add([562],1.0, 'REPLACE')
    vg.add([563],0.10000000149011612, 'REPLACE')
    vg = ob.vertex_groups.new("spine_1_def")
    vg.add([107],0.75, 'REPLACE')
    vg.add([108],0.25, 'REPLACE')
    vg.add([109],0.0, 'REPLACE')
    vg.add([110],0.0, 'REPLACE')
    vg.add([113],0.29507744312286377, 'REPLACE')
    vg.add([114],0.0, 'REPLACE')
    vg.add([115],0.0, 'REPLACE')
    vg.add([125],0.0, 'REPLACE')
    vg.add([126],0.7280858159065247, 'REPLACE')
    vg.add([127],0.25, 'REPLACE')
    vg.add([128],0.0, 'REPLACE')
    vg.add([130],0.25, 'REPLACE')
    vg.add([140],0.25, 'REPLACE')
    vg.add([142],1.0, 'REPLACE')
    vg.add([143],1.0, 'REPLACE')
    vg.add([144],0.6900131106376648, 'REPLACE')
    vg.add([145],1.0, 'REPLACE')
    vg.add([146],0.7569678425788879, 'REPLACE')
    vg.add([147],0.0, 'REPLACE')
    vg.add([173],0.0, 'REPLACE')
    vg.add([176],0.75, 'REPLACE')
    vg.add([177],1.0, 'REPLACE')
    vg.add([178],0.75, 'REPLACE')
    vg.add([179],0.75, 'REPLACE')
    vg.add([180],0.75, 'REPLACE')
    vg.add([181],0.25, 'REPLACE')
    vg.add([182],0.0, 'REPLACE')
    vg.add([183],0.0, 'REPLACE')
    vg.add([184],0.0, 'REPLACE')
    vg.add([217],0.00855419784784317, 'REPLACE')
    vg.add([218],0.125, 'REPLACE')
    vg.add([219],0.0, 'REPLACE')
    vg.add([220],0.125, 'REPLACE')
    vg.add([256],0.0, 'REPLACE')
    vg.add([257],0.0, 'REPLACE')
    vg.add([259],0.0, 'REPLACE')
    vg.add([312],0.0, 'REPLACE')
    vg.add([313],0.0, 'REPLACE')
    vg.add([338],0.2740303874015808, 'REPLACE')
    vg.add([339],0.25, 'REPLACE')
    vg.add([340],0.25, 'REPLACE')
    vg.add([341],0.25, 'REPLACE')
    vg.add([342],0.25, 'REPLACE')
    vg.add([348],0.0, 'REPLACE')
    vg.add([393],0.0, 'REPLACE')
    vg.add([395],0.0, 'REPLACE')
    vg.add([403],0.0, 'REPLACE')
    vg.add([404],0.0, 'REPLACE')
    vg.add([405],0.0, 'REPLACE')
    vg.add([407],0.03125, 'REPLACE')
    vg.add([408],0.078125, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([413],0.03125, 'REPLACE')
    vg.add([417],0.0, 'REPLACE')
    vg.add([418],0.0, 'REPLACE')
    vg.add([419],0.125, 'REPLACE')
    vg.add([420],0.25, 'REPLACE')
    vg.add([421],0.0, 'REPLACE')
    vg.add([441],0.03125, 'REPLACE')
    vg.add([446],0.0, 'REPLACE')
    vg.add([447],0.0, 'REPLACE')
    vg.add([451],0.0, 'REPLACE')
    vg.add([460],0.0, 'REPLACE')
    vg.add([609],0.75, 'REPLACE')
    vg.add([610],0.25, 'REPLACE')
    vg.add([611],0.0, 'REPLACE')
    vg.add([612],0.0, 'REPLACE')
    vg.add([615],0.29507744312286377, 'REPLACE')
    vg.add([616],0.0, 'REPLACE')
    vg.add([617],0.0, 'REPLACE')
    vg.add([627],0.0, 'REPLACE')
    vg.add([628],0.7280858159065247, 'REPLACE')
    vg.add([629],0.25, 'REPLACE')
    vg.add([630],0.0, 'REPLACE')
    vg.add([632],0.25, 'REPLACE')
    vg.add([642],0.25, 'REPLACE')
    vg.add([644],1.0, 'REPLACE')
    vg.add([645],1.0, 'REPLACE')
    vg.add([646],0.6900131106376648, 'REPLACE')
    vg.add([647],1.0, 'REPLACE')
    vg.add([648],0.7569678425788879, 'REPLACE')
    vg.add([649],0.0, 'REPLACE')
    vg.add([675],0.0, 'REPLACE')
    vg.add([678],0.75, 'REPLACE')
    vg.add([679],1.0, 'REPLACE')
    vg.add([680],0.75, 'REPLACE')
    vg.add([681],0.75, 'REPLACE')
    vg.add([682],0.75, 'REPLACE')
    vg.add([683],0.25, 'REPLACE')
    vg.add([684],0.0, 'REPLACE')
    vg.add([685],0.0, 'REPLACE')
    vg.add([686],0.0, 'REPLACE')
    vg.add([719],0.00855419784784317, 'REPLACE')
    vg.add([720],0.125, 'REPLACE')
    vg.add([721],0.0, 'REPLACE')
    vg.add([722],0.125, 'REPLACE')
    vg.add([758],0.0, 'REPLACE')
    vg.add([759],0.0, 'REPLACE')
    vg.add([761],0.0, 'REPLACE')
    vg.add([814],0.0, 'REPLACE')
    vg.add([815],0.0, 'REPLACE')
    vg.add([840],0.2740303874015808, 'REPLACE')
    vg.add([841],0.25, 'REPLACE')
    vg.add([842],0.25, 'REPLACE')
    vg.add([843],0.25, 'REPLACE')
    vg.add([844],0.25, 'REPLACE')
    vg.add([850],0.0, 'REPLACE')
    vg.add([895],0.0, 'REPLACE')
    vg.add([897],0.0, 'REPLACE')
    vg.add([905],0.0, 'REPLACE')
    vg.add([906],0.0, 'REPLACE')
    vg.add([907],0.0, 'REPLACE')
    vg.add([909],0.03125, 'REPLACE')
    vg.add([910],0.078125, 'REPLACE')
    vg.add([912],0.0, 'REPLACE')
    vg.add([915],0.03125, 'REPLACE')
    vg.add([919],0.0, 'REPLACE')
    vg.add([920],0.0, 'REPLACE')
    vg.add([921],0.125, 'REPLACE')
    vg.add([922],0.25, 'REPLACE')
    vg.add([923],0.0, 'REPLACE')
    vg.add([943],0.03125, 'REPLACE')
    vg.add([948],0.0, 'REPLACE')
    vg.add([949],0.0, 'REPLACE')
    vg.add([953],0.0, 'REPLACE')
    vg.add([962],0.0, 'REPLACE')
    vg.add([1005],0.0, 'REPLACE')
    vg.add([1006],0.25, 'REPLACE')
    vg.add([1007],0.8574048280715942, 'REPLACE')
    vg.add([1010],0.7560834288597107, 'REPLACE')
    vg.add([1012],0.0, 'REPLACE')
    vg.add([1014],0.25, 'REPLACE')
    vg.add([1015],0.75, 'REPLACE')
    vg.add([1016],1.0, 'REPLACE')
    vg.add([1017],0.0, 'REPLACE')
    vg.add([1018],0.0, 'REPLACE')
    vg.add([1022],0.409591943025589, 'REPLACE')
    vg.add([1036],0.09297273308038712, 'REPLACE')
    vg.add([1045],0.023608600720763206, 'REPLACE')
    vg.add([1050],0.0, 'REPLACE')
    vg.add([1053],0.0, 'REPLACE')
    vg.add([1054],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("spine_2_def")
    vg.add([107],0.125, 'REPLACE')
    vg.add([113],0.0, 'REPLACE')
    vg.add([126],0.125, 'REPLACE')
    vg.add([130],0.0, 'REPLACE')
    vg.add([140],0.0, 'REPLACE')
    vg.add([142],0.5, 'REPLACE')
    vg.add([143],0.47635123133659363, 'REPLACE')
    vg.add([144],0.5, 'REPLACE')
    vg.add([145],0.5, 'REPLACE')
    vg.add([146],0.4894656538963318, 'REPLACE')
    vg.add([176],0.125, 'REPLACE')
    vg.add([177],0.5, 'REPLACE')
    vg.add([178],0.25, 'REPLACE')
    vg.add([179],0.25, 'REPLACE')
    vg.add([180],0.25, 'REPLACE')
    vg.add([217],0.9760888814926147, 'REPLACE')
    vg.add([218],1.0, 'REPLACE')
    vg.add([219],1.0, 'REPLACE')
    vg.add([220],1.0, 'REPLACE')
    vg.add([254],0.0, 'REPLACE')
    vg.add([255],0.0, 'REPLACE')
    vg.add([256],0.5, 'REPLACE')
    vg.add([257],0.125, 'REPLACE')
    vg.add([338],0.9296513199806213, 'REPLACE')
    vg.add([339],1.0, 'REPLACE')
    vg.add([340],0.8125, 'REPLACE')
    vg.add([341],0.75, 'REPLACE')
    vg.add([342],1.0, 'REPLACE')
    vg.add([348],0.25, 'REPLACE')
    vg.add([387],0.0, 'REPLACE')
    vg.add([388],0.0, 'REPLACE')
    vg.add([395],0.125, 'REPLACE')
    vg.add([404],0.125, 'REPLACE')
    vg.add([407],0.125, 'REPLACE')
    vg.add([408],0.828125, 'REPLACE')
    vg.add([411],0.0, 'REPLACE')
    vg.add([413],0.0, 'REPLACE')
    vg.add([417],0.828125, 'REPLACE')
    vg.add([418],0.8333333134651184, 'REPLACE')
    vg.add([419],1.0, 'REPLACE')
    vg.add([420],1.0, 'REPLACE')
    vg.add([421],0.831250011920929, 'REPLACE')
    vg.add([439],0.125, 'REPLACE')
    vg.add([440],0.125, 'REPLACE')
    vg.add([441],0.0, 'REPLACE')
    vg.add([446],0.0, 'REPLACE')
    vg.add([447],0.0, 'REPLACE')
    vg.add([450],0.0, 'REPLACE')
    vg.add([457],0.0, 'REPLACE')
    vg.add([458],0.0, 'REPLACE')
    vg.add([459],0.0, 'REPLACE')
    vg.add([460],0.0, 'REPLACE')
    vg.add([463],0.0, 'REPLACE')
    vg.add([609],0.125, 'REPLACE')
    vg.add([615],0.0, 'REPLACE')
    vg.add([628],0.125, 'REPLACE')
    vg.add([632],0.0, 'REPLACE')
    vg.add([642],0.0, 'REPLACE')
    vg.add([644],0.5, 'REPLACE')
    vg.add([645],0.47635123133659363, 'REPLACE')
    vg.add([646],0.5, 'REPLACE')
    vg.add([647],0.5, 'REPLACE')
    vg.add([648],0.4894656538963318, 'REPLACE')
    vg.add([678],0.125, 'REPLACE')
    vg.add([679],0.5, 'REPLACE')
    vg.add([680],0.25, 'REPLACE')
    vg.add([681],0.25, 'REPLACE')
    vg.add([682],0.25, 'REPLACE')
    vg.add([719],0.9760888814926147, 'REPLACE')
    vg.add([720],1.0, 'REPLACE')
    vg.add([721],1.0, 'REPLACE')
    vg.add([722],1.0, 'REPLACE')
    vg.add([756],0.0, 'REPLACE')
    vg.add([757],0.0, 'REPLACE')
    vg.add([758],0.5, 'REPLACE')
    vg.add([759],0.125, 'REPLACE')
    vg.add([840],0.9296513199806213, 'REPLACE')
    vg.add([841],1.0, 'REPLACE')
    vg.add([842],0.8125, 'REPLACE')
    vg.add([843],0.75, 'REPLACE')
    vg.add([844],1.0, 'REPLACE')
    vg.add([850],0.25, 'REPLACE')
    vg.add([889],0.0, 'REPLACE')
    vg.add([890],0.0, 'REPLACE')
    vg.add([897],0.125, 'REPLACE')
    vg.add([906],0.125, 'REPLACE')
    vg.add([909],0.125, 'REPLACE')
    vg.add([910],0.828125, 'REPLACE')
    vg.add([913],0.0, 'REPLACE')
    vg.add([915],0.0, 'REPLACE')
    vg.add([919],0.828125, 'REPLACE')
    vg.add([920],0.8333333134651184, 'REPLACE')
    vg.add([921],1.0, 'REPLACE')
    vg.add([922],1.0, 'REPLACE')
    vg.add([923],0.831250011920929, 'REPLACE')
    vg.add([941],0.125, 'REPLACE')
    vg.add([942],0.125, 'REPLACE')
    vg.add([943],0.0, 'REPLACE')
    vg.add([948],0.0, 'REPLACE')
    vg.add([949],0.0, 'REPLACE')
    vg.add([952],0.0, 'REPLACE')
    vg.add([959],0.0, 'REPLACE')
    vg.add([960],0.0, 'REPLACE')
    vg.add([961],0.0, 'REPLACE')
    vg.add([962],0.0, 'REPLACE')
    vg.add([965],0.0, 'REPLACE')
    vg.add([1006],0.0, 'REPLACE')
    vg.add([1007],0.125, 'REPLACE')
    vg.add([1010],0.4869101643562317, 'REPLACE')
    vg.add([1015],0.25, 'REPLACE')
    vg.add([1016],0.5, 'REPLACE')
    vg.add([1022],0.7578155994415283, 'REPLACE')
    vg.add([1035],0.0, 'REPLACE')
    vg.add([1036],0.875929057598114, 'REPLACE')
    vg.add([1044],0.0, 'REPLACE')
    vg.add([1045],0.8123867511749268, 'REPLACE')
    vg.add([1050],0.0, 'REPLACE')
    vg.add([1051],0.0, 'REPLACE')
    vg.add([1052],0.125, 'REPLACE')
    vg.add([1053],0.7749999761581421, 'REPLACE')
    vg.add([1054],0.8125, 'REPLACE')
    vg = ob.vertex_groups.new("spine_3_def")
    vg.add([107],0.041448116302490234, 'REPLACE')
    vg.add([126],0.0059572141617536545, 'REPLACE')
    vg.add([140],0.00010237337846774608, 'REPLACE')
    vg.add([142],0.18455179035663605, 'REPLACE')
    vg.add([143],0.22704623639583588, 'REPLACE')
    vg.add([144],0.1624208390712738, 'REPLACE')
    vg.add([145],0.22463418543338776, 'REPLACE')
    vg.add([146],0.07481487840414047, 'REPLACE')
    vg.add([176],0.02836461551487446, 'REPLACE')
    vg.add([177],0.14451952278614044, 'REPLACE')
    vg.add([178],0.004962734412401915, 'REPLACE')
    vg.add([179],0.1481471210718155, 'REPLACE')
    vg.add([180],0.04116750881075859, 'REPLACE')
    vg.add([217],0.37326908111572266, 'REPLACE')
    vg.add([218],0.39472052454948425, 'REPLACE')
    vg.add([219],0.6424593925476074, 'REPLACE')
    vg.add([220],0.3981231451034546, 'REPLACE')
    vg.add([221],0.20026016235351562, 'REPLACE')
    vg.add([222],1.0, 'REPLACE')
    vg.add([223],1.0, 'REPLACE')
    vg.add([224],1.0, 'REPLACE')
    vg.add([225],1.0, 'REPLACE')
    vg.add([226],1.0, 'REPLACE')
    vg.add([227],1.0, 'REPLACE')
    vg.add([228],1.0, 'REPLACE')
    vg.add([229],1.0, 'REPLACE')
    vg.add([230],1.0, 'REPLACE')
    vg.add([254],1.0, 'REPLACE')
    vg.add([255],1.0, 'REPLACE')
    vg.add([256],0.8557830452919006, 'REPLACE')
    vg.add([257],1.0, 'REPLACE')
    vg.add([258],0.1822638213634491, 'REPLACE')
    vg.add([259],1.0, 'REPLACE')
    vg.add([312],1.0, 'REPLACE')
    vg.add([313],1.0, 'REPLACE')
    vg.add([316],0.0, 'REPLACE')
    vg.add([338],0.15743277966976166, 'REPLACE')
    vg.add([339],0.2528301477432251, 'REPLACE')
    vg.add([340],0.2644084692001343, 'REPLACE')
    vg.add([341],0.42599359154701233, 'REPLACE')
    vg.add([342],0.36905646324157715, 'REPLACE')
    vg.add([343],0.0, 'REPLACE')
    vg.add([344],0.0, 'REPLACE')
    vg.add([345],0.0, 'REPLACE')
    vg.add([347],0.0, 'REPLACE')
    vg.add([348],0.7961404323577881, 'REPLACE')
    vg.add([349],0.0, 'REPLACE')
    vg.add([350],0.0, 'REPLACE')
    vg.add([351],0.0, 'REPLACE')
    vg.add([352],0.0, 'REPLACE')
    vg.add([354],0.05042022839188576, 'REPLACE')
    vg.add([355],1.0, 'REPLACE')
    vg.add([356],0.05890621617436409, 'REPLACE')
    vg.add([358],1.0, 'REPLACE')
    vg.add([361],0.10000000149011612, 'REPLACE')
    vg.add([362],0.10000000149011612, 'REPLACE')
    vg.add([363],0.10000000149011612, 'REPLACE')
    vg.add([364],0.10000000149011612, 'REPLACE')
    vg.add([365],0.10000000149011612, 'REPLACE')
    vg.add([366],0.10000000149011612, 'REPLACE')
    vg.add([367],1.0, 'REPLACE')
    vg.add([368],1.0, 'REPLACE')
    vg.add([369],1.0, 'REPLACE')
    vg.add([370],1.0, 'REPLACE')
    vg.add([371],1.0, 'REPLACE')
    vg.add([372],1.0, 'REPLACE')
    vg.add([378],0.10000000149011612, 'REPLACE')
    vg.add([379],1.0, 'REPLACE')
    vg.add([380],1.0, 'REPLACE')
    vg.add([381],1.0, 'REPLACE')
    vg.add([386],0.10000000149011612, 'REPLACE')
    vg.add([387],1.0, 'REPLACE')
    vg.add([388],0.75, 'REPLACE')
    vg.add([389],1.0, 'REPLACE')
    vg.add([390],1.0, 'REPLACE')
    vg.add([393],0.25, 'REPLACE')
    vg.add([395],0.2043685019016266, 'REPLACE')
    vg.add([397],0.10000000149011612, 'REPLACE')
    vg.add([398],0.0, 'REPLACE')
    vg.add([399],0.0, 'REPLACE')
    vg.add([400],0.0, 'REPLACE')
    vg.add([401],0.0, 'REPLACE')
    vg.add([402],0.0, 'REPLACE')
    vg.add([403],0.125, 'REPLACE')
    vg.add([404],0.975396454334259, 'REPLACE')
    vg.add([405],1.0, 'REPLACE')
    vg.add([407],1.0, 'REPLACE')
    vg.add([408],0.6148345470428467, 'REPLACE')
    vg.add([410],0.0, 'REPLACE')
    vg.add([411],0.6247609257698059, 'REPLACE')
    vg.add([412],0.7987821698188782, 'REPLACE')
    vg.add([413],1.0, 'REPLACE')
    vg.add([414],1.0, 'REPLACE')
    vg.add([416],0.10000000149011612, 'REPLACE')
    vg.add([417],0.6616204380989075, 'REPLACE')
    vg.add([418],0.680182695388794, 'REPLACE')
    vg.add([419],0.3338051438331604, 'REPLACE')
    vg.add([420],0.24818302690982819, 'REPLACE')
    vg.add([421],0.6545014977455139, 'REPLACE')
    vg.add([434],0.13292957842350006, 'REPLACE')
    vg.add([437],0.0, 'REPLACE')
    vg.add([438],0.0, 'REPLACE')
    vg.add([439],0.9976771473884583, 'REPLACE')
    vg.add([440],1.0, 'REPLACE')
    vg.add([441],0.5, 'REPLACE')
    vg.add([442],0.0, 'REPLACE')
    vg.add([444],0.0, 'REPLACE')
    vg.add([445],0.0, 'REPLACE')
    vg.add([446],1.0, 'REPLACE')
    vg.add([447],0.75, 'REPLACE')
    vg.add([448],0.14731281995773315, 'REPLACE')
    vg.add([449],0.031023090705275536, 'REPLACE')
    vg.add([450],0.11327698826789856, 'REPLACE')
    vg.add([451],0.0, 'REPLACE')
    vg.add([452],0.31877434253692627, 'REPLACE')
    vg.add([453],0.08641410619020462, 'REPLACE')
    vg.add([457],1.0, 'REPLACE')
    vg.add([458],1.0, 'REPLACE')
    vg.add([459],0.38769668340682983, 'REPLACE')
    vg.add([460],0.455980509519577, 'REPLACE')
    vg.add([461],0.24772515892982483, 'REPLACE')
    vg.add([462],0.37752407789230347, 'REPLACE')
    vg.add([463],0.41195017099380493, 'REPLACE')
    vg.add([609],0.041448116302490234, 'REPLACE')
    vg.add([628],0.0059572141617536545, 'REPLACE')
    vg.add([642],0.00010237337846774608, 'REPLACE')
    vg.add([644],0.18455179035663605, 'REPLACE')
    vg.add([645],0.22704623639583588, 'REPLACE')
    vg.add([646],0.1624208390712738, 'REPLACE')
    vg.add([647],0.22463418543338776, 'REPLACE')
    vg.add([648],0.07481487840414047, 'REPLACE')
    vg.add([678],0.02836461551487446, 'REPLACE')
    vg.add([679],0.14451952278614044, 'REPLACE')
    vg.add([680],0.004962734412401915, 'REPLACE')
    vg.add([681],0.1481471210718155, 'REPLACE')
    vg.add([682],0.04116750881075859, 'REPLACE')
    vg.add([719],0.37326908111572266, 'REPLACE')
    vg.add([720],0.39472052454948425, 'REPLACE')
    vg.add([721],0.6424593925476074, 'REPLACE')
    vg.add([722],0.3981231451034546, 'REPLACE')
    vg.add([723],0.20026016235351562, 'REPLACE')
    vg.add([724],1.0, 'REPLACE')
    vg.add([725],1.0, 'REPLACE')
    vg.add([726],1.0, 'REPLACE')
    vg.add([727],1.0, 'REPLACE')
    vg.add([728],1.0, 'REPLACE')
    vg.add([729],1.0, 'REPLACE')
    vg.add([730],1.0, 'REPLACE')
    vg.add([731],1.0, 'REPLACE')
    vg.add([732],1.0, 'REPLACE')
    vg.add([756],1.0, 'REPLACE')
    vg.add([757],1.0, 'REPLACE')
    vg.add([758],0.8557830452919006, 'REPLACE')
    vg.add([759],1.0, 'REPLACE')
    vg.add([760],0.1822638213634491, 'REPLACE')
    vg.add([761],1.0, 'REPLACE')
    vg.add([814],1.0, 'REPLACE')
    vg.add([815],1.0, 'REPLACE')
    vg.add([818],0.0, 'REPLACE')
    vg.add([840],0.15743277966976166, 'REPLACE')
    vg.add([841],0.2528301477432251, 'REPLACE')
    vg.add([842],0.2644084692001343, 'REPLACE')
    vg.add([843],0.42599359154701233, 'REPLACE')
    vg.add([844],0.36905646324157715, 'REPLACE')
    vg.add([845],0.0, 'REPLACE')
    vg.add([846],0.0, 'REPLACE')
    vg.add([847],0.0, 'REPLACE')
    vg.add([849],0.0, 'REPLACE')
    vg.add([850],0.7961404323577881, 'REPLACE')
    vg.add([851],0.0, 'REPLACE')
    vg.add([852],0.0, 'REPLACE')
    vg.add([853],0.0, 'REPLACE')
    vg.add([854],0.0, 'REPLACE')
    vg.add([856],0.05042022839188576, 'REPLACE')
    vg.add([857],1.0, 'REPLACE')
    vg.add([858],0.05890621617436409, 'REPLACE')
    vg.add([860],1.0, 'REPLACE')
    vg.add([863],0.10000000149011612, 'REPLACE')
    vg.add([864],0.10000000149011612, 'REPLACE')
    vg.add([865],0.10000000149011612, 'REPLACE')
    vg.add([866],0.10000000149011612, 'REPLACE')
    vg.add([867],0.10000000149011612, 'REPLACE')
    vg.add([868],0.10000000149011612, 'REPLACE')
    vg.add([869],1.0, 'REPLACE')
    vg.add([870],1.0, 'REPLACE')
    vg.add([871],1.0, 'REPLACE')
    vg.add([872],1.0, 'REPLACE')
    vg.add([873],1.0, 'REPLACE')
    vg.add([874],1.0, 'REPLACE')
    vg.add([880],0.10000000149011612, 'REPLACE')
    vg.add([881],1.0, 'REPLACE')
    vg.add([882],1.0, 'REPLACE')
    vg.add([883],1.0, 'REPLACE')
    vg.add([888],0.10000000149011612, 'REPLACE')
    vg.add([889],1.0, 'REPLACE')
    vg.add([890],0.75, 'REPLACE')
    vg.add([891],1.0, 'REPLACE')
    vg.add([892],1.0, 'REPLACE')
    vg.add([895],0.25, 'REPLACE')
    vg.add([897],0.2043685019016266, 'REPLACE')
    vg.add([899],0.10000000149011612, 'REPLACE')
    vg.add([900],0.0, 'REPLACE')
    vg.add([901],0.0, 'REPLACE')
    vg.add([902],0.0, 'REPLACE')
    vg.add([903],0.0, 'REPLACE')
    vg.add([904],0.0, 'REPLACE')
    vg.add([905],0.125, 'REPLACE')
    vg.add([906],0.975396454334259, 'REPLACE')
    vg.add([907],1.0, 'REPLACE')
    vg.add([909],1.0, 'REPLACE')
    vg.add([910],0.6148345470428467, 'REPLACE')
    vg.add([912],0.0, 'REPLACE')
    vg.add([913],0.6247609257698059, 'REPLACE')
    vg.add([914],0.7987821698188782, 'REPLACE')
    vg.add([915],1.0, 'REPLACE')
    vg.add([916],1.0, 'REPLACE')
    vg.add([918],0.10000000149011612, 'REPLACE')
    vg.add([919],0.6616204380989075, 'REPLACE')
    vg.add([920],0.680182695388794, 'REPLACE')
    vg.add([921],0.3338051438331604, 'REPLACE')
    vg.add([922],0.24818302690982819, 'REPLACE')
    vg.add([923],0.6545014977455139, 'REPLACE')
    vg.add([936],0.13292957842350006, 'REPLACE')
    vg.add([939],0.0, 'REPLACE')
    vg.add([940],0.0, 'REPLACE')
    vg.add([941],0.9976771473884583, 'REPLACE')
    vg.add([942],1.0, 'REPLACE')
    vg.add([943],0.5, 'REPLACE')
    vg.add([944],0.0, 'REPLACE')
    vg.add([946],0.0, 'REPLACE')
    vg.add([947],0.0, 'REPLACE')
    vg.add([948],1.0, 'REPLACE')
    vg.add([949],0.75, 'REPLACE')
    vg.add([950],0.14731281995773315, 'REPLACE')
    vg.add([951],0.031023090705275536, 'REPLACE')
    vg.add([952],0.11327698826789856, 'REPLACE')
    vg.add([953],0.0, 'REPLACE')
    vg.add([954],0.31877434253692627, 'REPLACE')
    vg.add([955],0.08641410619020462, 'REPLACE')
    vg.add([959],1.0, 'REPLACE')
    vg.add([960],1.0, 'REPLACE')
    vg.add([961],0.38769668340682983, 'REPLACE')
    vg.add([962],0.455980509519577, 'REPLACE')
    vg.add([963],0.24772515892982483, 'REPLACE')
    vg.add([964],0.37752407789230347, 'REPLACE')
    vg.add([965],0.41195017099380493, 'REPLACE')
    vg.add([1010],0.1524752974510193, 'REPLACE')
    vg.add([1015],0.006368463858962059, 'REPLACE')
    vg.add([1016],0.12526105344295502, 'REPLACE')
    vg.add([1022],0.2504956126213074, 'REPLACE')
    vg.add([1034],1.0, 'REPLACE')
    vg.add([1035],1.0, 'REPLACE')
    vg.add([1036],0.3723040223121643, 'REPLACE')
    vg.add([1037],1.0, 'REPLACE')
    vg.add([1038],0.10000000149011612, 'REPLACE')
    vg.add([1039],1.0, 'REPLACE')
    vg.add([1040],0.10000000149011612, 'REPLACE')
    vg.add([1041],1.0, 'REPLACE')
    vg.add([1043],1.0, 'REPLACE')
    vg.add([1044],1.0, 'REPLACE')
    vg.add([1045],0.7416514158248901, 'REPLACE')
    vg.add([1050],1.0, 'REPLACE')
    vg.add([1051],1.0, 'REPLACE')
    vg.add([1052],1.0, 'REPLACE')
    vg.add([1053],0.7866836190223694, 'REPLACE')
    vg.add([1054],0.24690495431423187, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_def_L")
    vg.add([102],1.0, 'REPLACE')
    vg.add([103],0.5, 'REPLACE')
    vg.add([104],0.6701349020004272, 'REPLACE')
    vg.add([105],0.7347399592399597, 'REPLACE')
    vg.add([106],0.125, 'REPLACE')
    vg.add([111],0.006049568299204111, 'REPLACE')
    vg.add([112],0.7109672427177429, 'REPLACE')
    vg.add([116],0.5118699669837952, 'REPLACE')
    vg.add([123],1.0, 'REPLACE')
    vg.add([124],0.5134785771369934, 'REPLACE')
    vg.add([125],0.5, 'REPLACE')
    vg.add([128],0.001796448603272438, 'REPLACE')
    vg.add([129],0.4539320468902588, 'REPLACE')
    vg.add([131],0.2662792503833771, 'REPLACE')
    vg.add([138],1.0, 'REPLACE')
    vg.add([139],1.0, 'REPLACE')
    vg.add([148],0.4999825060367584, 'REPLACE')
    vg.add([149],0.5, 'REPLACE')
    vg.add([150],0.5, 'REPLACE')
    vg.add([151],0.5, 'REPLACE')
    vg.add([152],0.499991238117218, 'REPLACE')
    vg.add([153],0.5, 'REPLACE')
    vg.add([154],0.5, 'REPLACE')
    vg.add([155],0.499991238117218, 'REPLACE')
    vg.add([156],0.25, 'REPLACE')
    vg.add([157],0.7499737739562988, 'REPLACE')
    vg.add([158],0.75, 'REPLACE')
    vg.add([159],1.0, 'REPLACE')
    vg.add([160],1.0, 'REPLACE')
    vg.add([161],0.7499868869781494, 'REPLACE')
    vg.add([162],1.0, 'REPLACE')
    vg.add([163],0.7353877425193787, 'REPLACE')
    vg.add([164],0.7499955892562866, 'REPLACE')
    vg.add([168],0.363749623298645, 'REPLACE')
    vg.add([169],0.1724710315465927, 'REPLACE')
    vg.add([170],0.5008479356765747, 'REPLACE')
    vg.add([171],0.9955424070358276, 'REPLACE')
    vg.add([172],0.5569655299186707, 'REPLACE')
    vg.add([174],1.0, 'REPLACE')
    vg.add([175],0.25, 'REPLACE')
    vg.add([184],0.25, 'REPLACE')
    vg.add([185],0.25, 'REPLACE')
    vg.add([186],0.625, 'REPLACE')
    vg.add([187],0.5002198219299316, 'REPLACE')
    vg.add([188],0.25, 'REPLACE')
    vg.add([190],1.0, 'REPLACE')
    vg.add([191],0.875, 'REPLACE')
    vg.add([192],1.0, 'REPLACE')
    vg.add([193],1.0, 'REPLACE')
    vg.add([194],1.0, 'REPLACE')
    vg.add([195],1.0, 'REPLACE')
    vg.add([196],0.8749977946281433, 'REPLACE')
    vg.add([197],0.832818865776062, 'REPLACE')
    vg.add([198],0.875, 'REPLACE')
    vg.add([200],0.5, 'REPLACE')
    vg.add([201],0.75, 'REPLACE')
    vg.add([213],1.0, 'REPLACE')
    vg.add([214],0.25, 'REPLACE')
    vg.add([215],0.4375, 'REPLACE')
    vg.add([216],0.875, 'REPLACE')
    vg.add([1008],0.011516462080180645, 'REPLACE')
    vg.add([1013],0.0007733193342573941, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_def_R")
    vg.add([604],1.0, 'REPLACE')
    vg.add([605],0.5, 'REPLACE')
    vg.add([606],0.6701349020004272, 'REPLACE')
    vg.add([607],0.7347399592399597, 'REPLACE')
    vg.add([608],0.125, 'REPLACE')
    vg.add([613],0.006049568299204111, 'REPLACE')
    vg.add([614],0.7109672427177429, 'REPLACE')
    vg.add([618],0.5118699669837952, 'REPLACE')
    vg.add([625],1.0, 'REPLACE')
    vg.add([626],0.5134785771369934, 'REPLACE')
    vg.add([627],0.5, 'REPLACE')
    vg.add([630],0.001796448603272438, 'REPLACE')
    vg.add([631],0.4539320468902588, 'REPLACE')
    vg.add([633],0.2662792503833771, 'REPLACE')
    vg.add([640],1.0, 'REPLACE')
    vg.add([641],1.0, 'REPLACE')
    vg.add([650],0.4999825060367584, 'REPLACE')
    vg.add([651],0.5, 'REPLACE')
    vg.add([652],0.5, 'REPLACE')
    vg.add([653],0.5, 'REPLACE')
    vg.add([654],0.499991238117218, 'REPLACE')
    vg.add([655],0.5, 'REPLACE')
    vg.add([656],0.5, 'REPLACE')
    vg.add([657],0.499991238117218, 'REPLACE')
    vg.add([658],0.25, 'REPLACE')
    vg.add([659],0.7499737739562988, 'REPLACE')
    vg.add([660],0.75, 'REPLACE')
    vg.add([661],1.0, 'REPLACE')
    vg.add([662],1.0, 'REPLACE')
    vg.add([663],0.7499868869781494, 'REPLACE')
    vg.add([664],1.0, 'REPLACE')
    vg.add([665],0.7353877425193787, 'REPLACE')
    vg.add([666],0.7499955892562866, 'REPLACE')
    vg.add([670],0.363749623298645, 'REPLACE')
    vg.add([671],0.1724710315465927, 'REPLACE')
    vg.add([672],0.5008479356765747, 'REPLACE')
    vg.add([673],0.9955424070358276, 'REPLACE')
    vg.add([674],0.5569655299186707, 'REPLACE')
    vg.add([676],1.0, 'REPLACE')
    vg.add([677],0.25, 'REPLACE')
    vg.add([686],0.25, 'REPLACE')
    vg.add([687],0.25, 'REPLACE')
    vg.add([688],0.625, 'REPLACE')
    vg.add([689],0.5002198219299316, 'REPLACE')
    vg.add([690],0.25, 'REPLACE')
    vg.add([692],1.0, 'REPLACE')
    vg.add([693],0.875, 'REPLACE')
    vg.add([694],1.0, 'REPLACE')
    vg.add([695],1.0, 'REPLACE')
    vg.add([696],1.0, 'REPLACE')
    vg.add([697],1.0, 'REPLACE')
    vg.add([698],0.8749977946281433, 'REPLACE')
    vg.add([699],0.832818865776062, 'REPLACE')
    vg.add([700],0.875, 'REPLACE')
    vg.add([702],0.5, 'REPLACE')
    vg.add([703],0.75, 'REPLACE')
    vg.add([715],1.0, 'REPLACE')
    vg.add([716],0.25, 'REPLACE')
    vg.add([717],0.4375, 'REPLACE')
    vg.add([718],0.875, 'REPLACE')
    vg.add([1008],0.011516462080180645, 'REPLACE')
    vg.add([1013],0.0007733193342573941, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_fix_L")
    vg.add([102],0.5, 'REPLACE')
    vg.add([103],0.5, 'REPLACE')
    vg.add([106],0.25, 'REPLACE')
    vg.add([123],0.5, 'REPLACE')
    vg.add([125],0.5, 'REPLACE')
    vg.add([147],0.10000000149011612, 'REPLACE')
    vg.add([157],0.25, 'REPLACE')
    vg.add([158],0.125, 'REPLACE')
    vg.add([161],0.25, 'REPLACE')
    vg.add([168],0.18069791793823242, 'REPLACE')
    vg.add([184],0.10000000149011612, 'REPLACE')
    vg.add([190],0.5, 'REPLACE')
    vg.add([191],0.5, 'REPLACE')
    vg.add([194],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_fix_R")
    vg.add([604],0.5, 'REPLACE')
    vg.add([605],0.5, 'REPLACE')
    vg.add([608],0.25, 'REPLACE')
    vg.add([625],0.5, 'REPLACE')
    vg.add([627],0.5, 'REPLACE')
    vg.add([649],0.10000000149011612, 'REPLACE')
    vg.add([659],0.25, 'REPLACE')
    vg.add([660],0.125, 'REPLACE')
    vg.add([663],0.25, 'REPLACE')
    vg.add([670],0.18069791793823242, 'REPLACE')
    vg.add([686],0.10000000149011612, 'REPLACE')
    vg.add([692],0.5, 'REPLACE')
    vg.add([693],0.5, 'REPLACE')
    vg.add([696],0.5, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_twist_def_L")
    vg.add([90],0.0, 'REPLACE')
    vg.add([91],0.0, 'REPLACE')
    vg.add([92],0.05927117541432381, 'REPLACE')
    vg.add([93],0.05973152816295624, 'REPLACE')
    vg.add([94],1.0, 'REPLACE')
    vg.add([95],1.0, 'REPLACE')
    vg.add([96],1.0, 'REPLACE')
    vg.add([97],1.0, 'REPLACE')
    vg.add([98],1.0, 'REPLACE')
    vg.add([99],1.0, 'REPLACE')
    vg.add([100],1.0, 'REPLACE')
    vg.add([101],1.0, 'REPLACE')
    vg.add([117],0.0, 'REPLACE')
    vg.add([118],0.04981982335448265, 'REPLACE')
    vg.add([119],1.0, 'REPLACE')
    vg.add([120],1.0, 'REPLACE')
    vg.add([121],1.0, 'REPLACE')
    vg.add([122],1.0, 'REPLACE')
    vg.add([132],0.1075970008969307, 'REPLACE')
    vg.add([134],1.0, 'REPLACE')
    vg.add([135],1.0, 'REPLACE')
    vg.add([136],1.0, 'REPLACE')
    vg.add([137],1.0, 'REPLACE')
    vg.add([148],0.5, 'REPLACE')
    vg.add([149],0.5, 'REPLACE')
    vg.add([150],0.5, 'REPLACE')
    vg.add([151],0.5, 'REPLACE')
    vg.add([152],0.5, 'REPLACE')
    vg.add([153],0.5, 'REPLACE')
    vg.add([154],0.5, 'REPLACE')
    vg.add([155],0.5, 'REPLACE')
    vg.add([157],0.25, 'REPLACE')
    vg.add([158],0.25, 'REPLACE')
    vg.add([159],0.25, 'REPLACE')
    vg.add([160],0.25, 'REPLACE')
    vg.add([161],0.25, 'REPLACE')
    vg.add([162],0.25, 'REPLACE')
    vg.add([163],0.25, 'REPLACE')
    vg.add([164],0.25, 'REPLACE')
    vg.add([165],1.0, 'REPLACE')
    vg.add([166],1.0, 'REPLACE')
    vg.add([167],1.0, 'REPLACE')
    vg.add([190],0.125, 'REPLACE')
    vg.add([191],0.125, 'REPLACE')
    vg.add([192],0.125, 'REPLACE')
    vg.add([193],0.125, 'REPLACE')
    vg.add([194],0.125, 'REPLACE')
    vg.add([195],0.125, 'REPLACE')
    vg.add([196],0.125, 'REPLACE')
    vg.add([197],0.125, 'REPLACE')
    vg.add([198],0.125, 'REPLACE')
    vg.add([199],1.0, 'REPLACE')
    vg.add([200],0.5, 'REPLACE')
    vg.add([201],0.25, 'REPLACE')
    vg.add([202],1.0, 'REPLACE')
    vg.add([203],1.0, 'REPLACE')
    vg.add([204],0.6472578644752502, 'REPLACE')
    vg.add([205],0.6072916388511658, 'REPLACE')
    vg.add([206],1.0, 'REPLACE')
    vg.add([207],1.0, 'REPLACE')
    vg.add([208],0.770643413066864, 'REPLACE')
    vg.add([209],1.0, 'REPLACE')
    vg.add([210],1.0, 'REPLACE')
    vg.add([211],0.8521532416343689, 'REPLACE')
    vg.add([212],1.0, 'REPLACE')
    vg.add([216],0.125, 'REPLACE')
    vg = ob.vertex_groups.new("thigh_twist_def_R")
    vg.add([592],0.0, 'REPLACE')
    vg.add([593],0.0, 'REPLACE')
    vg.add([594],0.05927117541432381, 'REPLACE')
    vg.add([595],0.05973152816295624, 'REPLACE')
    vg.add([596],1.0, 'REPLACE')
    vg.add([597],1.0, 'REPLACE')
    vg.add([598],1.0, 'REPLACE')
    vg.add([599],1.0, 'REPLACE')
    vg.add([600],1.0, 'REPLACE')
    vg.add([601],1.0, 'REPLACE')
    vg.add([602],1.0, 'REPLACE')
    vg.add([603],1.0, 'REPLACE')
    vg.add([619],0.0, 'REPLACE')
    vg.add([620],0.04981982335448265, 'REPLACE')
    vg.add([621],1.0, 'REPLACE')
    vg.add([622],1.0, 'REPLACE')
    vg.add([623],1.0, 'REPLACE')
    vg.add([624],1.0, 'REPLACE')
    vg.add([634],0.1075970008969307, 'REPLACE')
    vg.add([636],1.0, 'REPLACE')
    vg.add([637],1.0, 'REPLACE')
    vg.add([638],1.0, 'REPLACE')
    vg.add([639],1.0, 'REPLACE')
    vg.add([650],0.5, 'REPLACE')
    vg.add([651],0.5, 'REPLACE')
    vg.add([652],0.5, 'REPLACE')
    vg.add([653],0.5, 'REPLACE')
    vg.add([654],0.5, 'REPLACE')
    vg.add([655],0.5, 'REPLACE')
    vg.add([656],0.5, 'REPLACE')
    vg.add([657],0.5, 'REPLACE')
    vg.add([659],0.25, 'REPLACE')
    vg.add([660],0.25, 'REPLACE')
    vg.add([661],0.25, 'REPLACE')
    vg.add([662],0.25, 'REPLACE')
    vg.add([663],0.25, 'REPLACE')
    vg.add([664],0.25, 'REPLACE')
    vg.add([665],0.25, 'REPLACE')
    vg.add([666],0.25, 'REPLACE')
    vg.add([667],1.0, 'REPLACE')
    vg.add([668],1.0, 'REPLACE')
    vg.add([669],1.0, 'REPLACE')
    vg.add([692],0.125, 'REPLACE')
    vg.add([693],0.125, 'REPLACE')
    vg.add([694],0.125, 'REPLACE')
    vg.add([695],0.125, 'REPLACE')
    vg.add([696],0.125, 'REPLACE')
    vg.add([697],0.125, 'REPLACE')
    vg.add([698],0.125, 'REPLACE')
    vg.add([699],0.125, 'REPLACE')
    vg.add([700],0.125, 'REPLACE')
    vg.add([701],1.0, 'REPLACE')
    vg.add([702],0.5, 'REPLACE')
    vg.add([703],0.25, 'REPLACE')
    vg.add([704],1.0, 'REPLACE')
    vg.add([705],1.0, 'REPLACE')
    vg.add([706],0.6472578644752502, 'REPLACE')
    vg.add([707],0.6072916388511658, 'REPLACE')
    vg.add([708],1.0, 'REPLACE')
    vg.add([709],1.0, 'REPLACE')
    vg.add([710],0.770643413066864, 'REPLACE')
    vg.add([711],1.0, 'REPLACE')
    vg.add([712],1.0, 'REPLACE')
    vg.add([713],0.8521532416343689, 'REPLACE')
    vg.add([714],1.0, 'REPLACE')
    vg.add([718],0.125, 'REPLACE')
    vg = ob.vertex_groups.new("toe_1_def_L")
    vg.add([16],1.0, 'REPLACE')
    vg.add([17],1.0, 'REPLACE')
    vg.add([18],0.25, 'REPLACE')
    vg.add([19],0.25, 'REPLACE')
    vg.add([28],1.0, 'REPLACE')
    vg.add([29],0.25, 'REPLACE')
    vg.add([68],1.0, 'REPLACE')
    vg.add([69],0.25, 'REPLACE')
    vg.add([74],1.0, 'REPLACE')
    vg.add([75],1.0, 'REPLACE')
    vg.add([76],1.0, 'REPLACE')
    vg.add([77],1.0, 'REPLACE')
    vg.add([78],1.0, 'REPLACE')
    vg.add([79],1.0, 'REPLACE')
    vg.add([80],1.0, 'REPLACE')
    vg.add([81],1.0, 'REPLACE')
    vg.add([82],0.25, 'REPLACE')
    vg.add([83],0.25, 'REPLACE')
    vg.add([84],0.5, 'REPLACE')
    vg.add([85],0.5, 'REPLACE')
    vg.add([86],0.25, 'REPLACE')
    vg.add([87],0.5, 'REPLACE')
    vg.add([88],0.25, 'REPLACE')
    vg.add([89],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("toe_1_def_R")
    vg.add([518],1.0, 'REPLACE')
    vg.add([519],1.0, 'REPLACE')
    vg.add([520],0.25, 'REPLACE')
    vg.add([521],0.25, 'REPLACE')
    vg.add([530],1.0, 'REPLACE')
    vg.add([531],0.25, 'REPLACE')
    vg.add([570],1.0, 'REPLACE')
    vg.add([571],0.25, 'REPLACE')
    vg.add([576],1.0, 'REPLACE')
    vg.add([577],1.0, 'REPLACE')
    vg.add([578],1.0, 'REPLACE')
    vg.add([579],1.0, 'REPLACE')
    vg.add([580],1.0, 'REPLACE')
    vg.add([581],1.0, 'REPLACE')
    vg.add([582],1.0, 'REPLACE')
    vg.add([583],1.0, 'REPLACE')
    vg.add([584],0.25, 'REPLACE')
    vg.add([585],0.25, 'REPLACE')
    vg.add([586],0.5, 'REPLACE')
    vg.add([587],0.5, 'REPLACE')
    vg.add([588],0.25, 'REPLACE')
    vg.add([589],0.5, 'REPLACE')
    vg.add([590],0.25, 'REPLACE')
    vg.add([591],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("toe_2_def_L")
    vg.add([1],1.0, 'REPLACE')
    vg.add([2],1.0, 'REPLACE')
    vg.add([5],1.0, 'REPLACE')
    vg.add([6],1.0, 'REPLACE')
    vg.add([20],1.0, 'REPLACE')
    vg.add([22],1.0, 'REPLACE')
    vg.add([62],1.0, 'REPLACE')
    vg.add([64],1.0, 'REPLACE')
    vg.add([70],1.0, 'REPLACE')
    vg.add([74],0.25, 'REPLACE')
    vg.add([75],0.25, 'REPLACE')
    vg.add([76],0.25, 'REPLACE')
    vg.add([77],0.25, 'REPLACE')
    vg.add([78],0.25, 'REPLACE')
    vg.add([79],0.25, 'REPLACE')
    vg.add([80],0.25, 'REPLACE')
    vg.add([81],0.25, 'REPLACE')
    vg.add([82],1.0, 'REPLACE')
    vg.add([83],1.0, 'REPLACE')
    vg.add([84],1.0, 'REPLACE')
    vg.add([85],1.0, 'REPLACE')
    vg.add([86],1.0, 'REPLACE')
    vg.add([87],1.0, 'REPLACE')
    vg.add([88],1.0, 'REPLACE')
    vg.add([89],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_2_def_R")
    vg.add([503],1.0, 'REPLACE')
    vg.add([504],1.0, 'REPLACE')
    vg.add([507],1.0, 'REPLACE')
    vg.add([508],1.0, 'REPLACE')
    vg.add([522],1.0, 'REPLACE')
    vg.add([524],1.0, 'REPLACE')
    vg.add([564],1.0, 'REPLACE')
    vg.add([566],1.0, 'REPLACE')
    vg.add([572],1.0, 'REPLACE')
    vg.add([576],0.25, 'REPLACE')
    vg.add([577],0.25, 'REPLACE')
    vg.add([578],0.25, 'REPLACE')
    vg.add([579],0.25, 'REPLACE')
    vg.add([580],0.25, 'REPLACE')
    vg.add([581],0.25, 'REPLACE')
    vg.add([582],0.25, 'REPLACE')
    vg.add([583],0.25, 'REPLACE')
    vg.add([584],1.0, 'REPLACE')
    vg.add([585],1.0, 'REPLACE')
    vg.add([586],1.0, 'REPLACE')
    vg.add([587],1.0, 'REPLACE')
    vg.add([588],1.0, 'REPLACE')
    vg.add([589],1.0, 'REPLACE')
    vg.add([590],1.0, 'REPLACE')
    vg.add([591],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_L")
    vg.add([18],0.5, 'REPLACE')
    vg.add([19],0.5, 'REPLACE')
    vg.add([25],0.10000000149011612, 'REPLACE')
    vg.add([29],1.0, 'REPLACE')
    vg.add([76],1.0, 'REPLACE')
    vg.add([77],1.0, 'REPLACE')
    vg.add([79],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_low_1_L")
    vg.add([16],0.25, 'REPLACE')
    vg.add([17],0.25, 'REPLACE')
    vg.add([28],0.25, 'REPLACE')
    vg.add([74],0.5, 'REPLACE')
    vg.add([75],0.5, 'REPLACE')
    vg.add([78],0.5, 'REPLACE')
    vg.add([82],0.25, 'REPLACE')
    vg.add([83],0.25, 'REPLACE')
    vg.add([86],0.25, 'REPLACE')
    vg.add([510],0.0, 'REPLACE')
    vg.add([511],0.0, 'REPLACE')
    vg.add([518],0.0, 'REPLACE')
    vg.add([519],0.0, 'REPLACE')
    vg.add([526],0.0, 'REPLACE')
    vg.add([530],0.0, 'REPLACE')
    vg.add([576],0.0, 'REPLACE')
    vg.add([577],0.0, 'REPLACE')
    vg.add([580],0.0, 'REPLACE')
    vg.add([582],0.0, 'REPLACE')
    vg.add([583],0.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_low_1_R")
    vg.add([8],0.0, 'REPLACE')
    vg.add([9],0.0, 'REPLACE')
    vg.add([16],0.0, 'REPLACE')
    vg.add([17],0.0, 'REPLACE')
    vg.add([24],0.0, 'REPLACE')
    vg.add([28],0.0, 'REPLACE')
    vg.add([74],0.0, 'REPLACE')
    vg.add([75],0.0, 'REPLACE')
    vg.add([78],0.0, 'REPLACE')
    vg.add([80],0.0, 'REPLACE')
    vg.add([81],0.0, 'REPLACE')
    vg.add([518],0.25, 'REPLACE')
    vg.add([519],0.25, 'REPLACE')
    vg.add([530],0.25, 'REPLACE')
    vg.add([576],0.5, 'REPLACE')
    vg.add([577],0.5, 'REPLACE')
    vg.add([580],0.5, 'REPLACE')
    vg.add([584],0.25, 'REPLACE')
    vg.add([585],0.25, 'REPLACE')
    vg.add([588],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_R")
    vg.add([520],0.5, 'REPLACE')
    vg.add([521],0.5, 'REPLACE')
    vg.add([527],0.10000000149011612, 'REPLACE')
    vg.add([531],1.0, 'REPLACE')
    vg.add([578],1.0, 'REPLACE')
    vg.add([579],1.0, 'REPLACE')
    vg.add([581],1.0, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_up_1_L")
    vg.add([18],0.25, 'REPLACE')
    vg.add([19],0.25, 'REPLACE')
    vg.add([29],0.25, 'REPLACE')
    vg.add([76],0.5, 'REPLACE')
    vg.add([77],0.5, 'REPLACE')
    vg.add([79],0.5, 'REPLACE')
    vg.add([84],0.25, 'REPLACE')
    vg.add([85],0.25, 'REPLACE')
    vg.add([87],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("toe_fix_up_1_R")
    vg.add([520],0.25, 'REPLACE')
    vg.add([521],0.25, 'REPLACE')
    vg.add([531],0.25, 'REPLACE')
    vg.add([578],0.5, 'REPLACE')
    vg.add([579],0.5, 'REPLACE')
    vg.add([581],0.5, 'REPLACE')
    vg.add([586],0.25, 'REPLACE')
    vg.add([587],0.25, 'REPLACE')
    vg.add([589],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("wrist_fix_low_L")
    vg.add([269],0.25, 'REPLACE')
    vg.add([270],0.25, 'REPLACE')
    vg.add([273],0.25, 'REPLACE')
    vg.add([320],0.25, 'REPLACE')
    vg.add([321],0.25, 'REPLACE')
    vg.add([324],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("wrist_fix_low_R")
    vg.add([771],0.25, 'REPLACE')
    vg.add([772],0.25, 'REPLACE')
    vg.add([775],0.25, 'REPLACE')
    vg.add([822],0.25, 'REPLACE')
    vg.add([823],0.25, 'REPLACE')
    vg.add([826],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("wrist_fix_up_L")
    vg.add([267],0.5, 'REPLACE')
    vg.add([268],0.5, 'REPLACE')
    vg.add([271],0.5, 'REPLACE')
    vg.add([318],0.25, 'REPLACE')
    vg.add([319],0.25, 'REPLACE')
    vg.add([322],0.25, 'REPLACE')
    vg = ob.vertex_groups.new("wrist_fix_up_R")
    vg.add([769],0.5, 'REPLACE')
    vg.add([770],0.5, 'REPLACE')
    vg.add([773],0.5, 'REPLACE')
    vg.add([820],0.25, 'REPLACE')
    vg.add([821],0.25, 'REPLACE')
    vg.add([824],0.25, 'REPLACE')

      
   
    # Add Aramture modifier        
    mod = ob.modifiers.new('Armature', 'ARMATURE')
    mod.object = bpy.data.objects[self.blenrig_armature_name[0]]
    mod.use_vertex_groups = True
    mod.use_deform_preserve_volume = True

    # Add Lattice Modifier       
    mod = ob.modifiers.new('Body_Lattice', 'LATTICE')
    for N in self.blenrig_lattice_names:
        if N.startswith('LATTICE_BODY'):
            mod.object = bpy.data.objects[N]
    mod.vertex_group = 'lattice_body'
    mod.strength = 1.0
    
    ob.layers = (False, False, False, False, False, False, False, False, False, False, False, True, False, False, False, False, False, False, False, False)
    